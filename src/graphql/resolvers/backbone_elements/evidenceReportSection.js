// ------ This code is generated by a code generator.  Do not edit. ------

// noinspection JSUnusedLocalSymbols
module.exports = {
    EvidenceReportSectionFocusReferenceV2: {
        __resolveType(obj, context, info) {
            return context.dataApi.resolveType(obj, context, info);
        }
    },
    EvidenceReportSectionAuthor: {
        __resolveType(obj, context, info) {
            return context.dataApi.resolveType(obj, context, info);
        }
    },
    EvidenceReportSectionEntryReferenceV2: {
        __resolveType(obj, context, info) {
            return context.dataApi.resolveType(obj, context, info);
        }
    },
    EvidenceReportSection: {
        // noinspection JSUnusedLocalSymbols

        focusReferenceV2: async (parent, args, context, info) => {
            return await context.dataApi.findResourceByReference(
                parent,
                args,
                context,
                info,
                parent.focusReference);
        },
        // noinspection JSUnusedLocalSymbols

        focusReference: async (parent, args, context, info) => {
            return await context.dataApi.findResourceByReference(
                parent,
                args,
                context,
                info,
                parent.focusReference);
        },
        // noinspection JSUnusedLocalSymbols

        author: async (parent, args, context, info) => {
            return await context.dataApi.findResourcesByReference(
                parent,
                args,
                context,
                info,
                parent.author);
        },
        // noinspection JSUnusedLocalSymbols

        entryReferenceV2: async (parent, args, context, info) => {
            return await context.dataApi.findResourcesByReference(
                parent,
                args,
                context,
                info,
                parent.entryReference);
        },
        // noinspection JSUnusedLocalSymbols

        entryReference: async (parent, args, context, info) => {
            return await context.dataApi.findResourcesByReference(
                parent,
                args,
                context,
                info,
                parent.entryReference);
        }
    }
};
