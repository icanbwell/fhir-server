// ------ This code is generated by a code generator.  Do not edit. ------

// noinspection JSUnusedLocalSymbols
module.exports = {
    CompositionSectionAuthor: {
        __resolveType(obj, context, info) {
            return context.dataApi.resolveType(obj, context, info);
        }
    },
    CompositionSectionFocusV2: {
        __resolveType(obj, context, info) {
            return context.dataApi.resolveType(obj, context, info);
        }
    },
    CompositionSectionEntryV2: {
        __resolveType(obj, context, info) {
            return context.dataApi.resolveType(obj, context, info);
        }
    },
    CompositionSection: {
        // noinspection JSUnusedLocalSymbols

        author: async (parent, args, context, info) => {
            return await context.dataApi.findResourcesByReference(
                parent,
                args,
                context,
                info,
                parent.author);
        },
        // noinspection JSUnusedLocalSymbols

        focusV2: async (parent, args, context, info) => {
            return await context.dataApi.findResourceByReference(
                parent,
                args,
                context,
                info,
                parent.focus);
        },
        // noinspection JSUnusedLocalSymbols

        focus: async (parent, args, context, info) => {
            return await context.dataApi.findResourceByReference(
                parent,
                args,
                context,
                info,
                parent.focus);
        },
        // noinspection JSUnusedLocalSymbols

        entryV2: async (parent, args, context, info) => {
            return await context.dataApi.findResourcesByReference(
                parent,
                args,
                context,
                info,
                parent.entry);
        },
        // noinspection JSUnusedLocalSymbols

        entry: async (parent, args, context, info) => {
            return await context.dataApi.findResourcesByReference(
                parent,
                args,
                context,
                info,
                parent.entry);
        }
    }
};
