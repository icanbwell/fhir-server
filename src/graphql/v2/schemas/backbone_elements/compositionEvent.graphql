# This file is auto-generated by generate_classes so do not edit manually
# import Extension from "../extensions/extension.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Period from "../complex_types/period.graphql"
# import Account from "../resources/account.graphql"
# import ActivityDefinition from "../resources/activityDefinition.graphql"
# import AdverseEvent from "../resources/adverseEvent.graphql"
# import AllergyIntolerance from "../resources/allergyIntolerance.graphql"
# import Appointment from "../resources/appointment.graphql"
# import AppointmentResponse from "../resources/appointmentResponse.graphql"
# import AuditEvent from "../resources/auditEvent.graphql"
# import Basic from "../resources/basic.graphql"
# import Binary from "../resources/binary.graphql"
# import BiologicallyDerivedProduct from "../resources/biologicallyDerivedProduct.graphql"
# import BodyStructure from "../resources/bodyStructure.graphql"
# import Bundle from "../resources/bundle.graphql"
# import CapabilityStatement from "../resources/capabilityStatement.graphql"
# import CarePlan from "../resources/carePlan.graphql"
# import CareTeam from "../resources/careTeam.graphql"
# import CatalogEntry from "../resources/catalogEntry.graphql"
# import ChargeItem from "../resources/chargeItem.graphql"
# import ChargeItemDefinition from "../resources/chargeItemDefinition.graphql"
# import Claim from "../resources/claim.graphql"
# import ClaimResponse from "../resources/claimResponse.graphql"
# import ClinicalImpression from "../resources/clinicalImpression.graphql"
# import CodeSystem from "../resources/codeSystem.graphql"
# import Communication from "../resources/communication.graphql"
# import CommunicationRequest from "../resources/communicationRequest.graphql"
# import CompartmentDefinition from "../resources/compartmentDefinition.graphql"
# import Composition from "../resources/composition.graphql"
# import ConceptMap from "../resources/conceptMap.graphql"
# import Condition from "../resources/condition.graphql"
# import Consent from "../resources/consent.graphql"
# import Contract from "../resources/contract.graphql"
# import Coverage from "../resources/coverage.graphql"
# import CoverageEligibilityRequest from "../resources/coverageEligibilityRequest.graphql"
# import CoverageEligibilityResponse from "../resources/coverageEligibilityResponse.graphql"
# import DetectedIssue from "../resources/detectedIssue.graphql"
# import Device from "../resources/device.graphql"
# import DeviceDefinition from "../resources/deviceDefinition.graphql"
# import DeviceMetric from "../resources/deviceMetric.graphql"
# import DeviceRequest from "../resources/deviceRequest.graphql"
# import DeviceUseStatement from "../resources/deviceUseStatement.graphql"
# import DiagnosticReport from "../resources/diagnosticReport.graphql"
# import DocumentManifest from "../resources/documentManifest.graphql"
# import DocumentReference from "../resources/documentReference.graphql"
# import EffectEvidenceSynthesis from "../resources/effectEvidenceSynthesis.graphql"
# import Encounter from "../resources/encounter.graphql"
# import Endpoint from "../resources/endpoint.graphql"
# import EnrollmentRequest from "../resources/enrollmentRequest.graphql"
# import EnrollmentResponse from "../resources/enrollmentResponse.graphql"
# import EpisodeOfCare from "../resources/episodeOfCare.graphql"
# import EventDefinition from "../resources/eventDefinition.graphql"
# import Evidence from "../resources/evidence.graphql"
# import EvidenceVariable from "../resources/evidenceVariable.graphql"
# import ExampleScenario from "../resources/exampleScenario.graphql"
# import ExplanationOfBenefit from "../resources/explanationOfBenefit.graphql"
# import FamilyMemberHistory from "../resources/familyMemberHistory.graphql"
# import Flag from "../resources/flag.graphql"
# import Goal from "../resources/goal.graphql"
# import GraphDefinition from "../resources/graphDefinition.graphql"
# import Group from "../resources/group.graphql"
# import GuidanceResponse from "../resources/guidanceResponse.graphql"
# import HealthcareService from "../resources/healthcareService.graphql"
# import ImagingStudy from "../resources/imagingStudy.graphql"
# import Immunization from "../resources/immunization.graphql"
# import ImmunizationEvaluation from "../resources/immunizationEvaluation.graphql"
# import ImmunizationRecommendation from "../resources/immunizationRecommendation.graphql"
# import ImplementationGuide from "../resources/implementationGuide.graphql"
# import InsurancePlan from "../resources/insurancePlan.graphql"
# import Invoice from "../resources/invoice.graphql"
# import Library from "../resources/library.graphql"
# import Linkage from "../resources/linkage.graphql"
# import List from "../resources/list.graphql"
# import Location from "../resources/location.graphql"
# import Measure from "../resources/measure.graphql"
# import MeasureReport from "../resources/measureReport.graphql"
# import Media from "../resources/media.graphql"
# import Medication from "../resources/medication.graphql"
# import MedicationAdministration from "../resources/medicationAdministration.graphql"
# import MedicationDispense from "../resources/medicationDispense.graphql"
# import MedicationKnowledge from "../resources/medicationKnowledge.graphql"
# import MedicationRequest from "../resources/medicationRequest.graphql"
# import MedicationStatement from "../resources/medicationStatement.graphql"
# import MedicinalProduct from "../resources/medicinalProduct.graphql"
# import MedicinalProductAuthorization from "../resources/medicinalProductAuthorization.graphql"
# import MedicinalProductContraindication from "../resources/medicinalProductContraindication.graphql"
# import MedicinalProductIndication from "../resources/medicinalProductIndication.graphql"
# import MedicinalProductIngredient from "../resources/medicinalProductIngredient.graphql"
# import MedicinalProductInteraction from "../resources/medicinalProductInteraction.graphql"
# import MedicinalProductManufactured from "../resources/medicinalProductManufactured.graphql"
# import MedicinalProductPackaged from "../resources/medicinalProductPackaged.graphql"
# import MedicinalProductPharmaceutical from "../resources/medicinalProductPharmaceutical.graphql"
# import MedicinalProductUndesirableEffect from "../resources/medicinalProductUndesirableEffect.graphql"
# import MessageDefinition from "../resources/messageDefinition.graphql"
# import MessageHeader from "../resources/messageHeader.graphql"
# import MolecularSequence from "../resources/molecularSequence.graphql"
# import NamingSystem from "../resources/namingSystem.graphql"
# import NutritionOrder from "../resources/nutritionOrder.graphql"
# import Observation from "../resources/observation.graphql"
# import ObservationDefinition from "../resources/observationDefinition.graphql"
# import OperationDefinition from "../resources/operationDefinition.graphql"
# import OperationOutcome from "../resources/operationOutcome.graphql"
# import Organization from "../resources/organization.graphql"
# import OrganizationAffiliation from "../resources/organizationAffiliation.graphql"
# import Patient from "../resources/patient.graphql"
# import PaymentNotice from "../resources/paymentNotice.graphql"
# import PaymentReconciliation from "../resources/paymentReconciliation.graphql"
# import Person from "../resources/person.graphql"
# import PlanDefinition from "../resources/planDefinition.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import Procedure from "../resources/procedure.graphql"
# import Provenance from "../resources/provenance.graphql"
# import Questionnaire from "../resources/questionnaire.graphql"
# import QuestionnaireResponse from "../resources/questionnaireResponse.graphql"
# import RelatedPerson from "../resources/relatedPerson.graphql"
# import RequestGroup from "../resources/requestGroup.graphql"
# import ResearchDefinition from "../resources/researchDefinition.graphql"
# import ResearchElementDefinition from "../resources/researchElementDefinition.graphql"
# import ResearchStudy from "../resources/researchStudy.graphql"
# import ResearchSubject from "../resources/researchSubject.graphql"
# import RiskAssessment from "../resources/riskAssessment.graphql"
# import RiskEvidenceSynthesis from "../resources/riskEvidenceSynthesis.graphql"
# import Schedule from "../resources/schedule.graphql"
# import SearchParameter from "../resources/searchParameter.graphql"
# import ServiceRequest from "../resources/serviceRequest.graphql"
# import Slot from "../resources/slot.graphql"
# import Specimen from "../resources/specimen.graphql"
# import SpecimenDefinition from "../resources/specimenDefinition.graphql"
# import StructureDefinition from "../resources/structureDefinition.graphql"
# import StructureMap from "../resources/structureMap.graphql"
# import Subscription from "../resources/subscription.graphql"
# import Substance from "../resources/substance.graphql"
# import SubstanceNucleicAcid from "../resources/substanceNucleicAcid.graphql"
# import SubstancePolymer from "../resources/substancePolymer.graphql"
# import SubstanceProtein from "../resources/substanceProtein.graphql"
# import SubstanceReferenceInformation from "../resources/substanceReferenceInformation.graphql"
# import SubstanceSourceMaterial from "../resources/substanceSourceMaterial.graphql"
# import SubstanceSpecification from "../resources/substanceSpecification.graphql"
# import SupplyDelivery from "../resources/supplyDelivery.graphql"
# import SupplyRequest from "../resources/supplyRequest.graphql"
# import Task from "../resources/task.graphql"
# import TerminologyCapabilities from "../resources/terminologyCapabilities.graphql"
# import TestReport from "../resources/testReport.graphql"
# import TestScript from "../resources/testScript.graphql"
# import ValueSet from "../resources/valueSet.graphql"
# import VerificationResult from "../resources/verificationResult.graphql"
# import VisionPrescription from "../resources/visionPrescription.graphql"
# import Parameters from "../resources/parameters.graphql"
# import Resource from "../resources/resource.graphql"

union CompositionEventDetailV2 = Account | ActivityDefinition | AdverseEvent | AllergyIntolerance | Appointment | AppointmentResponse | AuditEvent | Basic | Binary | BiologicallyDerivedProduct | BodyStructure | Bundle | CapabilityStatement | CarePlan | CareTeam | CatalogEntry | ChargeItem | ChargeItemDefinition | Claim | ClaimResponse | ClinicalImpression | CodeSystem | Communication | CommunicationRequest | CompartmentDefinition | Composition | ConceptMap | Condition | Consent | Contract | Coverage | CoverageEligibilityRequest | CoverageEligibilityResponse | DetectedIssue | Device | DeviceDefinition | DeviceMetric | DeviceRequest | DeviceUseStatement | DiagnosticReport | DocumentManifest | DocumentReference | EffectEvidenceSynthesis | Encounter | Endpoint | EnrollmentRequest | EnrollmentResponse | EpisodeOfCare | EventDefinition | Evidence | EvidenceVariable | ExampleScenario | ExplanationOfBenefit | FamilyMemberHistory | Flag | Goal | GraphDefinition | Group | GuidanceResponse | HealthcareService | ImagingStudy | Immunization | ImmunizationEvaluation | ImmunizationRecommendation | ImplementationGuide | InsurancePlan | Invoice | Library | Linkage | List | Location | Measure | MeasureReport | Media | Medication | MedicationAdministration | MedicationDispense | MedicationKnowledge | MedicationRequest | MedicationStatement | MedicinalProduct | MedicinalProductAuthorization | MedicinalProductContraindication | MedicinalProductIndication | MedicinalProductIngredient | MedicinalProductInteraction | MedicinalProductManufactured | MedicinalProductPackaged | MedicinalProductPharmaceutical | MedicinalProductUndesirableEffect | MessageDefinition | MessageHeader | MolecularSequence | NamingSystem | NutritionOrder | Observation | ObservationDefinition | OperationDefinition | OperationOutcome | Organization | OrganizationAffiliation | Patient | PaymentNotice | PaymentReconciliation | Person | PlanDefinition | Practitioner | PractitionerRole | Procedure | Provenance | Questionnaire | QuestionnaireResponse | RelatedPerson | RequestGroup | ResearchDefinition | ResearchElementDefinition | ResearchStudy | ResearchSubject | RiskAssessment | RiskEvidenceSynthesis | Schedule | SearchParameter | ServiceRequest | Slot | Specimen | SpecimenDefinition | StructureDefinition | StructureMap | Subscription | Substance | SubstanceNucleicAcid | SubstancePolymer | SubstanceProtein | SubstanceReferenceInformation | SubstanceSourceMaterial | SubstanceSpecification | SupplyDelivery | SupplyRequest | Task | TerminologyCapabilities | TestReport | TestScript | ValueSet | VerificationResult | VisionPrescription | Parameters | Resource

"""
Composition.Event
    A set of healthcare-related information that is assembled together into a
    single logical package that provides a single coherent statement of meaning,
    establishes its own context and that has clinical attestation with regard to
    who is making the statement. A Composition defines the structure and narrative
    content necessary for a document. However, a Composition alone does not
    constitute a document. Rather, the Composition must be the first entry in a
    Bundle where Bundle.type=document, and any other resources referenced from
    Composition must be included as subsequent entries in the Bundle (for example
    Patient, Practitioner, Encounter, etc.).
"""
type CompositionEvent {
    """
    None
    """
    id: String        
    """
    May be used to represent additional information that is not part of the basic
    definition of the element. To make the use of extensions safe and manageable,
    there is a strict set of governance  applied to the definition and use of
    extensions. Though any implementer can define an extension, there is a set of
    requirements that SHALL be met as part of the definition of the extension.
    """
    extension: [Extension]        
    """
    May be used to represent additional information that is not part of the basic
    definition of the element and that modifies the understanding of the element
    in which it is contained and/or the understanding of the containing element's
    descendants. Usually modifier elements provide negation or qualification. To
    make the use of extensions safe and manageable, there is a strict set of
    governance applied to the definition and use of extensions. Though any
    implementer can define an extension, there is a set of requirements that SHALL
    be met as part of the definition of the extension. Applications processing a
    resource are required to check for modifier extensions.
    
    Modifier extensions SHALL NOT change the meaning of any elements on Resource
    or DomainResource (including cannot change the meaning of modifierExtension
    itself).
    """
    modifierExtension: [Extension]        
    """
    This list of codes represents the main clinical acts, such as a colonoscopy or
    an appendectomy, being documented. In some cases, the event is inherent in the
    typeCode, such as a "History and Physical Report" in which the procedure being
    documented is necessarily a "History and Physical" act.
    """
    code: [CodeableConcept]        
    """
    The period of time covered by the documentation. There is no assertion that
    the documentation is a complete representation for this period, only that it
    documents events during this time.
    """
    period: Period        
    """
    The description and/or reference of the event(s) being documented. For
    example, this could be used to document such a colonoscopy or an appendectomy.
    """
    detailV2: [CompositionEventDetailV2]        
    """
    The description and/or reference of the event(s) being documented. For
    example, this could be used to document such a colonoscopy or an appendectomy.
    """
    detail: [Resource]        
}