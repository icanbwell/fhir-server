# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Period from "../complex_types/period.graphql"
# import Resource from "../resources/resource.graphql"



type CompositionEvent {
    """
    Composition.Event
        A set of healthcare-related information that is assembled together into a
    single logical package that provides a single coherent statement of meaning,
    establishes its own context and that has clinical attestation with regard to
    who is making the statement. A Composition defines the structure and narrative
    content necessary for a document. However, a Composition alone does not
    constitute a document. Rather, the Composition must be the first entry in a
    Bundle where Bundle.type=document, and any other resources referenced from
    Composition must be included as subsequent entries in the Bundle (for example
    Patient, Practitioner, Encounter, etc.).
    """
    id: code        
    extension: [Extension]        
    modifierExtension: [Extension]        
    code: [CodeableConcept]        
    period: Period        
    detail: [Resource]        
}