# This file is auto-generated by generate_classes so do not edit manually
# import TotalType from "../enums.graphql"

extend type Query {
    """
    Practitioner
        A person who is directly or indirectly involved in the provisioning of
    healthcare.
        If the element is present, it must have either a @value, an @id, or extensions
    """
    practitioner(

        # some old search parameters that we misspelled in the past so have to maintain backwards compatibility
        """
        list of ids to retrieve.  DEPRECATED: Use `_id`
        """
        id: [String]

        """
        list of sources to retrieve. DEPRECATED: Use `_source`
        """
        source: [String]

        # search parameters for all resources
        """
        _id [token]
        Logical id of this artifact
        """
        _id: [String]
        """
        _lastUpdated [date]
        When the resource version last changed
        """
        _lastUpdated: [String]
        """
        _profile [uri]
        Profiles this resource claims to conform to
        """
        _profile: [String]
        """
        _security [token]
        Security Labels applied to this resource
        """
        _security: [String]
        """
        _source [uri]
        Identifies where the resource comes from
        """
        _source: [String]
        """
        _tag [token]
        Tags applied to this resource
        """
        _tag: [String]


        # search parameters for Practitioner
        """
        active [token]
        Whether the practitioner record is active
        """
        active: [String]
        """
        address [string]
        Multiple Resources: * [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text
        """
        address: [String]
        """
        address-city [string]
        Multiple Resources: * [Patient](patient.html): A city specified in an address* [Person](person.html): A city specified in an address* [Practitioner](practitioner.html): A city specified in an address* [RelatedPerson](relatedperson.html): A city specified in an address
        """
        address_city: [String]
        """
        address-country [string]
        Multiple Resources: * [Patient](patient.html): A country specified in an address* [Person](person.html): A country specified in an address* [Practitioner](practitioner.html): A country specified in an address* [RelatedPerson](relatedperson.html): A country specified in an address
        """
        address_country: [String]
        """
        address-postalcode [string]
        Multiple Resources: * [Patient](patient.html): A postalCode specified in an address* [Person](person.html): A postal code specified in an address* [Practitioner](practitioner.html): A postalCode specified in an address* [RelatedPerson](relatedperson.html): A postal code specified in an address
        """
        address_postalcode: [String]
        """
        address-state [string]
        Multiple Resources: * [Patient](patient.html): A state specified in an address* [Person](person.html): A state specified in an address* [Practitioner](practitioner.html): A state specified in an address* [RelatedPerson](relatedperson.html): A state specified in an address
        """
        address_state: [String]
        """
        address-use [token]
        Multiple Resources: * [Patient](patient.html): A use code specified in an address* [Person](person.html): A use code specified in an address* [Practitioner](practitioner.html): A use code specified in an address* [RelatedPerson](relatedperson.html): A use code specified in an address
        """
        address_use: [String]
        """
        communication [token]
        One of the languages that the practitioner can communicate with
        """
        communication: [String]
        """
        email [token]
        Multiple Resources: * [Patient](patient.html): A value in an email contact* [Person](person.html): A value in an email contact* [Practitioner](practitioner.html): A value in an email contact* [PractitionerRole](practitionerrole.html): A value in an email contact* [RelatedPerson](relatedperson.html): A value in an email contact
        """
        email: [String]
        """
        family [string]
        Multiple Resources: * [Patient](patient.html): A portion of the family name of the patient* [Practitioner](practitioner.html): A portion of the family name
        """
        family: [String]
        """
        gender [token]
        Multiple Resources: * [Patient](patient.html): Gender of the patient* [Person](person.html): The gender of the person* [Practitioner](practitioner.html): Gender of the practitioner* [RelatedPerson](relatedperson.html): Gender of the related person
        """
        gender: [String]
        """
        given [string]
        Multiple Resources: * [Patient](patient.html): A portion of the given name of the patient* [Practitioner](practitioner.html): A portion of the given name
        """
        given: [String]
        """
        identifier [token]
        A practitioners Identifier
        """
        identifier: [String]
        """
        name [string]
        A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text
        """
        name: [String]
        """
        phone [token]
        Multiple Resources: * [Patient](patient.html): A value in a phone contact* [Person](person.html): A value in a phone contact* [Practitioner](practitioner.html): A value in a phone contact* [PractitionerRole](practitionerrole.html): A value in a phone contact* [RelatedPerson](relatedperson.html): A value in a phone contact
        """
        phone: [String]
        """
        phonetic [string]
        Multiple Resources: * [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm* [Person](person.html): A portion of name using some kind of phonetic matching algorithm* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm
        """
        phonetic: [String]
        """
        telecom [token]
        Multiple Resources: * [Patient](patient.html): The value in any kind of telecom details of the patient* [Person](person.html): The value in any kind of contact* [Practitioner](practitioner.html): The value in any kind of contact* [PractitionerRole](practitionerrole.html): The value in any kind of contact* [RelatedPerson](relatedperson.html): The value in any kind of contact
        """
        telecom: [String]
        """
        return total number of records that meet this query
        """
        _total: TotalType
        """
        sort records by these fields.  The fields can be nested fields. Prepend with "-" to indicate descending sort
            Examples: ["id", "-meta.lastUpdated"]
        """
        _sort: [String]
        """
        limit records to this count.  Default is 10
        """
        _count: Int
        """
        page number to retrieve
        """
        _getpagesoffset: Int
    ): [Practitioner]
}