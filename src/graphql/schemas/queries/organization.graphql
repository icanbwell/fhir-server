# This file is auto-generated by generate_classes so do not edit manually
# import Organization from "../resources/organization.graphql"

extend type Query {
    """
    Organization
        A formally or informally recognized grouping of people or organizations formed
    for the purpose of achieving some form of collective action.  Includes
    companies, institutions, corporations, departments, community groups,
    healthcare practice groups, payer/insurer, etc.
        If the element is present, it must have either a @value, an @id, or extensions
    """
    organization(

        # some old search parameters that we misspelled in the past so have to maintain backwards compatibility
        """
        list of ids to retrieve.  DEPRECATED: Use `_id`
        """
        id: [String]

        # search parameters for all resources
        """
        _id [token]
        Logical id of this artifact
        """
        _id: SearchString
        """
        _lastUpdated [date]
        When the resource version last changed
        """
        _lastUpdated: [String]
        """
        _profile [uri]
        Profiles this resource claims to conform to
        """
        _profile: SearchString
        """
        _security [token]
        Security Labels applied to this resource
        """
        _security: SearchToken
        """
        _source [uri]
        Identifies where the resource comes from
        """
        _source: SearchString
        """
        _tag [token]
        Tags applied to this resource
        """
        _tag: SearchToken


        # search parameters for Organization
        """
        active [token]
        Is the Organization record active
        """
        active: SearchToken
        """
        address [string]
        A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text
        """
        address: SearchString
        """
        address-city [string]
        A city specified in an address
        """
        address_city: SearchString
        """
        address-country [string]
        A country specified in an address
        """
        address_country: SearchString
        """
        address-postalcode [string]
        A postal code specified in an address
        """
        address_postalcode: SearchString
        """
        address-state [string]
        A state specified in an address
        """
        address_state: SearchString
        """
        address-use [token]
        A use code specified in an address
        """
        address_use: SearchToken
        """
        endpoint [reference]
        Technical endpoints providing access to services operated for the organization
        """
        endpoint: SearchReference
        """
        identifier [token]
        Any identifier for the organization (not the accreditation issuers identifier)
        """
        identifier: SearchToken
        """
        name [string]
        A portion of the organizations name or alias
        """
        name: SearchString
        """
        partof [reference]
        An organization of which this organization forms a part
        """
        partof: SearchReference
        """
        phonetic [string]
        A portion of the organizations name using some kind of phonetic matching algorithm
        """
        phonetic: SearchString
        """
        type [token]
        A code for the type of organization
        """
        type: SearchToken
        """
        return total number of records that meet this query
        """
        _total: TotalType
        """
        sort records by these fields.  The fields can be nested fields. Prepend with "-" to indicate descending sort
            Examples: ["id", "-meta.lastUpdated"]
        """
        _sort: [String]
        """
        limit records to this count.  Default is 10
        """
        _count: Int
        """
        page number to retrieve
        """
        _getpagesoffset: Int
    ): [Organization]
}