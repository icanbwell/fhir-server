# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Patient from "../resources/patient.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import Group from "../resources/group.graphql"
# import Device from "../resources/device.graphql"
# import code from "../simple_types/code.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import Organization from "../resources/organization.graphql"
# import Device from "../resources/device.graphql"
# import Patient from "../resources/patient.graphql"
# import RelatedPerson from "../resources/relatedPerson.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import Organization from "../resources/organization.graphql"
# import Organization from "../resources/organization.graphql"
# import DocumentReferenceRelatesTo from "../backbone_elements/documentReferenceRelatesTo.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import DocumentReferenceContent from "../backbone_elements/documentReferenceContent.graphql"
# import DocumentReferenceContext from "../backbone_elements/documentReferenceContext.graphql"

union DocumentReferenceSubject = Patient | Practitioner | Group | Device
union DocumentReferenceAuthor = Practitioner | PractitionerRole | Organization | Device | Patient | RelatedPerson
union DocumentReferenceAuthenticator = Practitioner | PractitionerRole | Organization


type DocumentReference {
    """
    DocumentReference
        A reference to a document of any kind for any purpose. Provides metadata about
    the document so that the document can be discovered and managed. The scope of
    a document is any seralized object with a mime-type, so includes formal
    patient centric documents (CDA), cliical notes, scanned paper, and non-patient
    specific documents like policy text.
        If the element is present, it must have either a @value, an @id, or extensions
    """
    resourceType: String
    id: code        
    meta: Meta        
    implicitRules: code        
    language: code        
    text: Narrative        
    contained: [code]        
    extension: [Extension]        
    modifierExtension: [Extension]        
    masterIdentifier: Identifier        
    identifier: [Identifier]        
    status: code!        
    docStatus: code        
    type: CodeableConcept        
    category: [CodeableConcept]        
    subject: DocumentReferenceSubject        
    date: code        
    author: [DocumentReferenceAuthor]        
    authenticator: DocumentReferenceAuthenticator        
    custodian: Organization        
    relatesTo: [DocumentReferenceRelatesTo]        
    description: code        
    securityLabel: [CodeableConcept]        
    content: [DocumentReferenceContent]!        
    context: DocumentReferenceContext        
}

extend type Query {
    """
    DocumentReference
        A reference to a document of any kind for any purpose. Provides metadata about
    the document so that the document can be discovered and managed. The scope of
    a document is any seralized object with a mime-type, so includes formal
    patient centric documents (CDA), cliical notes, scanned paper, and non-patient
    specific documents like policy text.
        If the element is present, it must have either a @value, an @id, or extensions
    """
    documentReference(
        id: [String]
        type: String
        name: String
        family: String
        identifier: String
        source: String
        _security: String
        _tag: String
        versionId: String
        _lastUpdated: [String]
        patient: String
        practitioner: String
        organization: String
        location: String
        agent: String
        healthcareService: String
        active: String
        _total: String
    ): [DocumentReference]
}