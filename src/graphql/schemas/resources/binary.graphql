# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import Resource from "../resources/resource.graphql"



"""
Binary
    A resource that represents the data of a single raw artifact as digital
    content accessible in its native format.  A Binary resource can contain any
    content, whether text, image, pdf, zip archive, etc.
    If the element is present, it must have either a @value, an @id, or extensions
"""
type Binary {
    resourceType: String
    """
    The logical id of the resource, as used in the URL for the resource. Once
    assigned, this value never changes.
    """
    id: code        
    """
    The metadata about the resource. This is content that is maintained by the
    infrastructure. Changes to the content might not always be associated with
    version changes to the resource.
    """
    meta: Meta        
    """
    A reference to a set of rules that were followed when the resource was
    constructed, and which must be understood when processing the content. Often,
    this is a reference to an implementation guide that defines the special rules
    along with other profiles etc.
    """
    implicitRules: code        
    """
    The base language in which the resource is written.
    """
    language: code        
    """
    MimeType of the binary content represented as a standard MimeType (BCP 13).
    """
    contentType: code!        
    """
    This element identifies another resource that can be used as a proxy of the
    security sensitivity to use when deciding and enforcing access control rules
    for the Binary resource. Given that the Binary resource contains very few
    elements that can be used to determine the sensitivity of the data and
    relationships to individuals, the referenced resource stands in as a proxy
    equivalent for this purpose. This referenced resource may be related to the
    Binary (e.g. Media, DocumentReference), or may be some non-related Resource
    purely as a security proxy. E.g. to identify that the binary resource relates
    to a patient, and access should only be granted to applications that have
    access to the patient.
    """
    securityContext: Resource        
    """
    The actual content, base64 encoded.
    """
    data: code        
}

extend type Query {
    """
    Binary
        A resource that represents the data of a single raw artifact as digital
    content accessible in its native format.  A Binary resource can contain any
    content, whether text, image, pdf, zip archive, etc.
        If the element is present, it must have either a @value, an @id, or extensions
    """
    binary(

        # some old search parameters that we misspelled in the past so have to maintain backwards compatibility
        """
        list of ids to retrieve.  DEPRECATED: Use `_id`
        """
        id: [String]

        """
        list of sources to retrieve. DEPRECATED: Use `_source`
        """
        source: [String]

        # search parameters for all resources
        """
        Logical id of this artifact
        """
        _id: [String]
        """
        When the resource version last changed
        """
        _lastUpdated: [String]
        """
        Profiles this resource claims to conform to
        """
        _profile: [String]
        """
        Security Labels applied to this resource
        """
        _security: [String]
        """
        Identifies where the resource comes from
        """
        _source: [String]
        """
        Tags applied to this resource
        """
        _tag: [String]


        # search parameters for Binary
        """
        return total number of records that meet this query
        """
        _total: TotalType
        """
        sort records by these fields.  The fields can be nested fields. Prepend with "-" to indicate descending sort
            Examples: ["id", "-meta.lastUpdated"]
        """
        _sort: [String]
        """
        limit records to this count.  Default is 10
        """
        _count: Int
        """
        page number to retrieve
        """
        _getpagesoffset: Int
    ): [Binary]
}