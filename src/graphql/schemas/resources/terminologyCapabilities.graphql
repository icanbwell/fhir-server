# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import code from "../simple_types/code.graphql"
# import UsageContext from "../complex_types/usageContext.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import TerminologyCapabilitiesSoftware from "../backbone_elements/terminologyCapabilitiesSoftware.graphql"
# import TerminologyCapabilitiesImplementation from "../backbone_elements/terminologyCapabilitiesImplementation.graphql"
# import code from "../simple_types/code.graphql"
# import TerminologyCapabilitiesCodeSystem from "../backbone_elements/terminologyCapabilitiesCodeSystem.graphql"
# import TerminologyCapabilitiesExpansion from "../backbone_elements/terminologyCapabilitiesExpansion.graphql"
# import code from "../simple_types/code.graphql"
# import TerminologyCapabilitiesValidateCode from "../backbone_elements/terminologyCapabilitiesValidateCode.graphql"
# import TerminologyCapabilitiesTranslation from "../backbone_elements/terminologyCapabilitiesTranslation.graphql"
# import TerminologyCapabilitiesClosure from "../backbone_elements/terminologyCapabilitiesClosure.graphql"



type TerminologyCapabilities {
    """
    TerminologyCapabilities
        A TerminologyCapabilities resource documents a set of capabilities (behaviors)
    of a FHIR Terminology Server that may be used as a statement of actual server
    functionality or a statement of required or desired server implementation.
        If the element is present, it must have either a @value, an @id, or extensions
    """
    resourceType: String
    id: code        
    meta: Meta        
    implicitRules: code        
    language: code        
    text: Narrative        
    contained: [code]        
    extension: [Extension]        
    modifierExtension: [Extension]        
    url: code        
    version: code        
    name: code        
    title: code        
    status: code!        
    experimental: code        
    date: code!        
    publisher: code        
    contact: [ContactDetail]        
    description: code        
    useContext: [UsageContext]        
    jurisdiction: [CodeableConcept]        
    purpose: code        
    copyright: code        
    kind: code!        
    software: TerminologyCapabilitiesSoftware        
    implementation: TerminologyCapabilitiesImplementation        
    lockedDate: code        
    codeSystem: [TerminologyCapabilitiesCodeSystem]        
    expansion: TerminologyCapabilitiesExpansion        
    codeSearch: code        
    validateCode: TerminologyCapabilitiesValidateCode        
    translation: TerminologyCapabilitiesTranslation        
    closure: TerminologyCapabilitiesClosure        
}

extend type Query {
    """
    TerminologyCapabilities
        A TerminologyCapabilities resource documents a set of capabilities (behaviors)
    of a FHIR Terminology Server that may be used as a statement of actual server
    functionality or a statement of required or desired server implementation.
        If the element is present, it must have either a @value, an @id, or extensions
    """
    terminologyCapabilities(
        id: [String]
        type: String
        name: String
        family: String
        identifier: String
        source: String
        _security: String
        _tag: String
        versionId: String
        _lastUpdated: [String]
        patient: String
        practitioner: String
        organization: String
        location: String
        agent: String
        healthcareService: String
        active: String
        _total: String
    ): [TerminologyCapabilities]
}