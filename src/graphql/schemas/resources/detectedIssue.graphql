# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import code from "../simple_types/code.graphql"
# import Patient from "../resources/patient.graphql"
# import code from "../simple_types/code.graphql"
# import Period from "../complex_types/period.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import Device from "../resources/device.graphql"
# import Resource from "../resources/resource.graphql"
# import DetectedIssueEvidence from "../backbone_elements/detectedIssueEvidence.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import DetectedIssueMitigation from "../backbone_elements/detectedIssueMitigation.graphql"

union DetectedIssueAuthor = Practitioner | PractitionerRole | Device


type DetectedIssue {
    """
    DetectedIssue
        Indicates an actual or potential clinical issue with or between one or more
    active or proposed clinical actions for a patient; e.g. Drug-drug interaction,
    Ineffective treatment frequency, Procedure-condition conflict, etc.
        If the element is present, it must have either a @value, an @id, or extensions
    """
    resourceType: String
    id: code        
    meta: Meta        
    implicitRules: code        
    language: code        
    text: Narrative        
    contained: [code]        
    extension: [Extension]        
    modifierExtension: [Extension]        
    identifier: [Identifier]        
    status: code!        
    code: CodeableConcept        
    severity: code        
    patient: Patient        
    identifiedDateTime: code        
    identifiedPeriod: Period        
    author: DetectedIssueAuthor        
    implicated: [Resource]        
    evidence: [DetectedIssueEvidence]        
    detail: code        
    reference: code        
    mitigation: [DetectedIssueMitigation]        
}

extend type Query {
    """
    DetectedIssue
        Indicates an actual or potential clinical issue with or between one or more
    active or proposed clinical actions for a patient; e.g. Drug-drug interaction,
    Ineffective treatment frequency, Procedure-condition conflict, etc.
        If the element is present, it must have either a @value, an @id, or extensions
    """
    detectedIssue(
        id: [String]
        type: String
        name: String
        family: String
        identifier: String
        source: String
        _security: String
        _tag: String
        versionId: String
        _lastUpdated: [String]
        patient: String
        practitioner: String
        organization: String
        location: String
        agent: String
        healthcareService: String
        active: String
        _total: String
    ): [DetectedIssue]
}