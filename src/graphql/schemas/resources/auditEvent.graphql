# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import Coding from "../complex_types/coding.graphql"
# import Coding from "../complex_types/coding.graphql"
# import code from "../simple_types/code.graphql"
# import Period from "../complex_types/period.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import AuditEventAgent from "../backbone_elements/auditEventAgent.graphql"
# import AuditEventSource from "../backbone_elements/auditEventSource.graphql"
# import AuditEventEntity from "../backbone_elements/auditEventEntity.graphql"



type AuditEvent {
    """
    AuditEvent
        A record of an event made for purposes of maintaining a security log. Typical
    uses include detection of intrusion attempts and monitoring for inappropriate
    usage.
        If the element is present, it must have either a @value, an @id, or extensions
    """
    resourceType: String
    id: code        
    meta: Meta        
    implicitRules: code        
    language: code        
    text: Narrative        
    contained: [code]        
    extension: [Extension]        
    modifierExtension: [Extension]        
    type: Coding!        
    subtype: [Coding]        
    action: code        
    period: Period        
    recorded: code!        
    outcome: code        
    outcomeDesc: code        
    purposeOfEvent: [CodeableConcept]        
    agent: [AuditEventAgent]!        
    source: AuditEventSource!        
    entity: [AuditEventEntity]        
}

extend type Query {
    """
    AuditEvent
        A record of an event made for purposes of maintaining a security log. Typical
    uses include detection of intrusion attempts and monitoring for inappropriate
    usage.
        If the element is present, it must have either a @value, an @id, or extensions
    """
    auditEvent(
        id: [String]
        type: String
        name: String
        family: String
        identifier: String
        source: String
        _security: String
        _tag: String
        versionId: String
        _lastUpdated: [String]
        patient: String
        practitioner: String
        organization: String
        location: String
        agent: String
        healthcareService: String
        active: String
        _total: String
    ): [AuditEvent]
}