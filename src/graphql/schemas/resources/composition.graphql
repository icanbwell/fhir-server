# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Resource from "../resources/resource.graphql"
# import Encounter from "../resources/encounter.graphql"
# import code from "../simple_types/code.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import Device from "../resources/device.graphql"
# import Patient from "../resources/patient.graphql"
# import RelatedPerson from "../resources/relatedPerson.graphql"
# import Organization from "../resources/organization.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import CompositionAttester from "../backbone_elements/compositionAttester.graphql"
# import Organization from "../resources/organization.graphql"
# import CompositionRelatesTo from "../backbone_elements/compositionRelatesTo.graphql"
# import CompositionEvent from "../backbone_elements/compositionEvent.graphql"
# import CompositionSection from "../backbone_elements/compositionSection.graphql"

union CompositionAuthor = Practitioner | PractitionerRole | Device | Patient | RelatedPerson | Organization


type Composition {
    """
    Composition
        A set of healthcare-related information that is assembled together into a
    single logical package that provides a single coherent statement of meaning,
    establishes its own context and that has clinical attestation with regard to
    who is making the statement. A Composition defines the structure and narrative
    content necessary for a document. However, a Composition alone does not
    constitute a document. Rather, the Composition must be the first entry in a
    Bundle where Bundle.type=document, and any other resources referenced from
    Composition must be included as subsequent entries in the Bundle (for example
    Patient, Practitioner, Encounter, etc.).
        If the element is present, it must have either a @value, an @id, or extensions
    """
    resourceType: String
    id: code        
    meta: Meta        
    implicitRules: code        
    language: code        
    text: Narrative        
    contained: [code]        
    extension: [Extension]        
    modifierExtension: [Extension]        
    identifier: Identifier        
    status: code!        
    type: CodeableConcept!        
    category: [CodeableConcept]        
    subject: Resource        
    encounter: Encounter        
    date: code!        
    author: [CompositionAuthor]!        
    title: code!        
    confidentiality: code        
    attester: [CompositionAttester]        
    custodian: Organization        
    relatesTo: [CompositionRelatesTo]        
    event: [CompositionEvent]        
    section: [CompositionSection]        
}

extend type Query {
    """
    Composition
        A set of healthcare-related information that is assembled together into a
    single logical package that provides a single coherent statement of meaning,
    establishes its own context and that has clinical attestation with regard to
    who is making the statement. A Composition defines the structure and narrative
    content necessary for a document. However, a Composition alone does not
    constitute a document. Rather, the Composition must be the first entry in a
    Bundle where Bundle.type=document, and any other resources referenced from
    Composition must be included as subsequent entries in the Bundle (for example
    Patient, Practitioner, Encounter, etc.).
        If the element is present, it must have either a @value, an @id, or extensions
    """
    composition(
        id: [String]
        type: String
        name: String
        family: String
        identifier: String
        source: String
        _security: String
        _tag: String
        versionId: String
        _lastUpdated: [String]
        patient: String
        practitioner: String
        organization: String
        location: String
        agent: String
        healthcareService: String
        active: String
        _total: String
    ): [Composition]
}