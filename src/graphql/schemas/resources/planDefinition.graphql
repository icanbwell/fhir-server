# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import code from "../simple_types/code.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Group from "../resources/group.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import code from "../simple_types/code.graphql"
# import UsageContext from "../complex_types/usageContext.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Period from "../complex_types/period.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import RelatedArtifact from "../complex_types/relatedArtifact.graphql"
# import code from "../simple_types/code.graphql"
# import PlanDefinitionGoal from "../backbone_elements/planDefinitionGoal.graphql"
# import PlanDefinitionAction from "../backbone_elements/planDefinitionAction.graphql"



type PlanDefinition {
    """
    PlanDefinition
        This resource allows for the definition of various types of plans as a
    sharable, consumable, and executable artifact. The resource is general enough
    to support the description of a broad range of clinical artifacts such as
    clinical decision support rules, order sets and protocols.
        If the element is present, it must have either a @value, an @id, or extensions
    """
    resourceType: String
    id: code        
    meta: Meta        
    implicitRules: code        
    language: code        
    text: Narrative        
    contained: [code]        
    extension: [Extension]        
    modifierExtension: [Extension]        
    url: code        
    identifier: [Identifier]        
    version: code        
    name: code        
    title: code        
    subtitle: code        
    type: CodeableConcept        
    status: code!        
    experimental: code        
    subjectCodeableConcept: CodeableConcept        
    subjectReference: Group        
    date: code        
    publisher: code        
    contact: [ContactDetail]        
    description: code        
    useContext: [UsageContext]        
    jurisdiction: [CodeableConcept]        
    purpose: code        
    usage: code        
    copyright: code        
    approvalDate: code        
    lastReviewDate: code        
    effectivePeriod: Period        
    topic: [CodeableConcept]        
    author: [ContactDetail]        
    editor: [ContactDetail]        
    reviewer: [ContactDetail]        
    endorser: [ContactDetail]        
    relatedArtifact: [RelatedArtifact]        
    library: [code]        
    goal: [PlanDefinitionGoal]        
    action: [PlanDefinitionAction]        
}

extend type Query {
    """
    PlanDefinition
        This resource allows for the definition of various types of plans as a
    sharable, consumable, and executable artifact. The resource is general enough
    to support the description of a broad range of clinical artifacts such as
    clinical decision support rules, order sets and protocols.
        If the element is present, it must have either a @value, an @id, or extensions
    """
    planDefinition(
        id: [String]
        type: String
        name: String
        family: String
        identifier: String
        source: String
        _security: String
        _tag: String
        versionId: String
        _lastUpdated: [String]
        patient: String
        practitioner: String
        organization: String
        location: String
        agent: String
        healthcareService: String
        active: String
        _total: String
    ): [PlanDefinition]
}