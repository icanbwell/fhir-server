# This file is auto-generated by generate_classes so do not edit manually
# import Media from "../resources/media.graphql"

extend type Query {
    """
    Media
        A photo, video, or audio recording acquired or used in healthcare. The actual
    content may be inline or provided by direct reference.
        If the element is present, it must have either a @value, an @id, or extensions
    """
    media(

        # some old search parameters that we misspelled in the past so have to maintain backwards compatibility
        """
        ids to retrieve.
        """
        id: SearchString

        # search parameters for all resources
        """
        _lastUpdated (FHIR type: date)
        When the resource version last changed
        """
        _lastUpdated: SearchDate
        """
        _profile (FHIR type: uri)
        Profiles this resource claims to conform to
        """
        _profile: SearchString
        """
        _security (FHIR type: token)
        Security Labels applied to this resource
        """
        _security: SearchToken
        """
        _source (FHIR type: uri)
        Identifies where the resource comes from
        """
        _source: SearchString
        """
        _tag (FHIR type: token)
        Tags applied to this resource
        """
        _tag: SearchToken

        # search parameters for Media
        """
        based-on (FHIR type: reference)
        Procedure that caused this media to be created
        """
        based_on: SearchReference
        """
        created (FHIR type: date)
        When Media was collected
        """
        created: SearchDate
        """
        device (FHIR type: reference)
        Observing Device
        """
        device: SearchReference
        """
        encounter (FHIR type: reference)
        Encounter associated with media
        """
        encounter: SearchReference
        """
        identifier (FHIR type: token)
        Identifier(s) for the image
        """
        identifier: SearchToken
        """
        modality (FHIR type: token)
        The type of acquisition equipment/process
        """
        modality: SearchToken
        """
        operator (FHIR type: reference)
        The person who generated the image
        """
        operator: SearchReference
        """
        patient (FHIR type: reference)
        Who/What this Media is a record of
        """
        patient: SearchReference
        """
        site (FHIR type: token)
        Observed body part
        """
        site: SearchToken
        """
        status (FHIR type: token)
        preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown
        """
        status: SearchToken
        """
        subject (FHIR type: reference)
        Who/What this Media is a record of
        """
        subject: SearchReference
        """
        type (FHIR type: token)
        Classification of media as image, video, or audio
        """
        type: SearchToken
        """
        view (FHIR type: token)
        Imaging view, e.g. Lateral or Antero-posterior
        """
        view: SearchToken

        # miscellaneous parameters
        """
        return total number of records that meet this query
        """
        _total: TotalType
        """
        sort records by these fields.  The fields can be nested fields. Prepend with "-" to indicate descending sort
            Examples: ["id", "-meta.lastUpdated"]
        """
        _sort: [String]
        """
        limit records to this count.  Default is 10
        """
        _count: Int
        """
        page number to retrieve
        """
        _getpagesoffset: Int
        """
        include debugging information with the result
        """
        _debug: Boolean
        """
        explain query but not run it
        """
        _explain: Boolean
        """
        allows to set index to be used
        """
        _setIndexHint: String
    ): MediaBundle
}
