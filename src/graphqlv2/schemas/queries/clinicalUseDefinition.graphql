# This file is auto-generated by generate_classes so do not edit manually
# import ClinicalUseDefinition from "../resources/clinicalUseDefinition.graphql"

extend type Query {
    """
    ClinicalUseDefinition
        A single issue - either an indication, contraindication, interaction or an
    undesirable effect for a medicinal product, medication, device or procedure.
        If the element is present, it must have either a @value, an @id, or extensions
    """
    clinicalUseDefinitions(

        # some old search parameters that we misspelled in the past so have to maintain backwards compatibility
        """
        ids to retrieve.
        """
        id: SearchString

        # search parameters for all resources
        """
        _lastUpdated (FHIR type: date)
        When the resource version last changed
        """
        _lastUpdated: SearchDate
        """
        _profile (FHIR type: uri)
        Profiles this resource claims to conform to
        """
        _profile: SearchString
        """
        _security (FHIR type: token)
        Security Labels applied to this resource
        """
        _security: SearchToken
        """
        _source (FHIR type: uri)
        Identifies where the resource comes from
        """
        _source: SearchString
        """
        _tag (FHIR type: token)
        Tags applied to this resource
        """
        _tag: SearchToken
        """
        extension (FHIR type: extension)
        Extensions applied to this resource
        """
        extension: SearchExtension

        # search parameters for ClinicalUseDefinition
        """
        contraindication (FHIR type: token)
        The situation that is being documented as contraindicating against this item, as a code
        """
        contraindication: SearchToken
        """
        contraindication-reference (FHIR type: reference)
        The situation that is being documented as contraindicating against this item, as a reference
        """
        contraindication_reference: SearchReference
        """
        effect (FHIR type: token)
        The situation in which the undesirable effect may manifest, as a code
        """
        effect: SearchToken
        """
        effect-reference (FHIR type: reference)
        The situation in which the undesirable effect may manifest, as a reference
        """
        effect_reference: SearchReference
        """
        identifier (FHIR type: token)
        Business identifier for this issue
        """
        identifier: SearchToken
        """
        indication (FHIR type: token)
        The situation that is being documented as an indicaton for this item, as a code
        """
        indication: SearchToken
        """
        indication-reference (FHIR type: reference)
        The situation that is being documented as an indicaton for this item, as a reference
        """
        indication_reference: SearchReference
        """
        interaction (FHIR type: token)
        The type of the interaction e.g. drug-drug interaction, drug-food interaction, drug-lab test interaction
        """
        interaction: SearchToken
        """
        product (FHIR type: reference)
        The medicinal product for which this is a clinical usage issue
        """
        product: SearchReference
        """
        subject (FHIR type: reference)
        The resource for which this is a clinical usage issue
        """
        subject: SearchReference
        """
        type (FHIR type: token)
        indication | contraindication | interaction | undesirable-effect | warning
        """
        type: SearchToken

        # miscellaneous parameters
        """
        return total number of records that meet this query
        """
        _total: TotalType
        """
        sort records by these fields.  The fields can be nested fields. Prepend with "-" to indicate descending sort
            Examples: ["id", "-meta.lastUpdated"]
        """
        _sort: [String]
        """
        limit records to this count.  Default is 10
        """
        _count: Int
        """
        page number to retrieve
        """
        _getpagesoffset: Int
        """
        include debugging information with the result
        """
        _debug: Boolean
        """
        explain query but not run it
        """
        _explain: Boolean
        """
        allows to set index to be used
        """
        _setIndexHint: String
    ): ClinicalUseDefinitionBundle
}
