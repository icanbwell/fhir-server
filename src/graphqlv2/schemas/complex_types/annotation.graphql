# This file is auto-generated by generate_classes so do not edit manually
# import Extension from "../extensions/extension.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import Patient from "../resources/patient.graphql"
# import RelatedPerson from "../resources/relatedPerson.graphql"
# import Organization from "../resources/organization.graphql"
# import DateTime from "../simple_types/dateTime.graphql"
# import Markdown from "../simple_types/markdown.graphql"

union AnnotationAuthorReference = Practitioner | Patient | RelatedPerson | Organization

"""
Reference type for AuthorReference
"""
type AnnotationAuthorReferenceReference {
    id: String
    extension: [Extension]
    reference: String
    resource: AnnotationAuthorReference
    type: URI
    identifier: Identifier
    display: String
}


"""
Annotation
    A  text note which also  contains information about who made the statement and
    when.
    If the element is present, it must have a value for at least one of the
    defined elements, an @id referenced from the Narrative, or extensions
"""
type Annotation {
    """
    None
    """
    id: String
    """
    May be used to represent additional information that is not part of the basic
    definition of the element. To make the use of extensions safe and manageable,
    there is a strict set of governance  applied to the definition and use of
    extensions. Though any implementer can define an extension, there is a set of
    requirements that SHALL be met as part of the definition of the extension.
    """
    extension: [Extension]
    """
    None
    """
    authorReference: AnnotationAuthorReferenceReference
    """
    None
    """
    authorString: String
    """
    Indicates when this particular annotation was made.
    """
    time: DateTime
    """
    The text of the annotation in markdown format.
    """
    text: Markdown
}
