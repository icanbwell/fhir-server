# This file is auto-generated by generate_classes so do not edit manually
# import Meta from "../complex_types/meta.graphql"
# import URI from "../simple_types/uri.graphql"
# import Code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import ResourceContainer from "../simple_types/resourceContainer.graphql"
# import Extension from "../extensions/extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import Account from "../resources/account.graphql"
# import ActivityDefinition from "../resources/activityDefinition.graphql"
# import AdministrableProductDefinition from "../resources/administrableProductDefinition.graphql"
# import AdverseEvent from "../resources/adverseEvent.graphql"
# import AllergyIntolerance from "../resources/allergyIntolerance.graphql"
# import Appointment from "../resources/appointment.graphql"
# import AppointmentResponse from "../resources/appointmentResponse.graphql"
# import AuditEvent from "../resources/auditEvent.graphql"
# import Basic from "../resources/basic.graphql"
# import Binary from "../resources/binary.graphql"
# import BiologicallyDerivedProduct from "../resources/biologicallyDerivedProduct.graphql"
# import BodyStructure from "../resources/bodyStructure.graphql"
# import Bundle from "../resources/bundle.graphql"
# import CapabilityStatement from "../resources/capabilityStatement.graphql"
# import CarePlan from "../resources/carePlan.graphql"
# import CareTeam from "../resources/careTeam.graphql"
# import CatalogEntry from "../resources/catalogEntry.graphql"
# import ChargeItem from "../resources/chargeItem.graphql"
# import ChargeItemDefinition from "../resources/chargeItemDefinition.graphql"
# import Citation from "../resources/citation.graphql"
# import Claim from "../resources/claim.graphql"
# import ClaimResponse from "../resources/claimResponse.graphql"
# import ClinicalImpression from "../resources/clinicalImpression.graphql"
# import ClinicalUseDefinition from "../resources/clinicalUseDefinition.graphql"
# import CodeSystem from "../resources/codeSystem.graphql"
# import Communication from "../resources/communication.graphql"
# import CommunicationRequest from "../resources/communicationRequest.graphql"
# import CompartmentDefinition from "../resources/compartmentDefinition.graphql"
# import Composition from "../resources/composition.graphql"
# import ConceptMap from "../resources/conceptMap.graphql"
# import Condition from "../resources/condition.graphql"
# import Consent from "../resources/consent.graphql"
# import Contract from "../resources/contract.graphql"
# import Coverage from "../resources/coverage.graphql"
# import CoverageEligibilityRequest from "../resources/coverageEligibilityRequest.graphql"
# import CoverageEligibilityResponse from "../resources/coverageEligibilityResponse.graphql"
# import DetectedIssue from "../resources/detectedIssue.graphql"
# import Device from "../resources/device.graphql"
# import DeviceDefinition from "../resources/deviceDefinition.graphql"
# import DeviceMetric from "../resources/deviceMetric.graphql"
# import DeviceRequest from "../resources/deviceRequest.graphql"
# import DeviceUseStatement from "../resources/deviceUseStatement.graphql"
# import DiagnosticReport from "../resources/diagnosticReport.graphql"
# import DocumentManifest from "../resources/documentManifest.graphql"
# import DocumentReference from "../resources/documentReference.graphql"
# import Encounter from "../resources/encounter.graphql"
# import Endpoint from "../resources/endpoint.graphql"
# import EnrollmentRequest from "../resources/enrollmentRequest.graphql"
# import EnrollmentResponse from "../resources/enrollmentResponse.graphql"
# import EpisodeOfCare from "../resources/episodeOfCare.graphql"
# import EventDefinition from "../resources/eventDefinition.graphql"
# import Evidence from "../resources/evidence.graphql"
# import EvidenceReport from "../resources/evidenceReport.graphql"
# import EvidenceVariable from "../resources/evidenceVariable.graphql"
# import ExampleScenario from "../resources/exampleScenario.graphql"
# import ExplanationOfBenefit from "../resources/explanationOfBenefit.graphql"
# import FamilyMemberHistory from "../resources/familyMemberHistory.graphql"
# import Flag from "../resources/flag.graphql"
# import Goal from "../resources/goal.graphql"
# import GraphDefinition from "../resources/graphDefinition.graphql"
# import Group from "../resources/group.graphql"
# import GuidanceResponse from "../resources/guidanceResponse.graphql"
# import HealthcareService from "../resources/healthcareService.graphql"
# import ImagingStudy from "../resources/imagingStudy.graphql"
# import Immunization from "../resources/immunization.graphql"
# import ImmunizationEvaluation from "../resources/immunizationEvaluation.graphql"
# import ImmunizationRecommendation from "../resources/immunizationRecommendation.graphql"
# import ImplementationGuide from "../resources/implementationGuide.graphql"
# import Ingredient from "../resources/ingredient.graphql"
# import InsurancePlan from "../resources/insurancePlan.graphql"
# import Invoice from "../resources/invoice.graphql"
# import Library from "../resources/library.graphql"
# import Linkage from "../resources/linkage.graphql"
# import List from "../resources/list.graphql"
# import Location from "../resources/location.graphql"
# import ManufacturedItemDefinition from "../resources/manufacturedItemDefinition.graphql"
# import Measure from "../resources/measure.graphql"
# import MeasureReport from "../resources/measureReport.graphql"
# import Media from "../resources/media.graphql"
# import Medication from "../resources/medication.graphql"
# import MedicationAdministration from "../resources/medicationAdministration.graphql"
# import MedicationDispense from "../resources/medicationDispense.graphql"
# import MedicationKnowledge from "../resources/medicationKnowledge.graphql"
# import MedicationRequest from "../resources/medicationRequest.graphql"
# import MedicationStatement from "../resources/medicationStatement.graphql"
# import MedicinalProductDefinition from "../resources/medicinalProductDefinition.graphql"
# import MessageDefinition from "../resources/messageDefinition.graphql"
# import MessageHeader from "../resources/messageHeader.graphql"
# import MolecularSequence from "../resources/molecularSequence.graphql"
# import NamingSystem from "../resources/namingSystem.graphql"
# import NutritionOrder from "../resources/nutritionOrder.graphql"
# import NutritionProduct from "../resources/nutritionProduct.graphql"
# import Observation from "../resources/observation.graphql"
# import ObservationDefinition from "../resources/observationDefinition.graphql"
# import OperationDefinition from "../resources/operationDefinition.graphql"
# import OperationOutcome from "../resources/operationOutcome.graphql"
# import Organization from "../resources/organization.graphql"
# import OrganizationAffiliation from "../resources/organizationAffiliation.graphql"
# import PackagedProductDefinition from "../resources/packagedProductDefinition.graphql"
# import Patient from "../resources/patient.graphql"
# import PaymentNotice from "../resources/paymentNotice.graphql"
# import PaymentReconciliation from "../resources/paymentReconciliation.graphql"
# import Person from "../resources/person.graphql"
# import PlanDefinition from "../resources/planDefinition.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import Procedure from "../resources/procedure.graphql"
# import Provenance from "../resources/provenance.graphql"
# import Questionnaire from "../resources/questionnaire.graphql"
# import QuestionnaireResponse from "../resources/questionnaireResponse.graphql"
# import RegulatedAuthorization from "../resources/regulatedAuthorization.graphql"
# import RelatedPerson from "../resources/relatedPerson.graphql"
# import RequestGroup from "../resources/requestGroup.graphql"
# import ResearchDefinition from "../resources/researchDefinition.graphql"
# import ResearchElementDefinition from "../resources/researchElementDefinition.graphql"
# import ResearchStudy from "../resources/researchStudy.graphql"
# import ResearchSubject from "../resources/researchSubject.graphql"
# import RiskAssessment from "../resources/riskAssessment.graphql"
# import Schedule from "../resources/schedule.graphql"
# import SearchParameter from "../resources/searchParameter.graphql"
# import ServiceRequest from "../resources/serviceRequest.graphql"
# import Slot from "../resources/slot.graphql"
# import Specimen from "../resources/specimen.graphql"
# import SpecimenDefinition from "../resources/specimenDefinition.graphql"
# import StructureDefinition from "../resources/structureDefinition.graphql"
# import StructureMap from "../resources/structureMap.graphql"
# import Subscription from "../resources/subscription.graphql"
# import SubscriptionStatus from "../resources/subscriptionStatus.graphql"
# import SubscriptionTopic from "../resources/subscriptionTopic.graphql"
# import Substance from "../resources/substance.graphql"
# import SubstanceDefinition from "../resources/substanceDefinition.graphql"
# import SupplyDelivery from "../resources/supplyDelivery.graphql"
# import SupplyRequest from "../resources/supplyRequest.graphql"
# import Task from "../resources/task.graphql"
# import TerminologyCapabilities from "../resources/terminologyCapabilities.graphql"
# import TestReport from "../resources/testReport.graphql"
# import TestScript from "../resources/testScript.graphql"
# import ValueSet from "../resources/valueSet.graphql"
# import VerificationResult from "../resources/verificationResult.graphql"
# import VisionPrescription from "../resources/visionPrescription.graphql"
# import Parameters from "../resources/parameters.graphql"
# import Resource from "../resources/resource.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CommunicationRequestPayload from "../backbone_elements/communicationRequestPayload.graphql"
# import DateTime from "../simple_types/dateTime.graphql"
# import Period from "../complex_types/period.graphql"
# import Annotation from "../complex_types/annotation.graphql"

union CommunicationRequestBasedOn =Account | ActivityDefinition | AdministrableProductDefinition | AdverseEvent | AllergyIntolerance | Appointment | AppointmentResponse | AuditEvent | Basic | Binary | BiologicallyDerivedProduct | BodyStructure | Bundle | CapabilityStatement | CarePlan | CareTeam | CatalogEntry | ChargeItem | ChargeItemDefinition | Citation | Claim | ClaimResponse | ClinicalImpression | ClinicalUseDefinition | CodeSystem | Communication | CommunicationRequest | CompartmentDefinition | Composition | ConceptMap | Condition | Consent | Contract | Coverage | CoverageEligibilityRequest | CoverageEligibilityResponse | DetectedIssue | Device | DeviceDefinition | DeviceMetric | DeviceRequest | DeviceUseStatement | DiagnosticReport | DocumentManifest | DocumentReference | Encounter | Endpoint | EnrollmentRequest | EnrollmentResponse | EpisodeOfCare | EventDefinition | Evidence | EvidenceReport | EvidenceVariable | ExampleScenario | ExplanationOfBenefit | FamilyMemberHistory | Flag | Goal | GraphDefinition | Group | GuidanceResponse | HealthcareService | ImagingStudy | Immunization | ImmunizationEvaluation | ImmunizationRecommendation | ImplementationGuide | Ingredient | InsurancePlan | Invoice | Library | Linkage | List | Location | ManufacturedItemDefinition | Measure | MeasureReport | Media | Medication | MedicationAdministration | MedicationDispense | MedicationKnowledge | MedicationRequest | MedicationStatement | MedicinalProductDefinition | MessageDefinition | MessageHeader | MolecularSequence | NamingSystem | NutritionOrder | NutritionProduct | Observation | ObservationDefinition | OperationDefinition | OperationOutcome | Organization | OrganizationAffiliation | PackagedProductDefinition | Patient | PaymentNotice | PaymentReconciliation | Person | PlanDefinition | Practitioner | PractitionerRole | Procedure | Provenance | Questionnaire | QuestionnaireResponse | RegulatedAuthorization | RelatedPerson | RequestGroup | ResearchDefinition | ResearchElementDefinition | ResearchStudy | ResearchSubject | RiskAssessment | Schedule | SearchParameter | ServiceRequest | Slot | Specimen | SpecimenDefinition | StructureDefinition | StructureMap | Subscription | SubscriptionStatus | SubscriptionTopic | Substance | SubstanceDefinition | SupplyDelivery | SupplyRequest | Task | TerminologyCapabilities | TestReport | TestScript | ValueSet | VerificationResult | VisionPrescription | Parameters | Resource

"""
Reference type for BasedOn
"""
type CommunicationRequestBasedOnReference {
    id: String
    extension: [Extension]
    reference: String
    resource: CommunicationRequestBasedOn
    type: URI
    identifier: Identifier
    display: String
}

"""
Reference type for Replaces
"""
type CommunicationRequestReplacesReference {
    id: String
    extension: [Extension]
    reference: String
    resource: CommunicationRequest
    type: URI
    identifier: Identifier
    display: String
}

union CommunicationRequestSubject = Patient | Group

"""
Reference type for Subject
"""
type CommunicationRequestSubjectReference {
    id: String
    extension: [Extension]
    reference: String
    resource: CommunicationRequestSubject
    type: URI
    identifier: Identifier
    display: String
}

union CommunicationRequestAbout =Account | ActivityDefinition | AdministrableProductDefinition | AdverseEvent | AllergyIntolerance | Appointment | AppointmentResponse | AuditEvent | Basic | Binary | BiologicallyDerivedProduct | BodyStructure | Bundle | CapabilityStatement | CarePlan | CareTeam | CatalogEntry | ChargeItem | ChargeItemDefinition | Citation | Claim | ClaimResponse | ClinicalImpression | ClinicalUseDefinition | CodeSystem | Communication | CommunicationRequest | CompartmentDefinition | Composition | ConceptMap | Condition | Consent | Contract | Coverage | CoverageEligibilityRequest | CoverageEligibilityResponse | DetectedIssue | Device | DeviceDefinition | DeviceMetric | DeviceRequest | DeviceUseStatement | DiagnosticReport | DocumentManifest | DocumentReference | Encounter | Endpoint | EnrollmentRequest | EnrollmentResponse | EpisodeOfCare | EventDefinition | Evidence | EvidenceReport | EvidenceVariable | ExampleScenario | ExplanationOfBenefit | FamilyMemberHistory | Flag | Goal | GraphDefinition | Group | GuidanceResponse | HealthcareService | ImagingStudy | Immunization | ImmunizationEvaluation | ImmunizationRecommendation | ImplementationGuide | Ingredient | InsurancePlan | Invoice | Library | Linkage | List | Location | ManufacturedItemDefinition | Measure | MeasureReport | Media | Medication | MedicationAdministration | MedicationDispense | MedicationKnowledge | MedicationRequest | MedicationStatement | MedicinalProductDefinition | MessageDefinition | MessageHeader | MolecularSequence | NamingSystem | NutritionOrder | NutritionProduct | Observation | ObservationDefinition | OperationDefinition | OperationOutcome | Organization | OrganizationAffiliation | PackagedProductDefinition | Patient | PaymentNotice | PaymentReconciliation | Person | PlanDefinition | Practitioner | PractitionerRole | Procedure | Provenance | Questionnaire | QuestionnaireResponse | RegulatedAuthorization | RelatedPerson | RequestGroup | ResearchDefinition | ResearchElementDefinition | ResearchStudy | ResearchSubject | RiskAssessment | Schedule | SearchParameter | ServiceRequest | Slot | Specimen | SpecimenDefinition | StructureDefinition | StructureMap | Subscription | SubscriptionStatus | SubscriptionTopic | Substance | SubstanceDefinition | SupplyDelivery | SupplyRequest | Task | TerminologyCapabilities | TestReport | TestScript | ValueSet | VerificationResult | VisionPrescription | Parameters | Resource

"""
Reference type for About
"""
type CommunicationRequestAboutReference {
    id: String
    extension: [Extension]
    reference: String
    resource: CommunicationRequestAbout
    type: URI
    identifier: Identifier
    display: String
}

"""
Reference type for Encounter
"""
type CommunicationRequestEncounterReference {
    id: String
    extension: [Extension]
    reference: String
    resource: Encounter
    type: URI
    identifier: Identifier
    display: String
}

union CommunicationRequestRequester = Practitioner | PractitionerRole | Organization | Patient | RelatedPerson | Device

"""
Reference type for Requester
"""
type CommunicationRequestRequesterReference {
    id: String
    extension: [Extension]
    reference: String
    resource: CommunicationRequestRequester
    type: URI
    identifier: Identifier
    display: String
}

union CommunicationRequestRecipient = Device | Organization | Patient | Practitioner | PractitionerRole | RelatedPerson | Group | CareTeam | HealthcareService

"""
Reference type for Recipient
"""
type CommunicationRequestRecipientReference {
    id: String
    extension: [Extension]
    reference: String
    resource: CommunicationRequestRecipient
    type: URI
    identifier: Identifier
    display: String
}

union CommunicationRequestSender = Device | Organization | Patient | Practitioner | PractitionerRole | RelatedPerson | HealthcareService

"""
Reference type for Sender
"""
type CommunicationRequestSenderReference {
    id: String
    extension: [Extension]
    reference: String
    resource: CommunicationRequestSender
    type: URI
    identifier: Identifier
    display: String
}

union CommunicationRequestReasonReference = Condition | Observation | DiagnosticReport | DocumentReference

"""
Reference type for ReasonReference
"""
type CommunicationRequestReasonReferenceReference {
    id: String
    extension: [Extension]
    reference: String
    resource: CommunicationRequestReasonReference
    type: URI
    identifier: Identifier
    display: String
}


"""
CommunicationRequest
    A request to convey information; e.g. the CDS system proposes that an alert be
    sent to a responsible provider, the CDS system proposes that the public health
    agency be notified about a reportable condition.
    If the element is present, it must have either a @value, an @id, or extensions
"""
type CommunicationRequest {
    resourceType: String
    """
    The logical id of the resource, as used in the URL for the resource. Once
    assigned, this value never changes.
    """
    id: String
    """
    The metadata about the resource. This is content that is maintained by the
    infrastructure. Changes to the content might not always be associated with
    version changes to the resource.
    """
    meta: Meta
    """
    A reference to a set of rules that were followed when the resource was
    constructed, and which must be understood when processing the content. Often,
    this is a reference to an implementation guide that defines the special rules
    along with other profiles etc.
    """
    implicitRules: URI
    """
    The base language in which the resource is written.
    """
    language: Code
    """
    A human-readable narrative that contains a summary of the resource and can be
    used to represent the content of the resource to a human. The narrative need
    not encode all the structured data, but is required to contain sufficient
    detail to make it "clinically safe" for a human to just read the narrative.
    Resource definitions may define what content should be represented in the
    narrative to ensure clinical safety.
    """
    text: Narrative
    """
    These resources do not have an independent existence apart from the resource
    that contains them - they cannot be identified independently, and nor can they
    have their own independent transaction scope.
    """
    contained: [ResourceContainer]
    """
    May be used to represent additional information that is not part of the basic
    definition of the resource. To make the use of extensions safe and manageable,
    there is a strict set of governance  applied to the definition and use of
    extensions. Though any implementer can define an extension, there is a set of
    requirements that SHALL be met as part of the definition of the extension.
    """
    extension: [Extension]
    """
    May be used to represent additional information that is not part of the basic
    definition of the resource and that modifies the understanding of the element
    that contains it and/or the understanding of the containing element's
    descendants. Usually modifier elements provide negation or qualification. To
    make the use of extensions safe and manageable, there is a strict set of
    governance applied to the definition and use of extensions. Though any
    implementer is allowed to define an extension, there is a set of requirements
    that SHALL be met as part of the definition of the extension. Applications
    processing a resource are required to check for modifier extensions.
    
    Modifier extensions SHALL NOT change the meaning of any elements on Resource
    or DomainResource (including cannot change the meaning of modifierExtension
    itself).
    """
    modifierExtension: [Extension]
    """
    Business identifiers assigned to this communication request by the performer
    or other systems which remain constant as the resource is updated and
    propagates from server to server.
    """
    identifier: [Identifier]
    """
    A plan or proposal that is fulfilled in whole or in part by this request.
    """
    basedOn: [CommunicationRequestBasedOnReference]
    """
    Completed or terminated request(s) whose function is taken by this new
    request.
    """
    replaces: [CommunicationRequestReplacesReference]
    """
    A shared identifier common to all requests that were authorized more or less
    simultaneously by a single author, representing the identifier of the
    requisition, prescription or similar form.
    """
    groupIdentifier: Identifier
    """
    The status of the proposal or order.
    """
    status: Code
    """
    Captures the reason for the current state of the CommunicationRequest.
    """
    statusReason: CodeableConcept
    """
    The type of message to be sent such as alert, notification, reminder,
    instruction, etc.
    """
    category: [CodeableConcept]
    """
    Characterizes how quickly the proposed act must be initiated. Includes
    concepts such as stat, urgent, routine.
    """
    priority: Code
    """
    If true indicates that the CommunicationRequest is asking for the specified
    action to *not* occur.
    """
    doNotPerform: Boolean
    """
    A channel that was used for this communication (e.g. email, fax).
    """
    medium: [CodeableConcept]
    """
    The patient or group that is the focus of this communication request.
    """
    subject: CommunicationRequestSubjectReference
    """
    Other resources that pertain to this communication request and to which this
    communication request should be associated.
    """
    about: [CommunicationRequestAboutReference]
    """
    The Encounter during which this CommunicationRequest was created or to which
    the creation of this record is tightly associated.
    """
    encounter: CommunicationRequestEncounterReference
    """
    Text, attachment(s), or resource(s) to be communicated to the recipient.
    """
    payload: [CommunicationRequestPayload]
    """
    None
    """
    occurrenceDateTime: DateTime
    """
    None
    """
    occurrencePeriod: Period
    """
    For draft requests, indicates the date of initial creation.  For requests with
    other statuses, indicates the date of activation.
    """
    authoredOn: DateTime
    """
    The device, individual, or organization who initiated the request and has
    responsibility for its activation.
    """
    requester: CommunicationRequestRequesterReference
    """
    The entity (e.g. person, organization, clinical information system, device,
    group, or care team) which is the intended target of the communication.
    """
    recipient: [CommunicationRequestRecipientReference]
    """
    The entity (e.g. person, organization, clinical information system, or device)
    which is to be the source of the communication.
    """
    sender: CommunicationRequestSenderReference
    """
    Describes why the request is being made in coded or textual form.
    """
    reasonCode: [CodeableConcept]
    """
    Indicates another resource whose existence justifies this request.
    """
    reasonReference: [CommunicationRequestReasonReferenceReference]
    """
    Comments made about the request by the requester, sender, recipient, subject
    or other participants.
    """
    note: [Annotation]
}

type CommunicationRequestBundleEntry {
    """
    None
    """
    id: String
    """
    A series of links that provide context to this entry.
    """
    link: [BundleLink]
    """
    The Absolute URL for the resource.  The fullUrl SHALL NOT disagree with the id
    in the resource - i.e. if the fullUrl is not a urn:uuid, the URL shall be
    version-independent URL consistent with the Resource.id. The fullUrl is a
    version independent reference to the resource. The fullUrl element SHALL have
    a value except that:
    * fullUrl can be empty on a POST (although it does not need to when specifying
    a temporary id for reference in the bundle)
    * Results from operations might involve resources that are not identified.
    """
    fullUrl: URI
    """
    CommunicationRequest resource
    """
    resource: CommunicationRequest

    """
    Information about the search process that lead to the creation of this entry.
    """
    search: BundleSearch
    """
    Additional information about how this entry should be processed as part of a
    transaction or batch.  For history, it shows how the entry was processed to
    create the version contained in the entry.
    """
    request: BundleRequest
    """
    Indicates the results of processing the corresponding 'request' entry in the
    batch or transaction being responded to or what the results of an operation
    where when returning history.
    """
    response: BundleResponse
}

type CommunicationRequestBundle {
    id: String
    meta: Meta
    identifier: [Identifier]
    type: Code
    timestamp: Instant
    total: Int
    entry: [CommunicationRequestBundleEntry]
}
