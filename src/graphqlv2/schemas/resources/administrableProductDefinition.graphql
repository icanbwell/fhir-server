# This file is auto-generated by generate_classes so do not edit manually
# import Meta from "../complex_types/meta.graphql"
# import URI from "../simple_types/uri.graphql"
# import Code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import ResourceContainer from "../simple_types/resourceContainer.graphql"
# import Extension from "../extensions/extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import Reference from "../complex_types/reference.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import AdministrableProductDefinitionProperty from "../backbone_elements/administrableProductDefinitionProperty.graphql"
# import AdministrableProductDefinitionRouteOfAdministration from "../backbone_elements/administrableProductDefinitionRouteOfAdministration.graphql"

"""
Reference type for FormOf
"""
type AdministrableProductDefinitionFormOfReference {
    id: String
    extension: [Extension]
    reference: String
    resource: MedicinalProductDefinition
    type: URI
    identifier: Identifier
    display: String
}

"""
Reference type for ProducedFrom
"""
type AdministrableProductDefinitionProducedFromReference {
    id: String
    extension: [Extension]
    reference: String
    resource: ManufacturedItemDefinition
    type: URI
    identifier: Identifier
    display: String
}

"""
Reference type for Device
"""
type AdministrableProductDefinitionDeviceReference {
    id: String
    extension: [Extension]
    reference: String
    resource: DeviceDefinition
    type: URI
    identifier: Identifier
    display: String
}


"""
AdministrableProductDefinition
    A medicinal product in the final form which is suitable for administering to a
    patient (after any mixing of multiple components, dissolution etc. has been
    performed).
    If the element is present, it must have either a @value, an @id, or extensions
"""
type AdministrableProductDefinition {
    resourceType: String
    """
    The logical id of the resource, as used in the URL for the resource. Once
    assigned, this value never changes.
    """
    id: String
    """
    The metadata about the resource. This is content that is maintained by the
    infrastructure. Changes to the content might not always be associated with
    version changes to the resource.
    """
    meta: Meta
    """
    A reference to a set of rules that were followed when the resource was
    constructed, and which must be understood when processing the content. Often,
    this is a reference to an implementation guide that defines the special rules
    along with other profiles etc.
    """
    implicitRules: URI
    """
    The base language in which the resource is written.
    """
    language: Code
    """
    A human-readable narrative that contains a summary of the resource and can be
    used to represent the content of the resource to a human. The narrative need
    not encode all the structured data, but is required to contain sufficient
    detail to make it "clinically safe" for a human to just read the narrative.
    Resource definitions may define what content should be represented in the
    narrative to ensure clinical safety.
    """
    text: Narrative
    """
    These resources do not have an independent existence apart from the resource
    that contains them - they cannot be identified independently, and nor can they
    have their own independent transaction scope.
    """
    contained: [ResourceContainer]
    """
    May be used to represent additional information that is not part of the basic
    definition of the resource. To make the use of extensions safe and manageable,
    there is a strict set of governance  applied to the definition and use of
    extensions. Though any implementer can define an extension, there is a set of
    requirements that SHALL be met as part of the definition of the extension.
    """
    extension: [Extension]
    """
    May be used to represent additional information that is not part of the basic
    definition of the resource and that modifies the understanding of the element
    that contains it and/or the understanding of the containing element's
    descendants. Usually modifier elements provide negation or qualification. To
    make the use of extensions safe and manageable, there is a strict set of
    governance applied to the definition and use of extensions. Though any
    implementer is allowed to define an extension, there is a set of requirements
    that SHALL be met as part of the definition of the extension. Applications
    processing a resource are required to check for modifier extensions.
    
    Modifier extensions SHALL NOT change the meaning of any elements on Resource
    or DomainResource (including cannot change the meaning of modifierExtension
    itself).
    """
    modifierExtension: [Extension]
    """
    An identifier for the administrable product.
    """
    identifier: [Identifier]
    """
    The status of this administrable product. Enables tracking the life-cycle of
    the content.
    """
    status: Code
    """
    References a product from which one or more of the constituent parts of that
    product can be prepared and used as described by this administrable product.
    If this administrable product describes the administration of a crushed
    tablet, the 'formOf' would be the product representing a distribution
    containing tablets and possibly also a cream.  This is distinct from the
    'producedFrom' which refers to the specific components of the product that are
    used in this preparation, rather than the product as a whole.
    """
    formOf: [AdministrableProductDefinitionFormOfReference]
    """
    The dose form of the final product after necessary reconstitution or
    processing. Contrasts to the manufactured dose form (see
    ManufacturedItemDefinition). If the manufactured form was 'powder for solution
    for injection', the administrable dose form could be 'solution for injection'
    (once mixed with another item having manufactured form 'solvent for solution
    for injection').
    """
    administrableDoseForm: CodeableConcept
    """
    The presentation type in which this item is given to a patient. e.g. for a
    spray - 'puff' (as in 'contains 100 mcg per puff'), or for a liquid - 'vial'
    (as in 'contains 5 ml per vial').
    """
    unitOfPresentation: CodeableConcept
    """
    Indicates the specific manufactured items that are part of the 'formOf'
    product that are used in the preparation of this specific administrable form.
    In some cases, an administrable form might use all of the items from the
    overall product (or there might only be one item), while in other cases, an
    administrable form might use only a subset of the items available in the
    overall product.  For example, an administrable form might involve combining a
    liquid and a powder available as part of an overall product, but not involve
    applying the also supplied cream.
    """
    producedFrom: [AdministrableProductDefinitionProducedFromReference]
    """
    The ingredients of this administrable medicinal product. This is only needed
    if the ingredients are not specified either using ManufacturedItemDefiniton
    (via AdministrableProductDefinition.producedFrom) to state which component
    items are used to make this, or using by incoming references from the
    Ingredient resource, to state in detail which substances exist within this.
    This element allows a basic coded ingredient to be used.
    """
    ingredient: [CodeableConcept]
    """
    A device that is integral to the medicinal product, in effect being considered
    as an "ingredient" of the medicinal product. This is not intended for devices
    that are just co-packaged.
    """
    device: AdministrableProductDefinitionDeviceReference
    """
    Characteristics e.g. a product's onset of action.
    """
    property: [AdministrableProductDefinitionProperty]
    """
    The path by which the product is taken into or makes contact with the body. In
    some regions this is referred to as the licenced or approved route.
    RouteOfAdministration cannot be used when the 'formOf' product already uses
    MedicinalProductDefinition.route (and vice versa).
    """
    routeOfAdministration: [AdministrableProductDefinitionRouteOfAdministration]
}

type AdministrableProductDefinitionBundleEntry {
    """
    None
    """
    id: String
    """
    A series of links that provide context to this entry.
    """
    link: [BundleLink]
    """
    The Absolute URL for the resource.  The fullUrl SHALL NOT disagree with the id
    in the resource - i.e. if the fullUrl is not a urn:uuid, the URL shall be
    version-independent URL consistent with the Resource.id. The fullUrl is a
    version independent reference to the resource. The fullUrl element SHALL have
    a value except that:
    * fullUrl can be empty on a POST (although it does not need to when specifying
    a temporary id for reference in the bundle)
    * Results from operations might involve resources that are not identified.
    """
    fullUrl: URI
    """
    AdministrableProductDefinition resource
    """
    resource: AdministrableProductDefinition

    """
    Information about the search process that lead to the creation of this entry.
    """
    search: BundleSearch
    """
    Additional information about how this entry should be processed as part of a
    transaction or batch.  For history, it shows how the entry was processed to
    create the version contained in the entry.
    """
    request: BundleRequest
    """
    Indicates the results of processing the corresponding 'request' entry in the
    batch or transaction being responded to or what the results of an operation
    where when returning history.
    """
    response: BundleResponse
}

type AdministrableProductDefinitionBundle {
    id: String
    meta: Meta
    identifier: [Identifier]
    type: Code
    timestamp: Instant
    total: Int
    entry: [AdministrableProductDefinitionBundleEntry]
}
