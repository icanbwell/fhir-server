# This file is auto-generated by generate_classes so do not edit manually
# import Extension from "../extensions/extension.graphql"
# import Code from "../simple_types/code.graphql"
# import Coding from "../complex_types/coding.graphql"
# import ElementDefinitionSlicing from "../backbone_elements/elementDefinitionSlicing.graphql"
# import Markdown from "../simple_types/markdown.graphql"
# import ElementDefinitionBase from "../backbone_elements/elementDefinitionBase.graphql"
# import URI from "../simple_types/uri.graphql"
# import ElementDefinitionType from "../backbone_elements/elementDefinitionType.graphql"
# import Base64Binary from "../simple_types/base64Binary.graphql"
# import Canonical from "../simple_types/canonical.graphql"
# import Date from "../simple_types/date.graphql"
# import DateTime from "../simple_types/dateTime.graphql"
# import Instant from "../simple_types/instant.graphql"
# import integer from "../simple_types/int.graphql"
# import OID from "../simple_types/oid.graphql"
# import positiveInt from "../simple_types/int.graphql"
# import Time from "../simple_types/time.graphql"
# import URL from "../simple_types/url.graphql"
# import UUID from "../simple_types/uuid.graphql"
# import Address from "../complex_types/address.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Annotation from "../complex_types/annotation.graphql"
# import Attachment from "../complex_types/attachment.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableReference from "../complex_types/codeableReference.graphql"
# import ContactPoint from "../complex_types/contactPoint.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import HumanName from "../complex_types/humanName.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import Money from "../complex_types/money.graphql"
# import Period from "../complex_types/period.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Range from "../complex_types/range.graphql"
# import Ratio from "../complex_types/ratio.graphql"
# import RatioRange from "../complex_types/ratioRange.graphql"
# import Reference from "../complex_types/reference.graphql"
# import SampledData from "../complex_types/sampledData.graphql"
# import Signature from "../complex_types/signature.graphql"
# import Timing from "../backbone_elements/timing.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import Contributor from "../complex_types/contributor.graphql"
# import DataRequirement from "../complex_types/dataRequirement.graphql"
# import Expression from "../complex_types/expression.graphql"
# import ParameterDefinition from "../complex_types/parameterDefinition.graphql"
# import RelatedArtifact from "../complex_types/relatedArtifact.graphql"
# import TriggerDefinition from "../complex_types/triggerDefinition.graphql"
# import UsageContext from "../complex_types/usageContext.graphql"
# import Dosage from "../backbone_elements/dosage.graphql"
# import ElementDefinitionExample from "../backbone_elements/elementDefinitionExample.graphql"
# import ElementDefinitionConstraint from "../backbone_elements/elementDefinitionConstraint.graphql"
# import ElementDefinitionBinding from "../backbone_elements/elementDefinitionBinding.graphql"
# import ElementDefinitionMapping from "../backbone_elements/elementDefinitionMapping.graphql"

"""
Reference type for DefaultValueReference
"""
type ElementDefinitionDefaultValueReferenceReference {
    id: String
    extension: [Extension]
    reference: String
    resource: Resource
    type: URI
    identifier: Identifier
    display: String
}

"""
Reference type for FixedReference
"""
type ElementDefinitionFixedReferenceReference {
    id: String
    extension: [Extension]
    reference: String
    resource: Resource
    type: URI
    identifier: Identifier
    display: String
}

"""
Reference type for PatternReference
"""
type ElementDefinitionPatternReferenceReference {
    id: String
    extension: [Extension]
    reference: String
    resource: Resource
    type: URI
    identifier: Identifier
    display: String
}


"""
ElementDefinition
    Captures constraints on each element within the resource, profile, or
    extension.
    If the element is present, it must have a value for at least one of the
    defined elements, an @id referenced from the Narrative, or extensions
"""
type ElementDefinition {
    """
    None
    """
    id: String
    """
    May be used to represent additional information that is not part of the basic
    definition of the element. To make the use of extensions safe and manageable,
    there is a strict set of governance  applied to the definition and use of
    extensions. Though any implementer can define an extension, there is a set of
    requirements that SHALL be met as part of the definition of the extension.
    """
    extension: [Extension]
    """
    May be used to represent additional information that is not part of the basic
    definition of the element and that modifies the understanding of the element
    in which it is contained and/or the understanding of the containing element's
    descendants. Usually modifier elements provide negation or qualification. To
    make the use of extensions safe and manageable, there is a strict set of
    governance applied to the definition and use of extensions. Though any
    implementer can define an extension, there is a set of requirements that SHALL
    be met as part of the definition of the extension. Applications processing a
    resource are required to check for modifier extensions.
    
    Modifier extensions SHALL NOT change the meaning of any elements on Resource
    or DomainResource (including cannot change the meaning of modifierExtension
    itself).
    """
    modifierExtension: [Extension]
    """
    The path identifies the element and is expressed as a "."-separated list of
    ancestor elements, beginning with the name of the resource or extension.
    """
    path: String
    """
    Codes that define how this element is represented in instances, when the
    deviation varies from the normal case.
    """
    representation: [Code]
    """
    The name of this element definition slice, when slicing is working. The name
    must be a token with no dots or spaces. This is a unique name referring to a
    specific set of constraints applied to this element, used to provide a name to
    different slices of the same element.
    """
    sliceName: String
    """
    If true, indicates that this slice definition is constraining a slice
    definition with the same name in an inherited profile. If false, the slice is
    not overriding any slice in an inherited profile. If missing, the slice might
    or might not be overriding a slice in an inherited profile, depending on the
    sliceName.
    """
    sliceIsConstraining: Boolean
    """
    A single preferred label which is the text to display beside the element
    indicating its meaning or to use to prompt for the element in a user display
    or form.
    """
    label: String
    """
    A code that has the same meaning as the element in a particular terminology.
    """
    code: [Coding]
    """
    Indicates that the element is sliced into a set of alternative definitions
    (i.e. in a structure definition, there are multiple different constraints on a
    single element in the base resource). Slicing can be used in any resource that
    has cardinality ..* on the base resource, or any resource with a choice of
    types. The set of slices is any elements that come after this in the element
    sequence that have the same path, until a shorter path occurs (the shorter
    path terminates the set).
    """
    slicing: ElementDefinitionSlicing
    """
    A concise description of what this element means (e.g. for use in
    autogenerated summaries).
    """
    short: String
    """
    Provides a complete explanation of the meaning of the data element for human
    readability.  For the case of elements derived from existing elements (e.g.
    constraints), the definition SHALL be consistent with the base definition, but
    convey the meaning of the element in the particular context of use of the
    resource. (Note: The text you are reading is specified in
    ElementDefinition.definition).
    """
    definition: Markdown
    """
    Explanatory notes and implementation guidance about the data element,
    including notes about how to use the data properly, exceptions to proper use,
    etc. (Note: The text you are reading is specified in
    ElementDefinition.comment).
    """
    comment: Markdown
    """
    This element is for traceability of why the element was created and why the
    constraints exist as they do. This may be used to point to source materials or
    specifications that drove the structure of this element.
    """
    requirements: Markdown
    """
    Identifies additional names by which this element might also be known.
    """
    alias: [String]
    """
    The minimum number of times this element SHALL appear in the instance.
    """
    min: Int
    """
    The maximum number of times this element is permitted to appear in the
    instance.
    """
    max: String
    """
    Information about the base definition of the element, provided to make it
    unnecessary for tools to trace the deviation of the element through the
    derived and related profiles. When the element definition is not the original
    definition of an element - i.g. either in a constraint on another type, or for
    elements from a super type in a snap shot - then the information in provided
    in the element definition may be different to the base definition. On the
    original definition of the element, it will be same.
    """
    base: ElementDefinitionBase
    """
    Identifies an element defined elsewhere in the definition whose content rules
    should be applied to the current element. ContentReferences bring across all
    the rules that are in the ElementDefinition for the element, including
    definitions, cardinality constraints, bindings, invariants etc.
    """
    contentReference: URI
    """
    The data type or resource that the value of this element is permitted to be.
    """
    type: [ElementDefinitionType]
    """
    None
    """
    defaultValueBase64Binary: Base64Binary
    """
    None
    """
    defaultValueBoolean: Boolean
    """
    None
    """
    defaultValueCanonical: Canonical
    """
    None
    """
    defaultValueCode: Code
    """
    None
    """
    defaultValueDate: Date
    """
    None
    """
    defaultValueDateTime: DateTime
    """
    None
    """
    defaultValueDecimal: Float
    """
    None
    """
    defaultValueId: ID
    """
    None
    """
    defaultValueInstant: Instant
    """
    None
    """
    defaultValueInteger: Int
    """
    None
    """
    defaultValueMarkdown: Markdown
    """
    None
    """
    defaultValueOid: OID
    """
    None
    """
    defaultValuePositiveInt: Int
    """
    None
    """
    defaultValueString: String
    """
    None
    """
    defaultValueTime: Time
    """
    None
    """
    defaultValueUnsignedInt: Int
    """
    None
    """
    defaultValueUri: URI
    """
    None
    """
    defaultValueUrl: URL
    """
    None
    """
    defaultValueUuid: UUID
    """
    None
    """
    defaultValueAddress: Address
    """
    None
    """
    defaultValueAge: Quantity
    """
    None
    """
    defaultValueAnnotation: Annotation
    """
    None
    """
    defaultValueAttachment: Attachment
    """
    None
    """
    defaultValueCodeableConcept: CodeableConcept
    """
    None
    """
    defaultValueCodeableReference: CodeableReference
    """
    None
    """
    defaultValueCoding: Coding
    """
    None
    """
    defaultValueContactPoint: ContactPoint
    """
    None
    """
    defaultValueCount: Quantity
    """
    None
    """
    defaultValueDistance: Quantity
    """
    None
    """
    defaultValueDuration: Quantity
    """
    None
    """
    defaultValueHumanName: HumanName
    """
    None
    """
    defaultValueIdentifier: Identifier
    """
    None
    """
    defaultValueMoney: Money
    """
    None
    """
    defaultValuePeriod: Period
    """
    None
    """
    defaultValueQuantity: Quantity
    """
    None
    """
    defaultValueRange: Range
    """
    None
    """
    defaultValueRatio: Ratio
    """
    None
    """
    defaultValueRatioRange: RatioRange
    """
    None
    """
    defaultValueReference: ElementDefinitionDefaultValueReferenceReference
    """
    None
    """
    defaultValueSampledData: SampledData
    """
    None
    """
    defaultValueSignature: Signature
    """
    None
    """
    defaultValueTiming: Timing
    """
    None
    """
    defaultValueContactDetail: ContactDetail
    """
    None
    """
    defaultValueContributor: Contributor
    """
    None
    """
    defaultValueDataRequirement: DataRequirement
    """
    None
    """
    defaultValueExpression: Expression
    """
    None
    """
    defaultValueParameterDefinition: ParameterDefinition
    """
    None
    """
    defaultValueRelatedArtifact: RelatedArtifact
    """
    None
    """
    defaultValueTriggerDefinition: TriggerDefinition
    """
    None
    """
    defaultValueUsageContext: UsageContext
    """
    None
    """
    defaultValueDosage: Dosage
    """
    The Implicit meaning that is to be understood when this element is missing
    (e.g. 'when this element is missing, the period is ongoing').
    """
    meaningWhenMissing: Markdown
    """
    If present, indicates that the order of the repeating element has meaning and
    describes what that meaning is.  If absent, it means that the order of the
    element has no meaning.
    """
    orderMeaning: String
    """
    None
    """
    fixedBase64Binary: Base64Binary
    """
    None
    """
    fixedBoolean: Boolean
    """
    None
    """
    fixedCanonical: Canonical
    """
    None
    """
    fixedCode: Code
    """
    None
    """
    fixedDate: Date
    """
    None
    """
    fixedDateTime: DateTime
    """
    None
    """
    fixedDecimal: Float
    """
    None
    """
    fixedId: ID
    """
    None
    """
    fixedInstant: Instant
    """
    None
    """
    fixedInteger: Int
    """
    None
    """
    fixedMarkdown: Markdown
    """
    None
    """
    fixedOid: OID
    """
    None
    """
    fixedPositiveInt: Int
    """
    None
    """
    fixedString: String
    """
    None
    """
    fixedTime: Time
    """
    None
    """
    fixedUnsignedInt: Int
    """
    None
    """
    fixedUri: URI
    """
    None
    """
    fixedUrl: URL
    """
    None
    """
    fixedUuid: UUID
    """
    None
    """
    fixedAddress: Address
    """
    None
    """
    fixedAge: Quantity
    """
    None
    """
    fixedAnnotation: Annotation
    """
    None
    """
    fixedAttachment: Attachment
    """
    None
    """
    fixedCodeableConcept: CodeableConcept
    """
    None
    """
    fixedCodeableReference: CodeableReference
    """
    None
    """
    fixedCoding: Coding
    """
    None
    """
    fixedContactPoint: ContactPoint
    """
    None
    """
    fixedCount: Quantity
    """
    None
    """
    fixedDistance: Quantity
    """
    None
    """
    fixedDuration: Quantity
    """
    None
    """
    fixedHumanName: HumanName
    """
    None
    """
    fixedIdentifier: Identifier
    """
    None
    """
    fixedMoney: Money
    """
    None
    """
    fixedPeriod: Period
    """
    None
    """
    fixedQuantity: Quantity
    """
    None
    """
    fixedRange: Range
    """
    None
    """
    fixedRatio: Ratio
    """
    None
    """
    fixedRatioRange: RatioRange
    """
    None
    """
    fixedReference: ElementDefinitionFixedReferenceReference
    """
    None
    """
    fixedSampledData: SampledData
    """
    None
    """
    fixedSignature: Signature
    """
    None
    """
    fixedTiming: Timing
    """
    None
    """
    fixedContactDetail: ContactDetail
    """
    None
    """
    fixedContributor: Contributor
    """
    None
    """
    fixedDataRequirement: DataRequirement
    """
    None
    """
    fixedExpression: Expression
    """
    None
    """
    fixedParameterDefinition: ParameterDefinition
    """
    None
    """
    fixedRelatedArtifact: RelatedArtifact
    """
    None
    """
    fixedTriggerDefinition: TriggerDefinition
    """
    None
    """
    fixedUsageContext: UsageContext
    """
    None
    """
    fixedDosage: Dosage
    """
    None
    """
    patternBase64Binary: Base64Binary
    """
    None
    """
    patternBoolean: Boolean
    """
    None
    """
    patternCanonical: Canonical
    """
    None
    """
    patternCode: Code
    """
    None
    """
    patternDate: Date
    """
    None
    """
    patternDateTime: DateTime
    """
    None
    """
    patternDecimal: Float
    """
    None
    """
    patternId: ID
    """
    None
    """
    patternInstant: Instant
    """
    None
    """
    patternInteger: Int
    """
    None
    """
    patternMarkdown: Markdown
    """
    None
    """
    patternOid: OID
    """
    None
    """
    patternPositiveInt: Int
    """
    None
    """
    patternString: String
    """
    None
    """
    patternTime: Time
    """
    None
    """
    patternUnsignedInt: Int
    """
    None
    """
    patternUri: URI
    """
    None
    """
    patternUrl: URL
    """
    None
    """
    patternUuid: UUID
    """
    None
    """
    patternAddress: Address
    """
    None
    """
    patternAge: Quantity
    """
    None
    """
    patternAnnotation: Annotation
    """
    None
    """
    patternAttachment: Attachment
    """
    None
    """
    patternCodeableConcept: CodeableConcept
    """
    None
    """
    patternCodeableReference: CodeableReference
    """
    None
    """
    patternCoding: Coding
    """
    None
    """
    patternContactPoint: ContactPoint
    """
    None
    """
    patternCount: Quantity
    """
    None
    """
    patternDistance: Quantity
    """
    None
    """
    patternDuration: Quantity
    """
    None
    """
    patternHumanName: HumanName
    """
    None
    """
    patternIdentifier: Identifier
    """
    None
    """
    patternMoney: Money
    """
    None
    """
    patternPeriod: Period
    """
    None
    """
    patternQuantity: Quantity
    """
    None
    """
    patternRange: Range
    """
    None
    """
    patternRatio: Ratio
    """
    None
    """
    patternRatioRange: RatioRange
    """
    None
    """
    patternReference: ElementDefinitionPatternReferenceReference
    """
    None
    """
    patternSampledData: SampledData
    """
    None
    """
    patternSignature: Signature
    """
    None
    """
    patternTiming: Timing
    """
    None
    """
    patternContactDetail: ContactDetail
    """
    None
    """
    patternContributor: Contributor
    """
    None
    """
    patternDataRequirement: DataRequirement
    """
    None
    """
    patternExpression: Expression
    """
    None
    """
    patternParameterDefinition: ParameterDefinition
    """
    None
    """
    patternRelatedArtifact: RelatedArtifact
    """
    None
    """
    patternTriggerDefinition: TriggerDefinition
    """
    None
    """
    patternUsageContext: UsageContext
    """
    None
    """
    patternDosage: Dosage
    """
    A sample value for this element demonstrating the type of information that
    would typically be found in the element.
    """
    example: [ElementDefinitionExample]
    """
    None
    """
    minValueDate: Date
    """
    None
    """
    minValueDateTime: DateTime
    """
    None
    """
    minValueInstant: Instant
    """
    None
    """
    minValueTime: Time
    """
    None
    """
    minValueDecimal: Float
    """
    None
    """
    minValueInteger: Int
    """
    None
    """
    minValuePositiveInt: Int
    """
    None
    """
    minValueUnsignedInt: Int
    """
    None
    """
    minValueQuantity: Quantity
    """
    None
    """
    maxValueDate: Date
    """
    None
    """
    maxValueDateTime: DateTime
    """
    None
    """
    maxValueInstant: Instant
    """
    None
    """
    maxValueTime: Time
    """
    None
    """
    maxValueDecimal: Float
    """
    None
    """
    maxValueInteger: Int
    """
    None
    """
    maxValuePositiveInt: Int
    """
    None
    """
    maxValueUnsignedInt: Int
    """
    None
    """
    maxValueQuantity: Quantity
    """
    Indicates the maximum length in characters that is permitted to be present in
    conformant instances and which is expected to be supported by conformant
    consumers that support the element.
    """
    maxLength: Int
    """
    A reference to an invariant that may make additional statements about the
    cardinality or value in the instance.
    """
    condition: [ID]
    """
    Formal constraints such as co-occurrence and other constraints that can be
    computationally evaluated within the context of the instance.
    """
    constraint: [ElementDefinitionConstraint]
    """
    If true, implementations that produce or consume resources SHALL provide
    "support" for the element in some meaningful way.  If false, the element may
    be ignored and not supported. If false, whether to populate or use the data
    element in any way is at the discretion of the implementation.
    """
    mustSupport: Boolean
    """
    If true, the value of this element affects the interpretation of the element
    or resource that contains it, and the value of the element cannot be ignored.
    Typically, this is used for status, negation and qualification codes. The
    effect of this is that the element cannot be ignored by systems: they SHALL
    either recognize the element and process it, and/or a pre-determination has
    been made that it is not relevant to their particular system.
    """
    isModifier: Boolean
    """
    Explains how that element affects the interpretation of the resource or
    element that contains it.
    """
    isModifierReason: String
    """
    Whether the element should be included if a client requests a search with the
    parameter _summary=true.
    """
    isSummary: Boolean
    """
    Binds to a value set if this element is coded (code, Coding, CodeableConcept,
    Quantity), or the data types (string, uri).
    """
    binding: ElementDefinitionBinding
    """
    Identifies a concept from an external specification that roughly corresponds
    to this element.
    """
    mapping: [ElementDefinitionMapping]
}
