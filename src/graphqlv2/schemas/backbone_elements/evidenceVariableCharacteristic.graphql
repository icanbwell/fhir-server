# This file is auto-generated by generate_classes so do not edit manually
# import Extension from "../extensions/extension.graphql"
# import Group from "../resources/group.graphql"
# import EvidenceVariable from "../resources/evidenceVariable.graphql"
# import Canonical from "../simple_types/canonical.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Expression from "../complex_types/expression.graphql"
# import EvidenceVariableTimeFromStart from "../backbone_elements/evidenceVariableTimeFromStart.graphql"
# import Code from "../simple_types/code.graphql"

union EvidenceVariableCharacteristicDefinitionReference = Group | EvidenceVariable

"""
Reference type for DefinitionReference
"""
type EvidenceVariableCharacteristicDefinitionReferenceReference {
    id: String
    extension: [Extension]
    reference: String
    resource: EvidenceVariableCharacteristicDefinitionReference
    type: URI
    identifier: Identifier
    display: String
}

union EvidenceVariableCharacteristicDevice = Device | DeviceMetric

"""
Reference type for Device
"""
type EvidenceVariableCharacteristicDeviceReference {
    id: String
    extension: [Extension]
    reference: String
    resource: EvidenceVariableCharacteristicDevice
    type: URI
    identifier: Identifier
    display: String
}


"""
EvidenceVariable.Characteristic
    The EvidenceVariable resource describes an element that knowledge (Evidence)
    is about.
"""
type EvidenceVariableCharacteristic {
    """
    None
    """
    id: String
    """
    May be used to represent additional information that is not part of the basic
    definition of the element. To make the use of extensions safe and manageable,
    there is a strict set of governance  applied to the definition and use of
    extensions. Though any implementer can define an extension, there is a set of
    requirements that SHALL be met as part of the definition of the extension.
    """
    extension: [Extension]
    """
    May be used to represent additional information that is not part of the basic
    definition of the element and that modifies the understanding of the element
    in which it is contained and/or the understanding of the containing element's
    descendants. Usually modifier elements provide negation or qualification. To
    make the use of extensions safe and manageable, there is a strict set of
    governance applied to the definition and use of extensions. Though any
    implementer can define an extension, there is a set of requirements that SHALL
    be met as part of the definition of the extension. Applications processing a
    resource are required to check for modifier extensions.
    
    Modifier extensions SHALL NOT change the meaning of any elements on Resource
    or DomainResource (including cannot change the meaning of modifierExtension
    itself).
    """
    modifierExtension: [Extension]
    """
    A short, natural language description of the characteristic that could be used
    to communicate the criteria to an end-user.
    """
    description: String
    """
    None
    """
    definitionReference: EvidenceVariableCharacteristicDefinitionReferenceReference
    """
    None
    """
    definitionCanonical: Canonical
    """
    None
    """
    definitionCodeableConcept: CodeableConcept
    """
    None
    """
    definitionExpression: Expression
    """
    Method used for describing characteristic.
    """
    method: CodeableConcept
    """
    Device used for determining characteristic.
    """
    device: EvidenceVariableCharacteristicDeviceReference
    """
    When true, members with this characteristic are excluded from the element.
    """
    exclude: Boolean
    """
    Indicates duration, period, or point of observation from the participant's
    study entry.
    """
    timeFromStart: EvidenceVariableTimeFromStart
    """
    Indicates how elements are aggregated within the study effective period.
    """
    groupMeasure: Code
}
