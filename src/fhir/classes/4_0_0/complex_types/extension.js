/* eslint-disable no-unused-vars */
// This file is auto-generated by generate_classes so do not edit manually

const Element = require('../complex_types/element');


/**
Extension
    Optional Extension Element - found in all resources.
    If the element is present, it must have a value for at least one of the
    defined elements, an @id referenced from the Narrative, or extensions
*/
class Extension extends Element {
    /**
     * @param {String|undefined} [id],
     * @param {Extension[]|undefined} [extension],
     * @param {uri|undefined} [url],
     * @param {base64Binary|undefined} [valueBase64Binary],
     * @param {Boolean|undefined} [valueBoolean],
     * @param {canonical|undefined} [valueCanonical],
     * @param {code|undefined} [valueCode],
     * @param {date|undefined} [valueDate],
     * @param {dateTime|undefined} [valueDateTime],
     * @param {decimal|undefined} [valueDecimal],
     * @param {id|undefined} [valueId],
     * @param {instant|undefined} [valueInstant],
     * @param {Int|undefined} [valueInteger],
     * @param {markdown|undefined} [valueMarkdown],
     * @param {oid|undefined} [valueOid],
     * @param {Int|undefined} [valuePositiveInt],
     * @param {String|undefined} [valueString],
     * @param {time|undefined} [valueTime],
     * @param {unsignedInt|undefined} [valueUnsignedInt],
     * @param {uri|undefined} [valueUri],
     * @param {url|undefined} [valueUrl],
     * @param {uuid|undefined} [valueUuid],
     * @param {Address|undefined} [valueAddress],
     * @param {Quantity|undefined} [valueAge],
     * @param {Annotation|undefined} [valueAnnotation],
     * @param {Attachment|undefined} [valueAttachment],
     * @param {CodeableConcept|undefined} [valueCodeableConcept],
     * @param {Coding|undefined} [valueCoding],
     * @param {ContactPoint|undefined} [valueContactPoint],
     * @param {Quantity|undefined} [valueCount],
     * @param {Quantity|undefined} [valueDistance],
     * @param {Quantity|undefined} [valueDuration],
     * @param {HumanName|undefined} [valueHumanName],
     * @param {Identifier|undefined} [valueIdentifier],
     * @param {Money|undefined} [valueMoney],
     * @param {Period|undefined} [valuePeriod],
     * @param {Quantity|undefined} [valueQuantity],
     * @param {Range|undefined} [valueRange],
     * @param {Ratio|undefined} [valueRatio],
     * @param {Reference|undefined} [valueReference],
     * @param {SampledData|undefined} [valueSampledData],
     * @param {Signature|undefined} [valueSignature],
     * @param {Timing|undefined} [valueTiming],
     * @param {ContactDetail|undefined} [valueContactDetail],
     * @param {Contributor|undefined} [valueContributor],
     * @param {DataRequirement|undefined} [valueDataRequirement],
     * @param {Expression|undefined} [valueExpression],
     * @param {ParameterDefinition|undefined} [valueParameterDefinition],
     * @param {RelatedArtifact|undefined} [valueRelatedArtifact],
     * @param {TriggerDefinition|undefined} [valueTriggerDefinition],
     * @param {UsageContext|undefined} [valueUsageContext],
     * @param {Dosage|undefined} [valueDosage],
     * @param {Meta|undefined} [valueMeta],
    */
    constructor(
        {
            id,
            extension,
            url,
            valueBase64Binary,
            valueBoolean,
            valueCanonical,
            valueCode,
            valueDate,
            valueDateTime,
            valueDecimal,
            valueId,
            valueInstant,
            valueInteger,
            valueMarkdown,
            valueOid,
            valuePositiveInt,
            valueString,
            valueTime,
            valueUnsignedInt,
            valueUri,
            valueUrl,
            valueUuid,
            valueAddress,
            valueAge,
            valueAnnotation,
            valueAttachment,
            valueCodeableConcept,
            valueCoding,
            valueContactPoint,
            valueCount,
            valueDistance,
            valueDuration,
            valueHumanName,
            valueIdentifier,
            valueMoney,
            valuePeriod,
            valueQuantity,
            valueRange,
            valueRatio,
            valueReference,
            valueSampledData,
            valueSignature,
            valueTiming,
            valueContactDetail,
            valueContributor,
            valueDataRequirement,
            valueExpression,
            valueParameterDefinition,
            valueRelatedArtifact,
            valueTriggerDefinition,
            valueUsageContext,
            valueDosage,
            valueMeta,
        }
    ) {
        super({});

        // ---- Define getters and setters as enumerable ---

        /**
         * @description None
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'id', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.id,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.id = undefined;
                    return;
                }
                this.__data.id = valueProvided;
            }
        });

        /**
         * @description May be used to represent additional information that is not part of the basic
    definition of the element. To make the use of extensions safe and manageable,
    there is a strict set of governance  applied to the definition and use of
    extensions. Though any implementer can define an extension, there is a set of
    requirements that SHALL be met as part of the definition of the extension.
         * @property {Extension[]|undefined}
        */
        Object.defineProperty(this, 'extension', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.extension,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.extension = undefined;
                    return;
                }
                this.__data.extension = Array.isArray(valueProvided) ? valueProvided.filter(v => v).map(v => new Extension(v)) : [new Extension(valueProvided)];
            }
        });

        /**
         * @description None
         * @property {uri|undefined}
        */
        Object.defineProperty(this, 'url', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.url,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.url = undefined;
                    return;
                }
                this.__data.url = valueProvided;
            }
        });

        /**
         * @description None
         * @property {base64Binary|undefined}
        */
        Object.defineProperty(this, 'valueBase64Binary', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueBase64Binary,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueBase64Binary = undefined;
                    return;
                }
                this.__data.valueBase64Binary = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Boolean|undefined}
        */
        Object.defineProperty(this, 'valueBoolean', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueBoolean,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueBoolean = undefined;
                    return;
                }
                this.__data.valueBoolean = valueProvided;
            }
        });

        /**
         * @description None
         * @property {canonical|undefined}
        */
        Object.defineProperty(this, 'valueCanonical', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueCanonical,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueCanonical = undefined;
                    return;
                }
                this.__data.valueCanonical = valueProvided;
            }
        });

        /**
         * @description None
         * @property {code|undefined}
        */
        Object.defineProperty(this, 'valueCode', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueCode,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueCode = undefined;
                    return;
                }
                this.__data.valueCode = valueProvided;
            }
        });

        /**
         * @description None
         * @property {date|undefined}
        */
        Object.defineProperty(this, 'valueDate', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueDate,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueDate = undefined;
                    return;
                }
                this.__data.valueDate = valueProvided;
            }
        });

        /**
         * @description None
         * @property {dateTime|undefined}
        */
        Object.defineProperty(this, 'valueDateTime', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueDateTime,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueDateTime = undefined;
                    return;
                }
                this.__data.valueDateTime = valueProvided;
            }
        });

        /**
         * @description None
         * @property {decimal|undefined}
        */
        Object.defineProperty(this, 'valueDecimal', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueDecimal,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueDecimal = undefined;
                    return;
                }
                this.__data.valueDecimal = valueProvided;
            }
        });

        /**
         * @description None
         * @property {id|undefined}
        */
        Object.defineProperty(this, 'valueId', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueId,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueId = undefined;
                    return;
                }
                this.__data.valueId = valueProvided;
            }
        });

        /**
         * @description None
         * @property {instant|undefined}
        */
        Object.defineProperty(this, 'valueInstant', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueInstant,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueInstant = undefined;
                    return;
                }
                this.__data.valueInstant = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Int|undefined}
        */
        Object.defineProperty(this, 'valueInteger', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueInteger,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueInteger = undefined;
                    return;
                }
                this.__data.valueInteger = valueProvided;
            }
        });

        /**
         * @description None
         * @property {markdown|undefined}
        */
        Object.defineProperty(this, 'valueMarkdown', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueMarkdown,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueMarkdown = undefined;
                    return;
                }
                this.__data.valueMarkdown = valueProvided;
            }
        });

        /**
         * @description None
         * @property {oid|undefined}
        */
        Object.defineProperty(this, 'valueOid', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueOid,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueOid = undefined;
                    return;
                }
                this.__data.valueOid = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Int|undefined}
        */
        Object.defineProperty(this, 'valuePositiveInt', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valuePositiveInt,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valuePositiveInt = undefined;
                    return;
                }
                this.__data.valuePositiveInt = valueProvided;
            }
        });

        /**
         * @description None
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'valueString', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueString,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueString = undefined;
                    return;
                }
                this.__data.valueString = valueProvided;
            }
        });

        /**
         * @description None
         * @property {time|undefined}
        */
        Object.defineProperty(this, 'valueTime', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueTime,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueTime = undefined;
                    return;
                }
                this.__data.valueTime = valueProvided;
            }
        });

        /**
         * @description None
         * @property {unsignedInt|undefined}
        */
        Object.defineProperty(this, 'valueUnsignedInt', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueUnsignedInt,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueUnsignedInt = undefined;
                    return;
                }
                this.__data.valueUnsignedInt = valueProvided;
            }
        });

        /**
         * @description None
         * @property {uri|undefined}
        */
        Object.defineProperty(this, 'valueUri', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueUri,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueUri = undefined;
                    return;
                }
                this.__data.valueUri = valueProvided;
            }
        });

        /**
         * @description None
         * @property {url|undefined}
        */
        Object.defineProperty(this, 'valueUrl', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueUrl,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueUrl = undefined;
                    return;
                }
                this.__data.valueUrl = valueProvided;
            }
        });

        /**
         * @description None
         * @property {uuid|undefined}
        */
        Object.defineProperty(this, 'valueUuid', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueUuid,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueUuid = undefined;
                    return;
                }
                this.__data.valueUuid = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Address|undefined}
        */
        Object.defineProperty(this, 'valueAddress', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueAddress,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueAddress = undefined;
                    return;
                }
                let Address = require('../complex_types/address.js');
                this.__data.valueAddress = new Address(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Quantity|undefined}
        */
        Object.defineProperty(this, 'valueAge', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueAge,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueAge = undefined;
                    return;
                }
                let Quantity = require('../complex_types/quantity.js');
                this.__data.valueAge = new Quantity(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Annotation|undefined}
        */
        Object.defineProperty(this, 'valueAnnotation', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueAnnotation,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueAnnotation = undefined;
                    return;
                }
                let Annotation = require('../complex_types/annotation.js');
                this.__data.valueAnnotation = new Annotation(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Attachment|undefined}
        */
        Object.defineProperty(this, 'valueAttachment', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueAttachment,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueAttachment = undefined;
                    return;
                }
                let Attachment = require('../complex_types/attachment.js');
                this.__data.valueAttachment = new Attachment(valueProvided);
            }
        });

        /**
         * @description None
         * @property {CodeableConcept|undefined}
        */
        Object.defineProperty(this, 'valueCodeableConcept', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueCodeableConcept,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueCodeableConcept = undefined;
                    return;
                }
                let CodeableConcept = require('../complex_types/codeableConcept.js');
                this.__data.valueCodeableConcept = new CodeableConcept(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Coding|undefined}
        */
        Object.defineProperty(this, 'valueCoding', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueCoding,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueCoding = undefined;
                    return;
                }
                let Coding = require('../complex_types/coding.js');
                this.__data.valueCoding = new Coding(valueProvided);
            }
        });

        /**
         * @description None
         * @property {ContactPoint|undefined}
        */
        Object.defineProperty(this, 'valueContactPoint', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueContactPoint,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueContactPoint = undefined;
                    return;
                }
                let ContactPoint = require('../complex_types/contactPoint.js');
                this.__data.valueContactPoint = new ContactPoint(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Quantity|undefined}
        */
        Object.defineProperty(this, 'valueCount', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueCount,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueCount = undefined;
                    return;
                }
                let Quantity = require('../complex_types/quantity.js');
                this.__data.valueCount = new Quantity(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Quantity|undefined}
        */
        Object.defineProperty(this, 'valueDistance', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueDistance,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueDistance = undefined;
                    return;
                }
                let Quantity = require('../complex_types/quantity.js');
                this.__data.valueDistance = new Quantity(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Quantity|undefined}
        */
        Object.defineProperty(this, 'valueDuration', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueDuration,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueDuration = undefined;
                    return;
                }
                let Quantity = require('../complex_types/quantity.js');
                this.__data.valueDuration = new Quantity(valueProvided);
            }
        });

        /**
         * @description None
         * @property {HumanName|undefined}
        */
        Object.defineProperty(this, 'valueHumanName', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueHumanName,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueHumanName = undefined;
                    return;
                }
                let HumanName = require('../complex_types/humanName.js');
                this.__data.valueHumanName = new HumanName(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Identifier|undefined}
        */
        Object.defineProperty(this, 'valueIdentifier', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueIdentifier,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueIdentifier = undefined;
                    return;
                }
                let Identifier = require('../complex_types/identifier.js');
                this.__data.valueIdentifier = new Identifier(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Money|undefined}
        */
        Object.defineProperty(this, 'valueMoney', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueMoney,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueMoney = undefined;
                    return;
                }
                let Money = require('../complex_types/money.js');
                this.__data.valueMoney = new Money(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Period|undefined}
        */
        Object.defineProperty(this, 'valuePeriod', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valuePeriod,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valuePeriod = undefined;
                    return;
                }
                let Period = require('../complex_types/period.js');
                this.__data.valuePeriod = new Period(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Quantity|undefined}
        */
        Object.defineProperty(this, 'valueQuantity', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueQuantity,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueQuantity = undefined;
                    return;
                }
                let Quantity = require('../complex_types/quantity.js');
                this.__data.valueQuantity = new Quantity(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Range|undefined}
        */
        Object.defineProperty(this, 'valueRange', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueRange,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueRange = undefined;
                    return;
                }
                let Range = require('../complex_types/range.js');
                this.__data.valueRange = new Range(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Ratio|undefined}
        */
        Object.defineProperty(this, 'valueRatio', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueRatio,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueRatio = undefined;
                    return;
                }
                let Ratio = require('../complex_types/ratio.js');
                this.__data.valueRatio = new Ratio(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Reference|undefined}
        */
        Object.defineProperty(this, 'valueReference', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueReference,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueReference = undefined;
                    return;
                }
                let Reference = require('../complex_types/reference.js');
                this.__data.valueReference = new Reference(valueProvided);
            }
        });

        /**
         * @description None
         * @property {SampledData|undefined}
        */
        Object.defineProperty(this, 'valueSampledData', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueSampledData,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueSampledData = undefined;
                    return;
                }
                let SampledData = require('../complex_types/sampledData.js');
                this.__data.valueSampledData = new SampledData(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Signature|undefined}
        */
        Object.defineProperty(this, 'valueSignature', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueSignature,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueSignature = undefined;
                    return;
                }
                let Signature = require('../complex_types/signature.js');
                this.__data.valueSignature = new Signature(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Timing|undefined}
        */
        Object.defineProperty(this, 'valueTiming', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueTiming,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueTiming = undefined;
                    return;
                }
                let Timing = require('../backbone_elements/timing.js');
                this.__data.valueTiming = new Timing(valueProvided);
            }
        });

        /**
         * @description None
         * @property {ContactDetail|undefined}
        */
        Object.defineProperty(this, 'valueContactDetail', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueContactDetail,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueContactDetail = undefined;
                    return;
                }
                let ContactDetail = require('../complex_types/contactDetail.js');
                this.__data.valueContactDetail = new ContactDetail(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Contributor|undefined}
        */
        Object.defineProperty(this, 'valueContributor', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueContributor,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueContributor = undefined;
                    return;
                }
                let Contributor = require('../complex_types/contributor.js');
                this.__data.valueContributor = new Contributor(valueProvided);
            }
        });

        /**
         * @description None
         * @property {DataRequirement|undefined}
        */
        Object.defineProperty(this, 'valueDataRequirement', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueDataRequirement,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueDataRequirement = undefined;
                    return;
                }
                let DataRequirement = require('../complex_types/dataRequirement.js');
                this.__data.valueDataRequirement = new DataRequirement(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Expression|undefined}
        */
        Object.defineProperty(this, 'valueExpression', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueExpression,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueExpression = undefined;
                    return;
                }
                let Expression = require('../complex_types/expression.js');
                this.__data.valueExpression = new Expression(valueProvided);
            }
        });

        /**
         * @description None
         * @property {ParameterDefinition|undefined}
        */
        Object.defineProperty(this, 'valueParameterDefinition', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueParameterDefinition,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueParameterDefinition = undefined;
                    return;
                }
                let ParameterDefinition = require('../complex_types/parameterDefinition.js');
                this.__data.valueParameterDefinition = new ParameterDefinition(valueProvided);
            }
        });

        /**
         * @description None
         * @property {RelatedArtifact|undefined}
        */
        Object.defineProperty(this, 'valueRelatedArtifact', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueRelatedArtifact,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueRelatedArtifact = undefined;
                    return;
                }
                let RelatedArtifact = require('../complex_types/relatedArtifact.js');
                this.__data.valueRelatedArtifact = new RelatedArtifact(valueProvided);
            }
        });

        /**
         * @description None
         * @property {TriggerDefinition|undefined}
        */
        Object.defineProperty(this, 'valueTriggerDefinition', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueTriggerDefinition,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueTriggerDefinition = undefined;
                    return;
                }
                let TriggerDefinition = require('../complex_types/triggerDefinition.js');
                this.__data.valueTriggerDefinition = new TriggerDefinition(valueProvided);
            }
        });

        /**
         * @description None
         * @property {UsageContext|undefined}
        */
        Object.defineProperty(this, 'valueUsageContext', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueUsageContext,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueUsageContext = undefined;
                    return;
                }
                let UsageContext = require('../complex_types/usageContext.js');
                this.__data.valueUsageContext = new UsageContext(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Dosage|undefined}
        */
        Object.defineProperty(this, 'valueDosage', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueDosage,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueDosage = undefined;
                    return;
                }
                let Dosage = require('../backbone_elements/dosage.js');
                this.__data.valueDosage = new Dosage(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Meta|undefined}
        */
        Object.defineProperty(this, 'valueMeta', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.valueMeta,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.valueMeta = undefined;
                    return;
                }
                let Meta = require('../complex_types/meta.js');
                this.__data.valueMeta = new Meta(valueProvided);
            }
        });



        // --- Now copy properties from passed in object ----
        Object.assign(this, {
            id,
            extension,
            url,
            valueBase64Binary,
            valueBoolean,
            valueCanonical,
            valueCode,
            valueDate,
            valueDateTime,
            valueDecimal,
            valueId,
            valueInstant,
            valueInteger,
            valueMarkdown,
            valueOid,
            valuePositiveInt,
            valueString,
            valueTime,
            valueUnsignedInt,
            valueUri,
            valueUrl,
            valueUuid,
            valueAddress,
            valueAge,
            valueAnnotation,
            valueAttachment,
            valueCodeableConcept,
            valueCoding,
            valueContactPoint,
            valueCount,
            valueDistance,
            valueDuration,
            valueHumanName,
            valueIdentifier,
            valueMoney,
            valuePeriod,
            valueQuantity,
            valueRange,
            valueRatio,
            valueReference,
            valueSampledData,
            valueSignature,
            valueTiming,
            valueContactDetail,
            valueContributor,
            valueDataRequirement,
            valueExpression,
            valueParameterDefinition,
            valueRelatedArtifact,
            valueTriggerDefinition,
            valueUsageContext,
            valueDosage,
            valueMeta,
        });

    }



    /**
     * Returns JSON representation of entity
     * @return {Object}
     */
    toJSON() {
        const {removeNull} = require('../../../../utils/nullRemover');

        return removeNull({
            id: this.id,
            extension: this.extension && this.extension.map(v => v.toJSON()),
            url: this.url,
            valueBase64Binary: this.valueBase64Binary,
            valueBoolean: this.valueBoolean,
            valueCanonical: this.valueCanonical,
            valueCode: this.valueCode,
            valueDate: this.valueDate,
            valueDateTime: this.valueDateTime,
            valueDecimal: this.valueDecimal,
            valueId: this.valueId,
            valueInstant: this.valueInstant,
            valueInteger: this.valueInteger,
            valueMarkdown: this.valueMarkdown,
            valueOid: this.valueOid,
            valuePositiveInt: this.valuePositiveInt,
            valueString: this.valueString,
            valueTime: this.valueTime,
            valueUnsignedInt: this.valueUnsignedInt,
            valueUri: this.valueUri,
            valueUrl: this.valueUrl,
            valueUuid: this.valueUuid,
            valueAddress: this.valueAddress && this.valueAddress.toJSON(),
            valueAge: this.valueAge && this.valueAge.toJSON(),
            valueAnnotation: this.valueAnnotation && this.valueAnnotation.toJSON(),
            valueAttachment: this.valueAttachment && this.valueAttachment.toJSON(),
            valueCodeableConcept: this.valueCodeableConcept && this.valueCodeableConcept.toJSON(),
            valueCoding: this.valueCoding && this.valueCoding.toJSON(),
            valueContactPoint: this.valueContactPoint && this.valueContactPoint.toJSON(),
            valueCount: this.valueCount && this.valueCount.toJSON(),
            valueDistance: this.valueDistance && this.valueDistance.toJSON(),
            valueDuration: this.valueDuration && this.valueDuration.toJSON(),
            valueHumanName: this.valueHumanName && this.valueHumanName.toJSON(),
            valueIdentifier: this.valueIdentifier && this.valueIdentifier.toJSON(),
            valueMoney: this.valueMoney && this.valueMoney.toJSON(),
            valuePeriod: this.valuePeriod && this.valuePeriod.toJSON(),
            valueQuantity: this.valueQuantity && this.valueQuantity.toJSON(),
            valueRange: this.valueRange && this.valueRange.toJSON(),
            valueRatio: this.valueRatio && this.valueRatio.toJSON(),
            valueReference: this.valueReference && this.valueReference.toJSON(),
            valueSampledData: this.valueSampledData && this.valueSampledData.toJSON(),
            valueSignature: this.valueSignature && this.valueSignature.toJSON(),
            valueTiming: this.valueTiming && this.valueTiming.toJSON(),
            valueContactDetail: this.valueContactDetail && this.valueContactDetail.toJSON(),
            valueContributor: this.valueContributor && this.valueContributor.toJSON(),
            valueDataRequirement: this.valueDataRequirement && this.valueDataRequirement.toJSON(),
            valueExpression: this.valueExpression && this.valueExpression.toJSON(),
            valueParameterDefinition: this.valueParameterDefinition && this.valueParameterDefinition.toJSON(),
            valueRelatedArtifact: this.valueRelatedArtifact && this.valueRelatedArtifact.toJSON(),
            valueTriggerDefinition: this.valueTriggerDefinition && this.valueTriggerDefinition.toJSON(),
            valueUsageContext: this.valueUsageContext && this.valueUsageContext.toJSON(),
            valueDosage: this.valueDosage && this.valueDosage.toJSON(),
            valueMeta: this.valueMeta && this.valueMeta.toJSON(),
        });
    }

    /**
     * Returns JSON representation of entity
     * @return {void}
     */
    updateReferences(fnUpdateReference) {
            if (this.extension) {this.extension.forEach(v => v.updateReferences(fnUpdateReference));}
            if (this.valueAddress) {this.valueAddress.updateReferences(fnUpdateReference);}
            if (this.valueAge) {this.valueAge.updateReferences(fnUpdateReference);}
            if (this.valueAnnotation) {this.valueAnnotation.updateReferences(fnUpdateReference);}
            if (this.valueAttachment) {this.valueAttachment.updateReferences(fnUpdateReference);}
            if (this.valueCodeableConcept) {this.valueCodeableConcept.updateReferences(fnUpdateReference);}
            if (this.valueCoding) {this.valueCoding.updateReferences(fnUpdateReference);}
            if (this.valueContactPoint) {this.valueContactPoint.updateReferences(fnUpdateReference);}
            if (this.valueCount) {this.valueCount.updateReferences(fnUpdateReference);}
            if (this.valueDistance) {this.valueDistance.updateReferences(fnUpdateReference);}
            if (this.valueDuration) {this.valueDuration.updateReferences(fnUpdateReference);}
            if (this.valueHumanName) {this.valueHumanName.updateReferences(fnUpdateReference);}
            if (this.valueIdentifier) {this.valueIdentifier.updateReferences(fnUpdateReference);}
            if (this.valueMoney) {this.valueMoney.updateReferences(fnUpdateReference);}
            if (this.valuePeriod) {this.valuePeriod.updateReferences(fnUpdateReference);}
            if (this.valueQuantity) {this.valueQuantity.updateReferences(fnUpdateReference);}
            if (this.valueRange) {this.valueRange.updateReferences(fnUpdateReference);}
            if (this.valueRatio) {this.valueRatio.updateReferences(fnUpdateReference);}
            if (this.valueReference) {this.valueReference.updateReferences(fnUpdateReference);}
            if (this.valueSampledData) {this.valueSampledData.updateReferences(fnUpdateReference);}
            if (this.valueSignature) {this.valueSignature.updateReferences(fnUpdateReference);}
            if (this.valueTiming) {this.valueTiming.updateReferences(fnUpdateReference);}
            if (this.valueContactDetail) {this.valueContactDetail.updateReferences(fnUpdateReference);}
            if (this.valueContributor) {this.valueContributor.updateReferences(fnUpdateReference);}
            if (this.valueDataRequirement) {this.valueDataRequirement.updateReferences(fnUpdateReference);}
            if (this.valueExpression) {this.valueExpression.updateReferences(fnUpdateReference);}
            if (this.valueParameterDefinition) {this.valueParameterDefinition.updateReferences(fnUpdateReference);}
            if (this.valueRelatedArtifact) {this.valueRelatedArtifact.updateReferences(fnUpdateReference);}
            if (this.valueTriggerDefinition) {this.valueTriggerDefinition.updateReferences(fnUpdateReference);}
            if (this.valueUsageContext) {this.valueUsageContext.updateReferences(fnUpdateReference);}
            if (this.valueDosage) {this.valueDosage.updateReferences(fnUpdateReference);}
            if (this.valueMeta) {this.valueMeta.updateReferences(fnUpdateReference);}
    }

    /**
     * Returns JSON representation of entity
     * @return {Object}
     */
    toJSONInternal() {
        const {removeNull} = require('../../../../utils/nullRemover');
        const json = this.toJSON();


        return removeNull(json);
    }
}

module.exports = Extension;
