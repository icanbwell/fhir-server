/* eslint-disable no-unused-vars */
// This file is auto-generated by generate_classes so do not edit manually

const {removeNull} = require('../../../../utils/nullRemover');
const Element = require('../complex_types/element');


/**
StructureMap.Source
    A Map of relationships between 2 structures that can be used to transform
    data.
*/
class StructureMapSource extends Element {
    /**
     * @param {String|undefined} [id],
     * @param {Extension[]|undefined} [extension],
     * @param {Extension[]|undefined} [modifierExtension],
     * @param {id} context,
     * @param {Int|undefined} [min],
     * @param {String|undefined} [max],
     * @param {String|undefined} [type],
     * @param {base64Binary|undefined} [defaultValueBase64Binary],
     * @param {Boolean|undefined} [defaultValueBoolean],
     * @param {canonical|undefined} [defaultValueCanonical],
     * @param {code|undefined} [defaultValueCode],
     * @param {date|undefined} [defaultValueDate],
     * @param {dateTime|undefined} [defaultValueDateTime],
     * @param {decimal|undefined} [defaultValueDecimal],
     * @param {id|undefined} [defaultValueId],
     * @param {instant|undefined} [defaultValueInstant],
     * @param {Int|undefined} [defaultValueInteger],
     * @param {markdown|undefined} [defaultValueMarkdown],
     * @param {oid|undefined} [defaultValueOid],
     * @param {Int|undefined} [defaultValuePositiveInt],
     * @param {String|undefined} [defaultValueString],
     * @param {time|undefined} [defaultValueTime],
     * @param {unsignedInt|undefined} [defaultValueUnsignedInt],
     * @param {uri|undefined} [defaultValueUri],
     * @param {url|undefined} [defaultValueUrl],
     * @param {uuid|undefined} [defaultValueUuid],
     * @param {Address|undefined} [defaultValueAddress],
     * @param {Quantity|undefined} [defaultValueAge],
     * @param {Annotation|undefined} [defaultValueAnnotation],
     * @param {Attachment|undefined} [defaultValueAttachment],
     * @param {CodeableConcept|undefined} [defaultValueCodeableConcept],
     * @param {Coding|undefined} [defaultValueCoding],
     * @param {ContactPoint|undefined} [defaultValueContactPoint],
     * @param {Quantity|undefined} [defaultValueCount],
     * @param {Quantity|undefined} [defaultValueDistance],
     * @param {Quantity|undefined} [defaultValueDuration],
     * @param {HumanName|undefined} [defaultValueHumanName],
     * @param {Identifier|undefined} [defaultValueIdentifier],
     * @param {Money|undefined} [defaultValueMoney],
     * @param {Period|undefined} [defaultValuePeriod],
     * @param {Quantity|undefined} [defaultValueQuantity],
     * @param {Range|undefined} [defaultValueRange],
     * @param {Ratio|undefined} [defaultValueRatio],
     * @param {Reference|undefined} [defaultValueReference],
     * @param {SampledData|undefined} [defaultValueSampledData],
     * @param {Signature|undefined} [defaultValueSignature],
     * @param {Timing|undefined} [defaultValueTiming],
     * @param {ContactDetail|undefined} [defaultValueContactDetail],
     * @param {Contributor|undefined} [defaultValueContributor],
     * @param {DataRequirement|undefined} [defaultValueDataRequirement],
     * @param {Expression|undefined} [defaultValueExpression],
     * @param {ParameterDefinition|undefined} [defaultValueParameterDefinition],
     * @param {RelatedArtifact|undefined} [defaultValueRelatedArtifact],
     * @param {TriggerDefinition|undefined} [defaultValueTriggerDefinition],
     * @param {UsageContext|undefined} [defaultValueUsageContext],
     * @param {Dosage|undefined} [defaultValueDosage],
     * @param {Meta|undefined} [defaultValueMeta],
     * @param {String|undefined} [element],
     * @param {code|undefined} [listMode],
     * @param {id|undefined} [variable],
     * @param {String|undefined} [condition],
     * @param {String|undefined} [check],
     * @param {String|undefined} [logMessage],
    */
    constructor(
        {
            id,
            extension,
            modifierExtension,
            context,
            min,
            max,
            type,
            defaultValueBase64Binary,
            defaultValueBoolean,
            defaultValueCanonical,
            defaultValueCode,
            defaultValueDate,
            defaultValueDateTime,
            defaultValueDecimal,
            defaultValueId,
            defaultValueInstant,
            defaultValueInteger,
            defaultValueMarkdown,
            defaultValueOid,
            defaultValuePositiveInt,
            defaultValueString,
            defaultValueTime,
            defaultValueUnsignedInt,
            defaultValueUri,
            defaultValueUrl,
            defaultValueUuid,
            defaultValueAddress,
            defaultValueAge,
            defaultValueAnnotation,
            defaultValueAttachment,
            defaultValueCodeableConcept,
            defaultValueCoding,
            defaultValueContactPoint,
            defaultValueCount,
            defaultValueDistance,
            defaultValueDuration,
            defaultValueHumanName,
            defaultValueIdentifier,
            defaultValueMoney,
            defaultValuePeriod,
            defaultValueQuantity,
            defaultValueRange,
            defaultValueRatio,
            defaultValueReference,
            defaultValueSampledData,
            defaultValueSignature,
            defaultValueTiming,
            defaultValueContactDetail,
            defaultValueContributor,
            defaultValueDataRequirement,
            defaultValueExpression,
            defaultValueParameterDefinition,
            defaultValueRelatedArtifact,
            defaultValueTriggerDefinition,
            defaultValueUsageContext,
            defaultValueDosage,
            defaultValueMeta,
            element,
            listMode,
            variable,
            condition,
            check,
            logMessage,
        }
    ) {
        super({});

        // ---- Define getters and setters as enumerable ---

        /**
         * @description None
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'id', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.id,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.id = valueProvided;
            }
        });

        /**
         * @description May be used to represent additional information that is not part of the basic
    definition of the element. To make the use of extensions safe and manageable,
    there is a strict set of governance  applied to the definition and use of
    extensions. Though any implementer can define an extension, there is a set of
    requirements that SHALL be met as part of the definition of the extension.
         * @property {Extension[]|undefined}
        */
        Object.defineProperty(this, 'extension', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.extension,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Extension = require('../extensions/extension.js');
                this.__data.extension = Array.isArray(valueProvided) ? valueProvided.map(v => new Extension(v)) : [new Extension(valueProvided)];
            }
        });

        /**
         * @description May be used to represent additional information that is not part of the basic
    definition of the element and that modifies the understanding of the element
    in which it is contained and/or the understanding of the containing element's
    descendants. Usually modifier elements provide negation or qualification. To
    make the use of extensions safe and manageable, there is a strict set of
    governance applied to the definition and use of extensions. Though any
    implementer can define an extension, there is a set of requirements that SHALL
    be met as part of the definition of the extension. Applications processing a
    resource are required to check for modifier extensions.

    Modifier extensions SHALL NOT change the meaning of any elements on Resource
    or DomainResource (including cannot change the meaning of modifierExtension
    itself).
         * @property {Extension[]|undefined}
        */
        Object.defineProperty(this, 'modifierExtension', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.modifierExtension,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Extension = require('../extensions/extension.js');
                this.__data.modifierExtension = Array.isArray(valueProvided) ? valueProvided.map(v => new Extension(v)) : [new Extension(valueProvided)];
            }
        });

        /**
         * @description Type or variable this rule applies to.
         * @property {id}
        */
        Object.defineProperty(this, 'context', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.context,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.context = valueProvided;
            }
        });

        /**
         * @description Specified minimum cardinality for the element. This is optional; if present,
    it acts an implicit check on the input content.
         * @property {Int|undefined}
        */
        Object.defineProperty(this, 'min', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.min,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.min = valueProvided;
            }
        });

        /**
         * @description Specified maximum cardinality for the element - a number or a "*". This is
    optional; if present, it acts an implicit check on the input content (* just
    serves as documentation; it's the default value).
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'max', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.max,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.max = valueProvided;
            }
        });

        /**
         * @description Specified type for the element. This works as a condition on the mapping - use
    for polymorphic elements.
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'type', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.type,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.type = valueProvided;
            }
        });

        /**
         * @description None
         * @property {base64Binary|undefined}
        */
        Object.defineProperty(this, 'defaultValueBase64Binary', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueBase64Binary,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.defaultValueBase64Binary = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Boolean|undefined}
        */
        Object.defineProperty(this, 'defaultValueBoolean', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueBoolean,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.defaultValueBoolean = valueProvided;
            }
        });

        /**
         * @description None
         * @property {canonical|undefined}
        */
        Object.defineProperty(this, 'defaultValueCanonical', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueCanonical,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.defaultValueCanonical = valueProvided;
            }
        });

        /**
         * @description None
         * @property {code|undefined}
        */
        Object.defineProperty(this, 'defaultValueCode', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueCode,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.defaultValueCode = valueProvided;
            }
        });

        /**
         * @description None
         * @property {date|undefined}
        */
        Object.defineProperty(this, 'defaultValueDate', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueDate,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.defaultValueDate = valueProvided;
            }
        });

        /**
         * @description None
         * @property {dateTime|undefined}
        */
        Object.defineProperty(this, 'defaultValueDateTime', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueDateTime,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.defaultValueDateTime = valueProvided;
            }
        });

        /**
         * @description None
         * @property {decimal|undefined}
        */
        Object.defineProperty(this, 'defaultValueDecimal', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueDecimal,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.defaultValueDecimal = valueProvided;
            }
        });

        /**
         * @description None
         * @property {id|undefined}
        */
        Object.defineProperty(this, 'defaultValueId', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueId,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.defaultValueId = valueProvided;
            }
        });

        /**
         * @description None
         * @property {instant|undefined}
        */
        Object.defineProperty(this, 'defaultValueInstant', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueInstant,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.defaultValueInstant = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Int|undefined}
        */
        Object.defineProperty(this, 'defaultValueInteger', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueInteger,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.defaultValueInteger = valueProvided;
            }
        });

        /**
         * @description None
         * @property {markdown|undefined}
        */
        Object.defineProperty(this, 'defaultValueMarkdown', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueMarkdown,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.defaultValueMarkdown = valueProvided;
            }
        });

        /**
         * @description None
         * @property {oid|undefined}
        */
        Object.defineProperty(this, 'defaultValueOid', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueOid,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.defaultValueOid = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Int|undefined}
        */
        Object.defineProperty(this, 'defaultValuePositiveInt', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValuePositiveInt,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.defaultValuePositiveInt = valueProvided;
            }
        });

        /**
         * @description None
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'defaultValueString', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueString,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.defaultValueString = valueProvided;
            }
        });

        /**
         * @description None
         * @property {time|undefined}
        */
        Object.defineProperty(this, 'defaultValueTime', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueTime,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.defaultValueTime = valueProvided;
            }
        });

        /**
         * @description None
         * @property {unsignedInt|undefined}
        */
        Object.defineProperty(this, 'defaultValueUnsignedInt', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueUnsignedInt,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.defaultValueUnsignedInt = valueProvided;
            }
        });

        /**
         * @description None
         * @property {uri|undefined}
        */
        Object.defineProperty(this, 'defaultValueUri', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueUri,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.defaultValueUri = valueProvided;
            }
        });

        /**
         * @description None
         * @property {url|undefined}
        */
        Object.defineProperty(this, 'defaultValueUrl', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueUrl,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.defaultValueUrl = valueProvided;
            }
        });

        /**
         * @description None
         * @property {uuid|undefined}
        */
        Object.defineProperty(this, 'defaultValueUuid', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueUuid,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.defaultValueUuid = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Address|undefined}
        */
        Object.defineProperty(this, 'defaultValueAddress', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueAddress,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Address = require('../complex_types/address.js');
                this.__data.defaultValueAddress = new Address(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Quantity|undefined}
        */
        Object.defineProperty(this, 'defaultValueAge', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueAge,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Quantity = require('../complex_types/quantity.js');
                this.__data.defaultValueAge = new Quantity(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Annotation|undefined}
        */
        Object.defineProperty(this, 'defaultValueAnnotation', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueAnnotation,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Annotation = require('../complex_types/annotation.js');
                this.__data.defaultValueAnnotation = new Annotation(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Attachment|undefined}
        */
        Object.defineProperty(this, 'defaultValueAttachment', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueAttachment,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Attachment = require('../complex_types/attachment.js');
                this.__data.defaultValueAttachment = new Attachment(valueProvided);
            }
        });

        /**
         * @description None
         * @property {CodeableConcept|undefined}
        */
        Object.defineProperty(this, 'defaultValueCodeableConcept', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueCodeableConcept,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let CodeableConcept = require('../complex_types/codeableConcept.js');
                this.__data.defaultValueCodeableConcept = new CodeableConcept(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Coding|undefined}
        */
        Object.defineProperty(this, 'defaultValueCoding', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueCoding,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Coding = require('../complex_types/coding.js');
                this.__data.defaultValueCoding = new Coding(valueProvided);
            }
        });

        /**
         * @description None
         * @property {ContactPoint|undefined}
        */
        Object.defineProperty(this, 'defaultValueContactPoint', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueContactPoint,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let ContactPoint = require('../complex_types/contactPoint.js');
                this.__data.defaultValueContactPoint = new ContactPoint(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Quantity|undefined}
        */
        Object.defineProperty(this, 'defaultValueCount', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueCount,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Quantity = require('../complex_types/quantity.js');
                this.__data.defaultValueCount = new Quantity(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Quantity|undefined}
        */
        Object.defineProperty(this, 'defaultValueDistance', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueDistance,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Quantity = require('../complex_types/quantity.js');
                this.__data.defaultValueDistance = new Quantity(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Quantity|undefined}
        */
        Object.defineProperty(this, 'defaultValueDuration', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueDuration,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Quantity = require('../complex_types/quantity.js');
                this.__data.defaultValueDuration = new Quantity(valueProvided);
            }
        });

        /**
         * @description None
         * @property {HumanName|undefined}
        */
        Object.defineProperty(this, 'defaultValueHumanName', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueHumanName,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let HumanName = require('../complex_types/humanName.js');
                this.__data.defaultValueHumanName = new HumanName(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Identifier|undefined}
        */
        Object.defineProperty(this, 'defaultValueIdentifier', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueIdentifier,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Identifier = require('../complex_types/identifier.js');
                this.__data.defaultValueIdentifier = new Identifier(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Money|undefined}
        */
        Object.defineProperty(this, 'defaultValueMoney', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueMoney,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Money = require('../complex_types/money.js');
                this.__data.defaultValueMoney = new Money(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Period|undefined}
        */
        Object.defineProperty(this, 'defaultValuePeriod', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValuePeriod,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Period = require('../complex_types/period.js');
                this.__data.defaultValuePeriod = new Period(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Quantity|undefined}
        */
        Object.defineProperty(this, 'defaultValueQuantity', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueQuantity,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Quantity = require('../complex_types/quantity.js');
                this.__data.defaultValueQuantity = new Quantity(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Range|undefined}
        */
        Object.defineProperty(this, 'defaultValueRange', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueRange,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Range = require('../complex_types/range.js');
                this.__data.defaultValueRange = new Range(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Ratio|undefined}
        */
        Object.defineProperty(this, 'defaultValueRatio', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueRatio,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Ratio = require('../complex_types/ratio.js');
                this.__data.defaultValueRatio = new Ratio(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Reference|undefined}
        */
        Object.defineProperty(this, 'defaultValueReference', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueReference,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Reference = require('../complex_types/reference.js');
                this.__data.defaultValueReference = new Reference(valueProvided);
            }
        });

        /**
         * @description None
         * @property {SampledData|undefined}
        */
        Object.defineProperty(this, 'defaultValueSampledData', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueSampledData,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let SampledData = require('../complex_types/sampledData.js');
                this.__data.defaultValueSampledData = new SampledData(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Signature|undefined}
        */
        Object.defineProperty(this, 'defaultValueSignature', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueSignature,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Signature = require('../complex_types/signature.js');
                this.__data.defaultValueSignature = new Signature(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Timing|undefined}
        */
        Object.defineProperty(this, 'defaultValueTiming', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueTiming,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Timing = require('../backbone_elements/timing.js');
                this.__data.defaultValueTiming = new Timing(valueProvided);
            }
        });

        /**
         * @description None
         * @property {ContactDetail|undefined}
        */
        Object.defineProperty(this, 'defaultValueContactDetail', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueContactDetail,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let ContactDetail = require('../complex_types/contactDetail.js');
                this.__data.defaultValueContactDetail = new ContactDetail(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Contributor|undefined}
        */
        Object.defineProperty(this, 'defaultValueContributor', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueContributor,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Contributor = require('../complex_types/contributor.js');
                this.__data.defaultValueContributor = new Contributor(valueProvided);
            }
        });

        /**
         * @description None
         * @property {DataRequirement|undefined}
        */
        Object.defineProperty(this, 'defaultValueDataRequirement', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueDataRequirement,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let DataRequirement = require('../complex_types/dataRequirement.js');
                this.__data.defaultValueDataRequirement = new DataRequirement(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Expression|undefined}
        */
        Object.defineProperty(this, 'defaultValueExpression', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueExpression,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Expression = require('../complex_types/expression.js');
                this.__data.defaultValueExpression = new Expression(valueProvided);
            }
        });

        /**
         * @description None
         * @property {ParameterDefinition|undefined}
        */
        Object.defineProperty(this, 'defaultValueParameterDefinition', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueParameterDefinition,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let ParameterDefinition = require('../complex_types/parameterDefinition.js');
                this.__data.defaultValueParameterDefinition = new ParameterDefinition(valueProvided);
            }
        });

        /**
         * @description None
         * @property {RelatedArtifact|undefined}
        */
        Object.defineProperty(this, 'defaultValueRelatedArtifact', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueRelatedArtifact,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let RelatedArtifact = require('../complex_types/relatedArtifact.js');
                this.__data.defaultValueRelatedArtifact = new RelatedArtifact(valueProvided);
            }
        });

        /**
         * @description None
         * @property {TriggerDefinition|undefined}
        */
        Object.defineProperty(this, 'defaultValueTriggerDefinition', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueTriggerDefinition,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let TriggerDefinition = require('../complex_types/triggerDefinition.js');
                this.__data.defaultValueTriggerDefinition = new TriggerDefinition(valueProvided);
            }
        });

        /**
         * @description None
         * @property {UsageContext|undefined}
        */
        Object.defineProperty(this, 'defaultValueUsageContext', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueUsageContext,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let UsageContext = require('../complex_types/usageContext.js');
                this.__data.defaultValueUsageContext = new UsageContext(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Dosage|undefined}
        */
        Object.defineProperty(this, 'defaultValueDosage', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueDosage,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Dosage = require('../backbone_elements/dosage.js');
                this.__data.defaultValueDosage = new Dosage(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Meta|undefined}
        */
        Object.defineProperty(this, 'defaultValueMeta', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueMeta,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                let Meta = require('../complex_types/meta.js');
                this.__data.defaultValueMeta = new Meta(valueProvided);
            }
        });

        /**
         * @description Optional field for this source.
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'element', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.element,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.element = valueProvided;
            }
        });

        /**
         * @description How to handle the list mode for this element.
         * @property {code|undefined}
        */
        Object.defineProperty(this, 'listMode', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.listMode,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.listMode = valueProvided;
            }
        });

        /**
         * @description Named context for field, if a field is specified.
         * @property {id|undefined}
        */
        Object.defineProperty(this, 'variable', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.variable,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.variable = valueProvided;
            }
        });

        /**
         * @description FHIRPath expression  - must be true or the rule does not apply.
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'condition', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.condition,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.condition = valueProvided;
            }
        });

        /**
         * @description FHIRPath expression  - must be true or the mapping engine throws an error
    instead of completing.
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'check', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.check,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.check = valueProvided;
            }
        });

        /**
         * @description A FHIRPath expression which specifies a message to put in the transform log
    when content matching the source rule is found.
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'logMessage', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.logMessage,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null) {
                    return;
                }
                this.__data.logMessage = valueProvided;
            }
        });

        // --- Now copy properties from passed in object ----
        Object.assign(this, {
            id,
            extension,
            modifierExtension,
            context,
            min,
            max,
            type,
            defaultValueBase64Binary,
            defaultValueBoolean,
            defaultValueCanonical,
            defaultValueCode,
            defaultValueDate,
            defaultValueDateTime,
            defaultValueDecimal,
            defaultValueId,
            defaultValueInstant,
            defaultValueInteger,
            defaultValueMarkdown,
            defaultValueOid,
            defaultValuePositiveInt,
            defaultValueString,
            defaultValueTime,
            defaultValueUnsignedInt,
            defaultValueUri,
            defaultValueUrl,
            defaultValueUuid,
            defaultValueAddress,
            defaultValueAge,
            defaultValueAnnotation,
            defaultValueAttachment,
            defaultValueCodeableConcept,
            defaultValueCoding,
            defaultValueContactPoint,
            defaultValueCount,
            defaultValueDistance,
            defaultValueDuration,
            defaultValueHumanName,
            defaultValueIdentifier,
            defaultValueMoney,
            defaultValuePeriod,
            defaultValueQuantity,
            defaultValueRange,
            defaultValueRatio,
            defaultValueReference,
            defaultValueSampledData,
            defaultValueSignature,
            defaultValueTiming,
            defaultValueContactDetail,
            defaultValueContributor,
            defaultValueDataRequirement,
            defaultValueExpression,
            defaultValueParameterDefinition,
            defaultValueRelatedArtifact,
            defaultValueTriggerDefinition,
            defaultValueUsageContext,
            defaultValueDosage,
            defaultValueMeta,
            element,
            listMode,
            variable,
            condition,
            check,
            logMessage,
        });

    }


    /**
     * Returns JSON representation of entity
     * @return {Object}
     */
    toJSON() {
        return removeNull({
            id: this.id,
            extension: this.extension && this.extension.map(v => v.toJSON()),
            modifierExtension: this.modifierExtension && this.modifierExtension.map(v => v.toJSON()),
            context: this.context,
            min: this.min,
            max: this.max,
            type: this.type,
            defaultValueBase64Binary: this.defaultValueBase64Binary,
            defaultValueBoolean: this.defaultValueBoolean,
            defaultValueCanonical: this.defaultValueCanonical,
            defaultValueCode: this.defaultValueCode,
            defaultValueDate: this.defaultValueDate,
            defaultValueDateTime: this.defaultValueDateTime,
            defaultValueDecimal: this.defaultValueDecimal,
            defaultValueId: this.defaultValueId,
            defaultValueInstant: this.defaultValueInstant,
            defaultValueInteger: this.defaultValueInteger,
            defaultValueMarkdown: this.defaultValueMarkdown,
            defaultValueOid: this.defaultValueOid,
            defaultValuePositiveInt: this.defaultValuePositiveInt,
            defaultValueString: this.defaultValueString,
            defaultValueTime: this.defaultValueTime,
            defaultValueUnsignedInt: this.defaultValueUnsignedInt,
            defaultValueUri: this.defaultValueUri,
            defaultValueUrl: this.defaultValueUrl,
            defaultValueUuid: this.defaultValueUuid,
            defaultValueAddress: this.defaultValueAddress && this.defaultValueAddress.toJSON(),
            defaultValueAge: this.defaultValueAge && this.defaultValueAge.toJSON(),
            defaultValueAnnotation: this.defaultValueAnnotation && this.defaultValueAnnotation.toJSON(),
            defaultValueAttachment: this.defaultValueAttachment && this.defaultValueAttachment.toJSON(),
            defaultValueCodeableConcept: this.defaultValueCodeableConcept && this.defaultValueCodeableConcept.toJSON(),
            defaultValueCoding: this.defaultValueCoding && this.defaultValueCoding.toJSON(),
            defaultValueContactPoint: this.defaultValueContactPoint && this.defaultValueContactPoint.toJSON(),
            defaultValueCount: this.defaultValueCount && this.defaultValueCount.toJSON(),
            defaultValueDistance: this.defaultValueDistance && this.defaultValueDistance.toJSON(),
            defaultValueDuration: this.defaultValueDuration && this.defaultValueDuration.toJSON(),
            defaultValueHumanName: this.defaultValueHumanName && this.defaultValueHumanName.toJSON(),
            defaultValueIdentifier: this.defaultValueIdentifier && this.defaultValueIdentifier.toJSON(),
            defaultValueMoney: this.defaultValueMoney && this.defaultValueMoney.toJSON(),
            defaultValuePeriod: this.defaultValuePeriod && this.defaultValuePeriod.toJSON(),
            defaultValueQuantity: this.defaultValueQuantity && this.defaultValueQuantity.toJSON(),
            defaultValueRange: this.defaultValueRange && this.defaultValueRange.toJSON(),
            defaultValueRatio: this.defaultValueRatio && this.defaultValueRatio.toJSON(),
            defaultValueReference: this.defaultValueReference && this.defaultValueReference.toJSON(),
            defaultValueSampledData: this.defaultValueSampledData && this.defaultValueSampledData.toJSON(),
            defaultValueSignature: this.defaultValueSignature && this.defaultValueSignature.toJSON(),
            defaultValueTiming: this.defaultValueTiming && this.defaultValueTiming.toJSON(),
            defaultValueContactDetail: this.defaultValueContactDetail && this.defaultValueContactDetail.toJSON(),
            defaultValueContributor: this.defaultValueContributor && this.defaultValueContributor.toJSON(),
            defaultValueDataRequirement: this.defaultValueDataRequirement && this.defaultValueDataRequirement.toJSON(),
            defaultValueExpression: this.defaultValueExpression && this.defaultValueExpression.toJSON(),
            defaultValueParameterDefinition: this.defaultValueParameterDefinition && this.defaultValueParameterDefinition.toJSON(),
            defaultValueRelatedArtifact: this.defaultValueRelatedArtifact && this.defaultValueRelatedArtifact.toJSON(),
            defaultValueTriggerDefinition: this.defaultValueTriggerDefinition && this.defaultValueTriggerDefinition.toJSON(),
            defaultValueUsageContext: this.defaultValueUsageContext && this.defaultValueUsageContext.toJSON(),
            defaultValueDosage: this.defaultValueDosage && this.defaultValueDosage.toJSON(),
            defaultValueMeta: this.defaultValueMeta && this.defaultValueMeta.toJSON(),
            element: this.element,
            listMode: this.listMode,
            variable: this.variable,
            condition: this.condition,
            check: this.check,
            logMessage: this.logMessage,
        });
    }
}

module.exports = StructureMapSource;
