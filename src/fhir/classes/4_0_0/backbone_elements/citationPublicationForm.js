

// This file is auto-generated by generate_classes so do not edit manually

const { removeNull } = require('../../../../utils/nullRemover');

const Element = require('../complex_types/element');
const Resource = require('../resources/resource');
const async = require('async');

/**
Citation.PublicationForm
    The Citation Resource enables reference to any knowledge artifact for purposes
    of identification and attribution. The Citation Resource supports existing
    reference structures and developing publication practices such as versioning,
    expressing complex contributorship roles, and referencing computable
    resources.
*/
class CitationPublicationForm extends Element {
    /**
     * @param {String|undefined} [id],
     * @param {Extension[]|undefined} [extension],
     * @param {Extension[]|undefined} [modifierExtension],
     * @param {CitationPublishedIn|undefined} [publishedIn],
     * @param {CitationPeriodicRelease|undefined} [periodicRelease],
     * @param {dateTime|undefined} [articleDate],
     * @param {dateTime|undefined} [lastRevisionDate],
     * @param {CodeableConcept[]|undefined} [language],
     * @param {String|undefined} [accessionNumber],
     * @param {String|undefined} [pageString],
     * @param {String|undefined} [firstPage],
     * @param {String|undefined} [lastPage],
     * @param {String|undefined} [pageCount],
     * @param {markdown|undefined} [copyright],
    */
    constructor (
        {
            id,
            extension,
            modifierExtension,
            publishedIn,
            periodicRelease,
            articleDate,
            lastRevisionDate,
            language,
            accessionNumber,
            pageString,
            firstPage,
            lastPage,
            pageCount,
            copyright
        }
    ) {
        super({});

        // ---- Define getters and setters as enumerable ---

        /**
         * @description None
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'id', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.id,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.id = undefined;
                    return;
                }
                this.__data.id = valueProvided;
            }
        });

        /**
         * @description May be used to represent additional information that is not part of the basic
    definition of the element. To make the use of extensions safe and manageable,
    there is a strict set of governance  applied to the definition and use of
    extensions. Though any implementer can define an extension, there is a set of
    requirements that SHALL be met as part of the definition of the extension.
         * @property {Extension[]|undefined}
        */
        Object.defineProperty(this, 'extension', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.extension,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.extension = undefined;
                    return;
                }
                const Extension = require('../complex_types/extension.js');
                const { FhirResourceCreator } = require('../../../fhirResourceCreator');
                this.__data.extension = FhirResourceCreator.createArray(valueProvided, Extension);
            }
        });

        /**
         * @description May be used to represent additional information that is not part of the basic
    definition of the element and that modifies the understanding of the element
    in which it is contained and/or the understanding of the containing element's
    descendants. Usually modifier elements provide negation or qualification. To
    make the use of extensions safe and manageable, there is a strict set of
    governance applied to the definition and use of extensions. Though any
    implementer can define an extension, there is a set of requirements that SHALL
    be met as part of the definition of the extension. Applications processing a
    resource are required to check for modifier extensions.

    Modifier extensions SHALL NOT change the meaning of any elements on Resource
    or DomainResource (including cannot change the meaning of modifierExtension
    itself).
         * @property {Extension[]|undefined}
        */
        Object.defineProperty(this, 'modifierExtension', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.modifierExtension,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.modifierExtension = undefined;
                    return;
                }
                const Extension = require('../complex_types/extension.js');
                const { FhirResourceCreator } = require('../../../fhirResourceCreator');
                this.__data.modifierExtension = FhirResourceCreator.createArray(valueProvided, Extension);
            }
        });

        /**
         * @description The collection the cited article or artifact is published in.
         * @property {CitationPublishedIn|undefined}
        */
        Object.defineProperty(this, 'publishedIn', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.publishedIn,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.publishedIn = undefined;
                    return;
                }
                const CitationPublishedIn = require('../backbone_elements/citationPublishedIn.js');
                const { FhirResourceCreator } = require('../../../fhirResourceCreator');
                this.__data.publishedIn = FhirResourceCreator.create(valueProvided, CitationPublishedIn);
            }
        });

        /**
         * @description The specific issue in which the cited article resides.
         * @property {CitationPeriodicRelease|undefined}
        */
        Object.defineProperty(this, 'periodicRelease', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.periodicRelease,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.periodicRelease = undefined;
                    return;
                }
                const CitationPeriodicRelease = require('../backbone_elements/citationPeriodicRelease.js');
                const { FhirResourceCreator } = require('../../../fhirResourceCreator');
                this.__data.periodicRelease = FhirResourceCreator.create(valueProvided, CitationPeriodicRelease);
            }
        });

        /**
         * @description The date the article was added to the database, or the date the article was
    released (which may differ from the journal issue publication date).
         * @property {dateTime|undefined}
        */
        Object.defineProperty(this, 'articleDate', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.articleDate,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.articleDate = undefined;
                    return;
                }
                this.__data.articleDate = valueProvided;
            }
        });

        /**
         * @description The date the article was last revised or updated in the database.
         * @property {dateTime|undefined}
        */
        Object.defineProperty(this, 'lastRevisionDate', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.lastRevisionDate,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.lastRevisionDate = undefined;
                    return;
                }
                this.__data.lastRevisionDate = valueProvided;
            }
        });

        /**
         * @description Language in which this form of the article is published.
         * @property {CodeableConcept[]|undefined}
        */
        Object.defineProperty(this, 'language', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.language,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.language = undefined;
                    return;
                }
                const CodeableConcept = require('../complex_types/codeableConcept.js');
                const { FhirResourceCreator } = require('../../../fhirResourceCreator');
                this.__data.language = FhirResourceCreator.createArray(valueProvided, CodeableConcept);
            }
        });

        /**
         * @description Entry number or identifier for inclusion in a database.
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'accessionNumber', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.accessionNumber,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.accessionNumber = undefined;
                    return;
                }
                this.__data.accessionNumber = valueProvided;
            }
        });

        /**
         * @description Used for full display of pagination.
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'pageString', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.pageString,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.pageString = undefined;
                    return;
                }
                this.__data.pageString = valueProvided;
            }
        });

        /**
         * @description Used for isolated representation of first page.
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'firstPage', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.firstPage,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.firstPage = undefined;
                    return;
                }
                this.__data.firstPage = valueProvided;
            }
        });

        /**
         * @description Used for isolated representation of last page.
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'lastPage', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.lastPage,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.lastPage = undefined;
                    return;
                }
                this.__data.lastPage = valueProvided;
            }
        });

        /**
         * @description Actual or approximate number of pages or screens.
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'pageCount', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.pageCount,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.pageCount = undefined;
                    return;
                }
                this.__data.pageCount = valueProvided;
            }
        });

        /**
         * @description Copyright notice for the full article or artifact.
         * @property {markdown|undefined}
        */
        Object.defineProperty(this, 'copyright', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.copyright,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    this.__data.copyright = undefined;
                    return;
                }
                this.__data.copyright = valueProvided;
            }
        });


        // --- Now copy properties from passed in object ----
        Object.assign(this, {
            id,
            extension,
            modifierExtension,
            publishedIn,
            periodicRelease,
            articleDate,
            lastRevisionDate,
            language,
            accessionNumber,
            pageString,
            firstPage,
            lastPage,
            pageCount,
            copyright
        });
    }

    /**
     * Returns JSON representation of entity
     * @return {Object}
     */
    toJSON () {
        return removeNull({
            id: this.id,
            extension: this.extension && this.extension.map(v => v.toJSON()),
            modifierExtension: this.modifierExtension && this.modifierExtension.map(v => v.toJSON()),
            publishedIn: this.publishedIn && this.publishedIn.toJSON(),
            periodicRelease: this.periodicRelease && this.periodicRelease.toJSON(),
            articleDate: this.articleDate,
            lastRevisionDate: this.lastRevisionDate,
            language: this.language && this.language.map(v => v.toJSON()),
            accessionNumber: this.accessionNumber,
            pageString: this.pageString,
            firstPage: this.firstPage,
            lastPage: this.lastPage,
            pageCount: this.pageCount,
            copyright: this.copyright
        });
    }

    /**
     * Returns JSON representation of entity
     * @param {function(Reference): Promise<Reference>} fnUpdateReferenceAsync
     * @return {void}
     */
    async updateReferencesAsync ({ fnUpdateReferenceAsync }) {
            if (this.extension) { await async.each(this.extension, async v => await v.updateReferencesAsync({ fnUpdateReferenceAsync })); }
            if (this.modifierExtension) { await async.each(this.modifierExtension, async v => await v.updateReferencesAsync({ fnUpdateReferenceAsync })); }
            if (this.publishedIn) { await this.publishedIn.updateReferencesAsync({ fnUpdateReferenceAsync }); }
            if (this.periodicRelease) { await this.periodicRelease.updateReferencesAsync({ fnUpdateReferenceAsync }); }
            if (this.language) { await async.each(this.language, async v => await v.updateReferencesAsync({ fnUpdateReferenceAsync })); }
    }

    /**
     * Returns JSON representation of entity
     * @return {Object}
     */
    toJSONInternal () {
        const json = {
            id: this.id,
            extension: this.extension && this.extension.map(v => v.toJSONInternal()),
            modifierExtension: this.modifierExtension && this.modifierExtension.map(v => v.toJSONInternal()),
            publishedIn: this.publishedIn && this.publishedIn.toJSONInternal(),
            periodicRelease: this.periodicRelease && this.periodicRelease.toJSONInternal(),
            articleDate: this.articleDate,
            lastRevisionDate: this.lastRevisionDate,
            language: this.language && this.language.map(v => v.toJSONInternal()),
            accessionNumber: this.accessionNumber,
            pageString: this.pageString,
            firstPage: this.firstPage,
            lastPage: this.lastPage,
            pageCount: this.pageCount,
            copyright: this.copyright
        };

        return removeNull(json);
    }
}

module.exports = CitationPublicationForm;
