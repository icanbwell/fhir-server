# Autogenerated by script: generate_search_parameters.py.  Do not edit.
search_parameter_queries = {
	'Account': {
		'identifier': new SearchParameterDefinition({
			'description': 'Account number',
			'type': 'token',
			'field': 'identifier',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Human-readable label',
			'type': 'string',
			'field': 'name',
		}),
		'owner': new SearchParameterDefinition({
			'description': 'Entity managing the Account',
			'type': 'reference',
			'field': 'owner',
			'target': ['Organization'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'The entity that caused the expenses',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient'],
		}),
		'period': new SearchParameterDefinition({
			'description': 'Transaction window',
			'type': 'date',
			'field': 'servicePeriod',
		}),
		'status': new SearchParameterDefinition({
			'description': 'active | inactive | entered-in-error | on-hold | unknown',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'The entity that caused the expenses',
			'type': 'reference',
			'field': 'subject',
			'target': ['Practitioner', 'Organization', 'Device', 'Patient', 'HealthcareService', 'PractitionerRole', 'Location'],
		}),
		'type': new SearchParameterDefinition({
			'description': 'E.g. patient, expense, depreciation',
			'type': 'token',
			'field': 'type',
		}),
	},
	'ActivityDefinition': {
		'composed-of': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'composed-of\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'context': new SearchParameterDefinition({
			'description': 'A use context assigned to the activity definition',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'A quantity- or range-valued use context assigned to the activity definition',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'A type of use context assigned to the activity definition',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'The activity definition publication date',
			'type': 'date',
			'field': 'date',
		}),
		'depends-on': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'fields': ['relatedArtifact.resource', 'library'],
			'fieldFilters': ['[type/@value=\'depends-on\']'],
			'target': ['Library', 'Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'derived-from': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'derived-from\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'description': new SearchParameterDefinition({
			'description': 'The description of the activity definition',
			'type': 'string',
			'field': 'description',
		}),
		'effective': new SearchParameterDefinition({
			'description': 'The time during which the activity definition is intended to be in use',
			'type': 'date',
			'field': 'effectivePeriod',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'External identifier for the activity definition',
			'type': 'token',
			'field': 'identifier',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Intended jurisdiction for the activity definition',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Computationally friendly name of the activity definition',
			'type': 'string',
			'field': 'name',
		}),
		'predecessor': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'predecessor\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Name of the publisher of the activity definition',
			'type': 'string',
			'field': 'publisher',
		}),
		'status': new SearchParameterDefinition({
			'description': 'The current status of the activity definition',
			'type': 'token',
			'field': 'status',
		}),
		'successor': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'successor\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'title': new SearchParameterDefinition({
			'description': 'The human-friendly name of the activity definition',
			'type': 'string',
			'field': 'title',
		}),
		'topic': new SearchParameterDefinition({
			'description': 'Topics associated with the module',
			'type': 'token',
			'field': 'topic',
		}),
		'url': new SearchParameterDefinition({
			'description': 'The uri that identifies the activity definition',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'The business version of the activity definition',
			'type': 'token',
			'field': 'version',
		}),
	},
	'AdverseEvent': {
		'actuality': new SearchParameterDefinition({
			'description': 'actual | potential',
			'type': 'token',
			'field': 'actuality',
		}),
		'category': new SearchParameterDefinition({
			'description': 'product-problem | product-quality | product-use-error | wrong-dose | incorrect-prescribing-information | wrong-technique | wrong-route-of-administration | wrong-rate | wrong-duration | wrong-time | expired-drug | medical-device-use-error | problem-different-manufacturer | unsafe-physical-environment',
			'type': 'token',
			'field': 'category',
		}),
		'date': new SearchParameterDefinition({
			'description': 'When the event occurred',
			'type': 'date',
			'field': 'date',
		}),
		'event': new SearchParameterDefinition({
			'description': 'Type of the event itself in relation to the subject',
			'type': 'token',
			'field': 'event',
		}),
		'location': new SearchParameterDefinition({
			'description': 'Location where adverse event occurred',
			'type': 'reference',
			'field': 'location',
			'target': ['Location'],
		}),
		'recorder': new SearchParameterDefinition({
			'description': 'Who recorded the adverse event',
			'type': 'reference',
			'field': 'recorder',
			'target': ['Practitioner', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'resultingcondition': new SearchParameterDefinition({
			'description': 'Effect on the subject due to this event',
			'type': 'reference',
			'field': 'resultingCondition',
			'target': ['Condition'],
		}),
		'seriousness': new SearchParameterDefinition({
			'description': 'Seriousness of the event',
			'type': 'token',
			'field': 'seriousness',
		}),
		'severity': new SearchParameterDefinition({
			'description': 'mild | moderate | severe',
			'type': 'token',
			'field': 'severity',
		}),
		'study': new SearchParameterDefinition({
			'description': 'AdverseEvent.study',
			'type': 'reference',
			'field': 'study',
			'target': ['ResearchStudy'],
		}),
		'subject': new SearchParameterDefinition({
			'description': 'Subject impacted by event',
			'type': 'reference',
			'field': 'subject',
			'target': ['Practitioner', 'Group', 'Patient', 'RelatedPerson'],
		}),
		'substance': new SearchParameterDefinition({
			'description': 'Refers to the specific entity that caused the adverse event',
			'type': 'reference',
			'field': 'suspectEntity.instance',
			'target': ['Immunization', 'Device', 'Medication', 'Procedure', 'Substance', 'MedicationAdministration', 'MedicationStatement'],
		}),
	},
	'AllergyIntolerance': {
		'asserter': new SearchParameterDefinition({
			'description': 'Source of the information about the allergy',
			'type': 'reference',
			'field': 'asserter',
			'target': ['Practitioner', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'category': new SearchParameterDefinition({
			'description': 'food | medication | environment | biologic',
			'type': 'token',
			'field': 'category',
		}),
		'clinical-status': new SearchParameterDefinition({
			'description': 'active | inactive | resolved',
			'type': 'token',
			'field': 'clinicalStatus',
		}),
		'code': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered',
			'type': 'token',
			'fields': ['code', 'reaction.substance'],
		}),
		'criticality': new SearchParameterDefinition({
			'description': 'low | high | unable-to-assess',
			'type': 'token',
			'field': 'criticality',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of cares period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made',
			'type': 'date',
			'field': 'recordedDate',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'last-date': new SearchParameterDefinition({
			'description': 'Date(/time) of last known occurrence of a reaction',
			'type': 'date',
			'field': 'lastOccurrence',
		}),
		'manifestation': new SearchParameterDefinition({
			'description': 'Clinical symptoms/signs associated with the Event',
			'type': 'token',
			'field': 'reaction.manifestation',
		}),
		'onset': new SearchParameterDefinition({
			'description': 'Date(/time) when manifestations showed',
			'type': 'date',
			'field': 'reaction.onset',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'patient',
			'target': ['Patient', 'Group'],
		}),
		'recorder': new SearchParameterDefinition({
			'description': 'Who recorded the sensitivity',
			'type': 'reference',
			'field': 'recorder',
			'target': ['Practitioner', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'route': new SearchParameterDefinition({
			'description': 'How the subject was exposed to the substance',
			'type': 'token',
			'field': 'reaction.exposureRoute',
		}),
		'severity': new SearchParameterDefinition({
			'description': 'mild | moderate | severe (of event as a whole)',
			'type': 'token',
			'field': 'reaction.severity',
		}),
		'type': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)* [Composition](composition.html): Kind of composition (LOINC if possible)* [DocumentManifest](documentmanifest.html): Kind of document set* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)* [Encounter](encounter.html): Specific type of encounter* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management',
			'type': 'token',
			'field': 'type',
		}),
		'verification-status': new SearchParameterDefinition({
			'description': 'unconfirmed | confirmed | refuted | entered-in-error',
			'type': 'token',
			'field': 'verificationStatus',
		}),
	},
	'Appointment': {
		'actor': new SearchParameterDefinition({
			'description': 'Any one of the individuals participating in the appointment',
			'type': 'reference',
			'field': 'participant.actor',
			'target': ['Practitioner', 'Device', 'Patient', 'HealthcareService', 'PractitionerRole', 'RelatedPerson', 'Location'],
		}),
		'appointment-type': new SearchParameterDefinition({
			'description': 'The style of appointment or patient that has been booked in the slot (not service type)',
			'type': 'token',
			'field': 'appointmentType',
		}),
		'based-on': new SearchParameterDefinition({
			'description': 'The service request this appointment is allocated to assess',
			'type': 'reference',
			'field': 'basedOn',
			'target': ['ServiceRequest'],
		}),
		'date': new SearchParameterDefinition({
			'description': 'Appointment date/time.',
			'type': 'date',
			'field': 'start',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'An Identifier of the Appointment',
			'type': 'token',
			'field': 'identifier',
		}),
		'location': new SearchParameterDefinition({
			'description': 'This location is listed in the participants of the appointment',
			'type': 'reference',
			'field': 'participant.actor',
			'target': ['Location'],
		}),
		'part-status': new SearchParameterDefinition({
			'description': 'The Participation status of the subject, or other participant on the appointment. Can be used to locate participants that have not responded to meeting requests.',
			'type': 'token',
			'field': 'participant.status',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'One of the individuals of the appointment is this patient',
			'type': 'reference',
			'field': 'participant.actor',
			'target': ['Patient'],
		}),
		'practitioner': new SearchParameterDefinition({
			'description': 'One of the individuals of the appointment is this practitioner',
			'type': 'reference',
			'field': 'participant.actor',
			'target': ['Practitioner'],
		}),
		'reason-code': new SearchParameterDefinition({
			'description': 'Coded reason this appointment is scheduled',
			'type': 'token',
			'field': 'reasonCode',
		}),
		'reason-reference': new SearchParameterDefinition({
			'description': 'Reason the appointment is to take place (resource)',
			'type': 'reference',
			'field': 'reasonReference',
			'target': ['Condition', 'Observation', 'Procedure', 'ImmunizationRecommendation'],
		}),
		'service-category': new SearchParameterDefinition({
			'description': 'A broad categorization of the service that is to be performed during this appointment',
			'type': 'token',
			'field': 'serviceCategory',
		}),
		'service-type': new SearchParameterDefinition({
			'description': 'The specific service that is to be performed during this appointment',
			'type': 'token',
			'field': 'serviceType',
		}),
		'slot': new SearchParameterDefinition({
			'description': 'The slots that this appointment is filling',
			'type': 'reference',
			'field': 'slot',
			'target': ['Slot'],
		}),
		'specialty': new SearchParameterDefinition({
			'description': 'The specialty of a practitioner that would be required to perform the service requested in this appointment',
			'type': 'token',
			'field': 'specialty',
		}),
		'status': new SearchParameterDefinition({
			'description': 'The overall status of the appointment',
			'type': 'token',
			'field': 'status',
		}),
		'supporting-info': new SearchParameterDefinition({
			'description': 'Additional information to support the appointment',
			'type': 'reference',
			'field': 'supportingInformation',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
	},
	'AppointmentResponse': {
		'actor': new SearchParameterDefinition({
			'description': 'The Person, Location/HealthcareService or Device that this appointment response replies for',
			'type': 'reference',
			'field': 'actor',
			'target': ['Practitioner', 'Device', 'Patient', 'HealthcareService', 'PractitionerRole', 'RelatedPerson', 'Location'],
		}),
		'appointment': new SearchParameterDefinition({
			'description': 'The appointment that the response is attached to',
			'type': 'reference',
			'field': 'appointment',
			'target': ['Appointment'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'An Identifier in this appointment response',
			'type': 'token',
			'field': 'identifier',
		}),
		'location': new SearchParameterDefinition({
			'description': 'This Response is for this Location',
			'type': 'reference',
			'field': 'actor',
			'target': ['Location'],
		}),
		'part-status': new SearchParameterDefinition({
			'description': 'The participants acceptance status for this appointment',
			'type': 'token',
			'field': 'participantStatus',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'This Response is for this Patient',
			'type': 'reference',
			'field': 'actor',
			'target': ['Patient'],
		}),
		'practitioner': new SearchParameterDefinition({
			'description': 'This Response is for this Practitioner',
			'type': 'reference',
			'field': 'actor',
			'target': ['Practitioner'],
		}),
	},
	'AuditEvent': {
		'action': new SearchParameterDefinition({
			'description': 'Type of action performed during the event',
			'type': 'token',
			'field': 'action',
		}),
		'address': new SearchParameterDefinition({
			'description': 'Identifier for the network access point of the user device',
			'type': 'string',
			'field': 'agent.network.address',
		}),
		'agent': new SearchParameterDefinition({
			'description': 'Identifier of who',
			'type': 'reference',
			'field': 'agent.who',
			'target': ['Practitioner', 'Organization', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'agent-name': new SearchParameterDefinition({
			'description': 'Human friendly name for the agent',
			'type': 'string',
			'field': 'agent.name',
		}),
		'agent-role': new SearchParameterDefinition({
			'description': 'Agent role in the event',
			'type': 'token',
			'field': 'agent.role',
		}),
		'altid': new SearchParameterDefinition({
			'description': 'Alternative User identity',
			'type': 'token',
			'field': 'agent.altId',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Time when the event was recorded',
			'type': 'date',
			'field': 'recorded',
		}),
		'entity': new SearchParameterDefinition({
			'description': 'Specific instance of resource',
			'type': 'reference',
			'field': 'entity.what',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'entity-name': new SearchParameterDefinition({
			'description': 'Descriptor for entity',
			'type': 'string',
			'field': 'entity.name',
		}),
		'entity-role': new SearchParameterDefinition({
			'description': 'What role the entity played',
			'type': 'token',
			'field': 'entity.role',
		}),
		'entity-type': new SearchParameterDefinition({
			'description': 'Type of entity involved',
			'type': 'token',
			'field': 'entity.type',
		}),
		'outcome': new SearchParameterDefinition({
			'description': 'Whether the event succeeded or failed',
			'type': 'token',
			'field': 'outcome',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Identifier of who',
			'type': 'reference',
			'fields': ['agent.who', 'entity.what'],
			'target': ['Patient'],
		}),
		'policy': new SearchParameterDefinition({
			'description': 'Policy that authorized event',
			'type': 'uri',
			'field': 'agent.policy',
		}),
		'site': new SearchParameterDefinition({
			'description': 'Logical source location within the enterprise',
			'type': 'token',
			'field': 'source.site',
		}),
		'source': new SearchParameterDefinition({
			'description': 'The identity of source detecting the event',
			'type': 'reference',
			'field': 'source.observer',
			'target': ['Practitioner', 'Organization', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'subtype': new SearchParameterDefinition({
			'description': 'More specific type/id for the event',
			'type': 'token',
			'field': 'subtype',
		}),
		'type': new SearchParameterDefinition({
			'description': 'Type/identifier of event',
			'type': 'token',
			'field': 'type',
		}),
	},
	'Basic': {
		'author': new SearchParameterDefinition({
			'description': 'Who created',
			'type': 'reference',
			'field': 'author',
			'target': ['Practitioner', 'Organization', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'code': new SearchParameterDefinition({
			'description': 'Kind of Resource',
			'type': 'token',
			'field': 'code',
		}),
		'created': new SearchParameterDefinition({
			'description': 'When created',
			'type': 'date',
			'field': 'created',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Business identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Identifies the focus of this resource',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient'],
		}),
		'subject': new SearchParameterDefinition({
			'description': 'Identifies the focus of this resource',
			'type': 'reference',
			'field': 'subject',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
	},
	'Binary': {
	},
	'BodyStructure': {
		'identifier': new SearchParameterDefinition({
			'description': 'Bodystructure identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'location': new SearchParameterDefinition({
			'description': 'Body site',
			'type': 'token',
			'field': 'location',
		}),
		'morphology': new SearchParameterDefinition({
			'description': 'Kind of Structure',
			'type': 'token',
			'field': 'morphology',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Who this is about',
			'type': 'reference',
			'field': 'patient',
			'target': ['Patient'],
		}),
	},
	'Bundle': {
		'composition': new SearchParameterDefinition({
			'description': 'The first resource in the bundle, if the bundle type is "document" - this is a composition, and this parameter provides access to search its contents',
			'type': 'reference',
			'field': 'entry.resource',
			'fieldFilter': '[0]',
			'target': ['Composition'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Persistent identifier for the bundle',
			'type': 'token',
			'field': 'identifier',
		}),
		'message': new SearchParameterDefinition({
			'description': 'The first resource in the bundle, if the bundle type is "message" - this is a message header, and this parameter provides access to search its contents',
			'type': 'reference',
			'field': 'entry.resource',
			'fieldFilter': '[0]',
			'target': ['MessageHeader'],
		}),
		'timestamp': new SearchParameterDefinition({
			'description': 'When the bundle was assembled',
			'type': 'date',
			'field': 'timestamp',
		}),
		'type': new SearchParameterDefinition({
			'description': 'document | message | transaction | transaction-response | batch | batch-response | history | searchset | collection',
			'type': 'token',
			'field': 'type',
		}),
	},
	'CapabilityStatement': {
		'context': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date',
			'type': 'date',
			'field': 'date',
		}),
		'description': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set',
			'type': 'string',
			'field': 'description',
		}),
		'fhirversion': new SearchParameterDefinition({
			'description': 'The version of FHIR',
			'type': 'token',
			'field': 'version',
		}),
		'format': new SearchParameterDefinition({
			'description': 'formats supported (xml | json | ttl | mime type)',
			'type': 'token',
			'field': 'format',
		}),
		'guide': new SearchParameterDefinition({
			'description': 'Implementation guides supported',
			'type': 'reference',
			'field': 'implementationGuide',
			'target': ['ImplementationGuide'],
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'mode': new SearchParameterDefinition({
			'description': 'Mode - restful (server/client) or messaging (sender/receiver)',
			'type': 'token',
			'field': 'rest.mode',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set',
			'type': 'string',
			'field': 'name',
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set',
			'type': 'string',
			'field': 'publisher',
		}),
		'resource': new SearchParameterDefinition({
			'description': 'Name of a resource mentioned in a capability statement',
			'type': 'token',
			'field': 'rest.resource.type',
		}),
		'resource-profile': new SearchParameterDefinition({
			'description': 'A profile id invoked in a capability statement',
			'type': 'reference',
			'field': 'rest.resource.profile',
			'target': ['StructureDefinition'],
		}),
		'security-service': new SearchParameterDefinition({
			'description': 'OAuth | SMART-on-FHIR | NTLM | Basic | Kerberos | Certificates',
			'type': 'token',
			'field': 'rest.security.service',
		}),
		'software': new SearchParameterDefinition({
			'description': 'Part of the name of a software application',
			'type': 'string',
			'field': 'software.name',
		}),
		'status': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set',
			'type': 'token',
			'field': 'status',
		}),
		'supported-profile': new SearchParameterDefinition({
			'description': 'Profiles for use cases supported',
			'type': 'reference',
			'field': 'rest.resource.supportedProfile',
			'target': ['StructureDefinition'],
		}),
		'title': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement* [CodeSystem](codesystem.html): The human-friendly name of the code system* [ConceptMap](conceptmap.html): The human-friendly name of the concept map* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition* [StructureMap](structuremap.html): The human-friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities* [ValueSet](valueset.html): The human-friendly name of the value set',
			'type': 'string',
			'field': 'title',
		}),
		'url': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set',
			'type': 'token',
			'field': 'version',
		}),
	},
	'CarePlan': {
		'activity-code': new SearchParameterDefinition({
			'description': 'Detail type of activity',
			'type': 'token',
			'field': 'activity.detail.code',
		}),
		'activity-date': new SearchParameterDefinition({
			'description': 'Specified date occurs within period specified by CarePlan.activity.detail.scheduled[x]',
			'type': 'date',
			'fields': ['activity.detail.scheduledTiming', 'activity.detail.scheduledPeriod', 'activity.detail.scheduledString'],
		}),
		'activity-reference': new SearchParameterDefinition({
			'description': 'Activity details defined in specific resource',
			'type': 'reference',
			'field': 'activity.reference',
			'target': ['Appointment', 'MedicationRequest', 'Task', 'NutritionOrder', 'RequestGroup', 'VisionPrescription', 'DeviceRequest', 'ServiceRequest', 'CommunicationRequest'],
		}),
		'based-on': new SearchParameterDefinition({
			'description': 'Fulfills CarePlan',
			'type': 'reference',
			'field': 'basedOn',
			'target': ['CarePlan'],
		}),
		'care-team': new SearchParameterDefinition({
			'description': 'Whos involved in plan?',
			'type': 'reference',
			'field': 'careTeam',
			'target': ['CareTeam'],
		}),
		'category': new SearchParameterDefinition({
			'description': 'Type of plan',
			'type': 'token',
			'field': 'category',
		}),
		'condition': new SearchParameterDefinition({
			'description': 'Health issues this plan addresses',
			'type': 'reference',
			'field': 'addresses',
			'target': ['Condition'],
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of cares period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made',
			'type': 'date',
			'field': 'period',
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Encounter created as part of',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter'],
		}),
		'goal': new SearchParameterDefinition({
			'description': 'Desired outcome of plan',
			'type': 'reference',
			'field': 'goal',
			'target': ['Goal'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'instantiates-canonical': new SearchParameterDefinition({
			'description': 'Instantiates FHIR protocol or definition',
			'type': 'reference',
			'field': 'instantiatesCanonical',
			'target': ['Questionnaire', 'Measure', 'PlanDefinition', 'OperationDefinition', 'ActivityDefinition'],
		}),
		'instantiates-uri': new SearchParameterDefinition({
			'description': 'Instantiates external protocol or definition',
			'type': 'uri',
			'field': 'instantiatesUri',
		}),
		'intent': new SearchParameterDefinition({
			'description': 'proposal | plan | order | option',
			'type': 'token',
			'field': 'intent',
		}),
		'part-of': new SearchParameterDefinition({
			'description': 'Part of referenced CarePlan',
			'type': 'reference',
			'field': 'partOf',
			'target': ['CarePlan'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'performer': new SearchParameterDefinition({
			'description': 'Matches if the practitioner is listed as a performer in any of the "simple" activities.  (For performers of the detailed activities, chain through the activitydetail search parameter.)',
			'type': 'reference',
			'field': 'activity.detail.performer',
			'target': ['Practitioner', 'Organization', 'CareTeam', 'Device', 'Patient', 'HealthcareService', 'PractitionerRole', 'RelatedPerson'],
		}),
		'replaces': new SearchParameterDefinition({
			'description': 'CarePlan replaced by this CarePlan',
			'type': 'reference',
			'field': 'replaces',
			'target': ['CarePlan'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'draft | active | on-hold | revoked | completed | entered-in-error | unknown',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'Who the care plan is for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Patient'],
		}),
	},
	'CareTeam': {
		'category': new SearchParameterDefinition({
			'description': 'Type of team',
			'type': 'token',
			'field': 'category',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of cares period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made',
			'type': 'date',
			'field': 'period',
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Encounter created as part of',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'participant': new SearchParameterDefinition({
			'description': 'Who is involved',
			'type': 'reference',
			'field': 'participant.member',
			'target': ['Practitioner', 'Organization', 'CareTeam', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'proposed | active | suspended | inactive | entered-in-error',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'Who care team is for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Patient'],
		}),
	},
	'ChargeItem': {
		'account': new SearchParameterDefinition({
			'description': 'Account to place this charge',
			'type': 'reference',
			'field': 'account',
			'target': ['Account'],
		}),
		'code': new SearchParameterDefinition({
			'description': 'A code that identifies the charge, like a billing code',
			'type': 'token',
			'field': 'code',
		}),
		'context': new SearchParameterDefinition({
			'description': 'Encounter / Episode associated with event',
			'type': 'reference',
			'field': 'context',
			'target': ['EpisodeOfCare', 'Encounter'],
		}),
		'entered-date': new SearchParameterDefinition({
			'description': 'Date the charge item was entered',
			'type': 'date',
			'field': 'enteredDate',
		}),
		'enterer': new SearchParameterDefinition({
			'description': 'Individual who was entering',
			'type': 'reference',
			'field': 'enterer',
			'target': ['Practitioner', 'Organization', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'factor-override': new SearchParameterDefinition({
			'description': 'Factor overriding the associated rules',
			'type': 'number',
			'field': 'factorOverride',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Business Identifier for item',
			'type': 'token',
			'field': 'identifier',
		}),
		'occurrence': new SearchParameterDefinition({
			'description': 'When the charged service was applied',
			'type': 'date',
			'fields': ['occurrenceDateTime', 'occurrencePeriod', 'occurrenceTiming'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Individual service was done for/to',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient'],
		}),
		'performer-actor': new SearchParameterDefinition({
			'description': 'Individual who was performing',
			'type': 'reference',
			'field': 'performer.actor',
			'target': ['Practitioner', 'Organization', 'CareTeam', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'performer-function': new SearchParameterDefinition({
			'description': 'What type of performance was done',
			'type': 'token',
			'field': 'performer.function',
		}),
		'performing-organization': new SearchParameterDefinition({
			'description': 'Organization providing the charged service',
			'type': 'reference',
			'field': 'performingOrganization',
			'target': ['Organization'],
		}),
		'price-override': new SearchParameterDefinition({
			'description': 'Price overriding the associated rules',
			'type': 'quantity',
			'field': 'priceOverride',
		}),
		'quantity': new SearchParameterDefinition({
			'description': 'Quantity of which the charge item has been serviced',
			'type': 'quantity',
			'field': 'quantity',
		}),
		'requesting-organization': new SearchParameterDefinition({
			'description': 'Organization requesting the charged service',
			'type': 'reference',
			'field': 'requestingOrganization',
			'target': ['Organization'],
		}),
		'service': new SearchParameterDefinition({
			'description': 'Which rendered service is being charged?',
			'type': 'reference',
			'field': 'service',
			'target': ['Immunization', 'MedicationDispense', 'SupplyDelivery', 'Observation', 'DiagnosticReport', 'ImagingStudy', 'MedicationAdministration', 'Procedure'],
		}),
		'subject': new SearchParameterDefinition({
			'description': 'Individual service was done for/to',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Patient'],
		}),
	},
	'ChargeItemDefinition': {
		'context': new SearchParameterDefinition({
			'description': 'A use context assigned to the charge item definition',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'A quantity- or range-valued use context assigned to the charge item definition',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'A type of use context assigned to the charge item definition',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'The charge item definition publication date',
			'type': 'date',
			'field': 'date',
		}),
		'description': new SearchParameterDefinition({
			'description': 'The description of the charge item definition',
			'type': 'string',
			'field': 'description',
		}),
		'effective': new SearchParameterDefinition({
			'description': 'The time during which the charge item definition is intended to be in use',
			'type': 'date',
			'field': 'effectivePeriod',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'External identifier for the charge item definition',
			'type': 'token',
			'field': 'identifier',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Intended jurisdiction for the charge item definition',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Name of the publisher of the charge item definition',
			'type': 'string',
			'field': 'publisher',
		}),
		'status': new SearchParameterDefinition({
			'description': 'The current status of the charge item definition',
			'type': 'token',
			'field': 'status',
		}),
		'title': new SearchParameterDefinition({
			'description': 'The human-friendly name of the charge item definition',
			'type': 'string',
			'field': 'title',
		}),
		'url': new SearchParameterDefinition({
			'description': 'The uri that identifies the charge item definition',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'The business version of the charge item definition',
			'type': 'token',
			'field': 'version',
		}),
	},
	'Claim': {
		'care-team': new SearchParameterDefinition({
			'description': 'Member of the CareTeam',
			'type': 'reference',
			'field': 'careTeam.provider',
			'target': ['Practitioner', 'Organization', 'PractitionerRole'],
		}),
		'created': new SearchParameterDefinition({
			'description': 'The creation date for the Claim',
			'type': 'date',
			'field': 'created',
		}),
		'detail-udi': new SearchParameterDefinition({
			'description': 'UDI associated with a line item, detail product or service',
			'type': 'reference',
			'field': 'item.detail.udi',
			'target': ['Device'],
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Encounters associated with a billed line item',
			'type': 'reference',
			'field': 'item.encounter',
			'target': ['Encounter'],
		}),
		'enterer': new SearchParameterDefinition({
			'description': 'The party responsible for the entry of the Claim',
			'type': 'reference',
			'field': 'enterer',
			'target': ['Practitioner', 'PractitionerRole'],
		}),
		'facility': new SearchParameterDefinition({
			'description': 'Facility where the products or services have been or will be provided',
			'type': 'reference',
			'field': 'facility',
			'target': ['Location'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'The primary identifier of the financial resource',
			'type': 'token',
			'field': 'identifier',
		}),
		'insurer': new SearchParameterDefinition({
			'description': 'The target payor/insurer for the Claim',
			'type': 'reference',
			'field': 'insurer',
			'target': ['Organization'],
		}),
		'item-udi': new SearchParameterDefinition({
			'description': 'UDI associated with a line item product or service',
			'type': 'reference',
			'field': 'item.udi',
			'target': ['Device'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Patient receiving the products or services',
			'type': 'reference',
			'field': 'patient',
			'target': ['Patient'],
		}),
		'payee': new SearchParameterDefinition({
			'description': 'The party receiving any payment for the Claim',
			'type': 'reference',
			'field': 'payee.party',
			'target': ['Practitioner', 'Organization', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'priority': new SearchParameterDefinition({
			'description': 'Processing priority requested',
			'type': 'token',
			'field': 'priority',
		}),
		'procedure-udi': new SearchParameterDefinition({
			'description': 'UDI associated with a procedure',
			'type': 'reference',
			'field': 'procedure.udi',
			'target': ['Device'],
		}),
		'provider': new SearchParameterDefinition({
			'description': 'Provider responsible for the Claim',
			'type': 'reference',
			'field': 'provider',
			'target': ['Practitioner', 'Organization', 'PractitionerRole'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'The status of the Claim instance.',
			'type': 'token',
			'field': 'status',
		}),
		'subdetail-udi': new SearchParameterDefinition({
			'description': 'UDI associated with a line item, detail, subdetail product or service',
			'type': 'reference',
			'field': 'item.detail.subDetail.udi',
			'target': ['Device'],
		}),
		'use': new SearchParameterDefinition({
			'description': 'The kind of financial resource',
			'type': 'token',
			'field': 'use',
		}),
	},
	'ClaimResponse': {
		'created': new SearchParameterDefinition({
			'description': 'The creation date',
			'type': 'date',
			'field': 'created',
		}),
		'disposition': new SearchParameterDefinition({
			'description': 'The contents of the disposition message',
			'type': 'string',
			'field': 'disposition',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'The identity of the ClaimResponse',
			'type': 'token',
			'field': 'identifier',
		}),
		'insurer': new SearchParameterDefinition({
			'description': 'The organization which generated this resource',
			'type': 'reference',
			'field': 'insurer',
			'target': ['Organization'],
		}),
		'outcome': new SearchParameterDefinition({
			'description': 'The processing outcome',
			'type': 'token',
			'field': 'outcome',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'The subject of care',
			'type': 'reference',
			'field': 'patient',
			'target': ['Patient'],
		}),
		'payment-date': new SearchParameterDefinition({
			'description': 'The expected payment date',
			'type': 'date',
			'field': 'payment.date',
		}),
		'request': new SearchParameterDefinition({
			'description': 'The claim reference',
			'type': 'reference',
			'field': 'request',
			'target': ['Claim'],
		}),
		'requestor': new SearchParameterDefinition({
			'description': 'The Provider of the claim',
			'type': 'reference',
			'field': 'requestor',
			'target': ['Practitioner', 'Organization', 'PractitionerRole'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'The status of the ClaimResponse',
			'type': 'token',
			'field': 'status',
		}),
		'use': new SearchParameterDefinition({
			'description': 'The type of claim',
			'type': 'token',
			'field': 'use',
		}),
	},
	'ClinicalImpression': {
		'assessor': new SearchParameterDefinition({
			'description': 'The clinician performing the assessment',
			'type': 'reference',
			'field': 'assessor',
			'target': ['Practitioner', 'PractitionerRole'],
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of cares period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made',
			'type': 'date',
			'field': 'date',
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Encounter created as part of',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter'],
		}),
		'finding-code': new SearchParameterDefinition({
			'description': 'What was found',
			'type': 'token',
			'field': 'finding.itemCodeableConcept',
		}),
		'finding-ref': new SearchParameterDefinition({
			'description': 'What was found',
			'type': 'reference',
			'field': 'finding.itemReference',
			'target': ['Condition', 'Observation', 'Media'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Business identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'investigation': new SearchParameterDefinition({
			'description': 'Record of a specific investigation',
			'type': 'reference',
			'field': 'investigation.item',
			'target': ['RiskAssessment', 'FamilyMemberHistory', 'Observation', 'Media', 'DiagnosticReport', 'ImagingStudy', 'QuestionnaireResponse'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'previous': new SearchParameterDefinition({
			'description': 'Reference to last assessment',
			'type': 'reference',
			'field': 'previous',
			'target': ['ClinicalImpression'],
		}),
		'problem': new SearchParameterDefinition({
			'description': 'Relevant impressions of patient state',
			'type': 'reference',
			'field': 'problem',
			'target': ['Condition', 'AllergyIntolerance'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'in-progress | completed | entered-in-error',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'Patient or group assessed',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Patient'],
		}),
		'supporting-info': new SearchParameterDefinition({
			'description': 'Information supporting the clinical impression',
			'type': 'reference',
			'field': 'supportingInfo',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
	},
	'CodeSystem': {
		'code': new SearchParameterDefinition({
			'description': 'A code defined in the code system',
			'type': 'token',
			'field': 'concept.code',
		}),
		'content-mode': new SearchParameterDefinition({
			'description': 'not-present | example | fragment | complete | supplement',
			'type': 'token',
			'field': 'content',
		}),
		'context': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date',
			'type': 'date',
			'field': 'date',
		}),
		'description': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set',
			'type': 'string',
			'field': 'description',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CodeSystem](codesystem.html): External identifier for the code system* [ConceptMap](conceptmap.html): External identifier for the concept map* [MessageDefinition](messagedefinition.html): External identifier for the message definition* [StructureDefinition](structuredefinition.html): External identifier for the structure definition* [StructureMap](structuremap.html): External identifier for the structure map* [ValueSet](valueset.html): External identifier for the value set',
			'type': 'token',
			'field': 'identifier',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'language': new SearchParameterDefinition({
			'description': 'A language in which a designation is provided',
			'type': 'token',
			'field': 'concept.designation.language',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set',
			'type': 'string',
			'field': 'name',
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set',
			'type': 'string',
			'field': 'publisher',
		}),
		'status': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set',
			'type': 'token',
			'field': 'status',
		}),
		'supplements': new SearchParameterDefinition({
			'description': 'Find code system supplements for the referenced code system',
			'type': 'reference',
			'field': 'supplements',
			'target': ['CodeSystem'],
		}),
		'system': new SearchParameterDefinition({
			'description': 'The system for any codes defined by this code system (same as url)',
			'type': 'uri',
			'field': 'url',
		}),
		'title': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement* [CodeSystem](codesystem.html): The human-friendly name of the code system* [ConceptMap](conceptmap.html): The human-friendly name of the concept map* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition* [StructureMap](structuremap.html): The human-friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities* [ValueSet](valueset.html): The human-friendly name of the value set',
			'type': 'string',
			'field': 'title',
		}),
		'url': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set',
			'type': 'token',
			'field': 'version',
		}),
	},
	'Communication': {
		'based-on': new SearchParameterDefinition({
			'description': 'Request fulfilled by this communication',
			'type': 'reference',
			'field': 'basedOn',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'category': new SearchParameterDefinition({
			'description': 'Message category',
			'type': 'token',
			'field': 'category',
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Encounter created as part of',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Unique identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'instantiates-canonical': new SearchParameterDefinition({
			'description': 'Instantiates FHIR protocol or definition',
			'type': 'reference',
			'field': 'instantiatesCanonical',
			'target': ['Questionnaire', 'Measure', 'PlanDefinition', 'OperationDefinition', 'ActivityDefinition'],
		}),
		'instantiates-uri': new SearchParameterDefinition({
			'description': 'Instantiates external protocol or definition',
			'type': 'uri',
			'field': 'instantiatesUri',
		}),
		'medium': new SearchParameterDefinition({
			'description': 'A channel of communication',
			'type': 'token',
			'field': 'medium',
		}),
		'part-of': new SearchParameterDefinition({
			'description': 'Part of this action',
			'type': 'reference',
			'field': 'partOf',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Focus of message',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient'],
		}),
		'received': new SearchParameterDefinition({
			'description': 'When received',
			'type': 'date',
			'field': 'received',
		}),
		'recipient': new SearchParameterDefinition({
			'description': 'Message recipient',
			'type': 'reference',
			'field': 'recipient',
			'target': ['Practitioner', 'Group', 'Organization', 'CareTeam', 'Device', 'Patient', 'HealthcareService', 'PractitionerRole', 'RelatedPerson'],
		}),
		'sender': new SearchParameterDefinition({
			'description': 'Message sender',
			'type': 'reference',
			'field': 'sender',
			'target': ['Practitioner', 'Organization', 'Device', 'Patient', 'HealthcareService', 'PractitionerRole', 'RelatedPerson'],
		}),
		'sent': new SearchParameterDefinition({
			'description': 'When sent',
			'type': 'date',
			'field': 'sent',
		}),
		'status': new SearchParameterDefinition({
			'description': 'preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'Focus of message',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Patient'],
		}),
	},
	'CommunicationRequest': {
		'authored': new SearchParameterDefinition({
			'description': 'When request transitioned to being actionable',
			'type': 'date',
			'field': 'authoredOn',
		}),
		'based-on': new SearchParameterDefinition({
			'description': 'Fulfills plan or proposal',
			'type': 'reference',
			'field': 'basedOn',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'category': new SearchParameterDefinition({
			'description': 'Message category',
			'type': 'token',
			'field': 'category',
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Encounter created as part of',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter'],
		}),
		'group-identifier': new SearchParameterDefinition({
			'description': 'Composite request this is part of',
			'type': 'token',
			'field': 'groupIdentifier',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Unique identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'medium': new SearchParameterDefinition({
			'description': 'A channel of communication',
			'type': 'token',
			'field': 'medium',
		}),
		'occurrence': new SearchParameterDefinition({
			'description': 'When scheduled',
			'type': 'date',
			'field': 'occurrenceDateTime',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Focus of message',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient'],
		}),
		'priority': new SearchParameterDefinition({
			'description': 'routine | urgent | asap | stat',
			'type': 'token',
			'field': 'priority',
		}),
		'recipient': new SearchParameterDefinition({
			'description': 'Message recipient',
			'type': 'reference',
			'field': 'recipient',
			'target': ['Practitioner', 'Group', 'Organization', 'CareTeam', 'Device', 'Patient', 'HealthcareService', 'PractitionerRole', 'RelatedPerson'],
		}),
		'replaces': new SearchParameterDefinition({
			'description': 'Request(s) replaced by this request',
			'type': 'reference',
			'field': 'replaces',
			'target': ['CommunicationRequest'],
		}),
		'requester': new SearchParameterDefinition({
			'description': 'Who/what is requesting service',
			'type': 'reference',
			'field': 'requester',
			'target': ['Practitioner', 'Organization', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'sender': new SearchParameterDefinition({
			'description': 'Message sender',
			'type': 'reference',
			'field': 'sender',
			'target': ['Practitioner', 'Organization', 'Device', 'Patient', 'HealthcareService', 'PractitionerRole', 'RelatedPerson'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'draft | active | on-hold | revoked | completed | entered-in-error | unknown',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'Focus of message',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Patient'],
		}),
	},
	'CompartmentDefinition': {
		'code': new SearchParameterDefinition({
			'description': 'Patient | Encounter | RelatedPerson | Practitioner | Device',
			'type': 'token',
			'field': 'code',
		}),
		'context': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date',
			'type': 'date',
			'field': 'date',
		}),
		'description': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set',
			'type': 'string',
			'field': 'description',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set',
			'type': 'string',
			'field': 'name',
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set',
			'type': 'string',
			'field': 'publisher',
		}),
		'resource': new SearchParameterDefinition({
			'description': 'Name of resource type',
			'type': 'token',
			'field': 'resource.code',
		}),
		'status': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set',
			'type': 'token',
			'field': 'status',
		}),
		'url': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set',
			'type': 'token',
			'field': 'version',
		}),
	},
	'Composition': {
		'attester': new SearchParameterDefinition({
			'description': 'Who attested the composition',
			'type': 'reference',
			'field': 'attester.party',
			'target': ['Practitioner', 'Organization', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'author': new SearchParameterDefinition({
			'description': 'Who and/or what authored the composition',
			'type': 'reference',
			'field': 'author',
			'target': ['Practitioner', 'Organization', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'category': new SearchParameterDefinition({
			'description': 'Categorization of Composition',
			'type': 'token',
			'field': 'category',
		}),
		'confidentiality': new SearchParameterDefinition({
			'description': 'As defined by affinity domain',
			'type': 'token',
			'field': 'confidentiality',
		}),
		'context': new SearchParameterDefinition({
			'description': 'Code(s) that apply to the event being documented',
			'type': 'token',
			'field': 'event.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of cares period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made',
			'type': 'date',
			'field': 'date',
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter', 'EpisodeOfCare'],
		}),
		'entry': new SearchParameterDefinition({
			'description': 'A reference to data that supports this section',
			'type': 'reference',
			'field': 'section.entry',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'period': new SearchParameterDefinition({
			'description': 'The period covered by the documentation',
			'type': 'date',
			'field': 'event.period',
		}),
		'related-id': new SearchParameterDefinition({
			'description': 'Target of the relationship',
			'type': 'token',
			'field': 'relatesTo.targetIdentifier',
		}),
		'related-ref': new SearchParameterDefinition({
			'description': 'Target of the relationship',
			'type': 'reference',
			'field': 'relatesTo.targetReference',
			'target': ['Composition'],
		}),
		'section': new SearchParameterDefinition({
			'description': 'Classification of section (recommended)',
			'type': 'token',
			'field': 'section.code',
		}),
		'status': new SearchParameterDefinition({
			'description': 'preliminary | final | amended | entered-in-error',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'Who and/or what the composition is about',
			'type': 'reference',
			'field': 'subject',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'title': new SearchParameterDefinition({
			'description': 'Human Readable name/title',
			'type': 'string',
			'field': 'title',
		}),
		'type': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)* [Composition](composition.html): Kind of composition (LOINC if possible)* [DocumentManifest](documentmanifest.html): Kind of document set* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)* [Encounter](encounter.html): Specific type of encounter* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management',
			'type': 'token',
			'field': 'type',
		}),
	},
	'ConceptMap': {
		'context': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date',
			'type': 'date',
			'field': 'date',
		}),
		'dependson': new SearchParameterDefinition({
			'description': 'Reference to property mapping depends on',
			'type': 'uri',
			'field': 'group.element.target.dependsOn.property',
		}),
		'description': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set',
			'type': 'string',
			'field': 'description',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CodeSystem](codesystem.html): External identifier for the code system* [ConceptMap](conceptmap.html): External identifier for the concept map* [MessageDefinition](messagedefinition.html): External identifier for the message definition* [StructureDefinition](structuredefinition.html): External identifier for the structure definition* [StructureMap](structuremap.html): External identifier for the structure map* [ValueSet](valueset.html): External identifier for the value set',
			'type': 'token',
			'field': 'identifier',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set',
			'type': 'string',
			'field': 'name',
		}),
		'other': new SearchParameterDefinition({
			'description': 'canonical reference to an additional ConceptMap to use for mapping if the source concept is unmapped',
			'type': 'reference',
			'field': 'group.unmapped.url',
			'target': ['ConceptMap'],
		}),
		'product': new SearchParameterDefinition({
			'description': 'Reference to property mapping depends on',
			'type': 'uri',
			'field': 'group.element.target.product.property',
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set',
			'type': 'string',
			'field': 'publisher',
		}),
		'source': new SearchParameterDefinition({
			'description': 'The source value set that contains the concepts that are being mapped',
			'type': 'reference',
			'field': 'sourceCanonical',
			'target': ['ValueSet'],
		}),
		'source-code': new SearchParameterDefinition({
			'description': 'Identifies element being mapped',
			'type': 'token',
			'field': 'group.element.code',
		}),
		'source-system': new SearchParameterDefinition({
			'description': 'Source system where concepts to be mapped are defined',
			'type': 'uri',
			'field': 'group.source',
		}),
		'source-uri': new SearchParameterDefinition({
			'description': 'The source value set that contains the concepts that are being mapped',
			'type': 'reference',
			'field': 'sourceUri',
			'target': ['ValueSet'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set',
			'type': 'token',
			'field': 'status',
		}),
		'target': new SearchParameterDefinition({
			'description': 'The target value set which provides context for the mappings',
			'type': 'reference',
			'field': 'targetCanonical',
			'target': ['ValueSet'],
		}),
		'target-code': new SearchParameterDefinition({
			'description': 'Code that identifies the target element',
			'type': 'token',
			'field': 'group.element.target.code',
		}),
		'target-system': new SearchParameterDefinition({
			'description': 'Target system that the concepts are to be mapped to',
			'type': 'uri',
			'field': 'group.target',
		}),
		'target-uri': new SearchParameterDefinition({
			'description': 'The target value set which provides context for the mappings',
			'type': 'reference',
			'field': 'targetUri',
			'target': ['ValueSet'],
		}),
		'title': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement* [CodeSystem](codesystem.html): The human-friendly name of the code system* [ConceptMap](conceptmap.html): The human-friendly name of the concept map* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition* [StructureMap](structuremap.html): The human-friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities* [ValueSet](valueset.html): The human-friendly name of the value set',
			'type': 'string',
			'field': 'title',
		}),
		'url': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set',
			'type': 'token',
			'field': 'version',
		}),
	},
	'Condition': {
		'abatement-age': new SearchParameterDefinition({
			'description': 'Abatement as age or age range',
			'type': 'quantity',
			'fields': ['abatementAge', 'abatementRange'],
		}),
		'abatement-date': new SearchParameterDefinition({
			'description': 'Date-related abatements (dateTime and period)',
			'type': 'date',
			'fields': ['abatementDateTime', 'abatementPeriod'],
		}),
		'abatement-string': new SearchParameterDefinition({
			'description': 'Abatement as a string',
			'type': 'string',
			'field': 'abatementString',
		}),
		'asserter': new SearchParameterDefinition({
			'description': 'Person who asserts this condition',
			'type': 'reference',
			'field': 'asserter',
			'target': ['Practitioner', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'body-site': new SearchParameterDefinition({
			'description': 'Anatomical location, if relevant',
			'type': 'token',
			'field': 'bodySite',
		}),
		'category': new SearchParameterDefinition({
			'description': 'The category of the condition',
			'type': 'token',
			'field': 'category',
		}),
		'clinical-status': new SearchParameterDefinition({
			'description': 'The clinical status of the condition',
			'type': 'token',
			'field': 'clinicalStatus',
		}),
		'code': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered',
			'type': 'token',
			'field': 'code',
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Encounter created as part of',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter'],
		}),
		'evidence': new SearchParameterDefinition({
			'description': 'Manifestation/symptom',
			'type': 'token',
			'field': 'evidence.code',
		}),
		'evidence-detail': new SearchParameterDefinition({
			'description': 'Supporting information found elsewhere',
			'type': 'reference',
			'field': 'evidence.detail',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'onset-age': new SearchParameterDefinition({
			'description': 'Onsets as age or age range',
			'type': 'quantity',
			'fields': ['onsetAge', 'onsetRange'],
		}),
		'onset-date': new SearchParameterDefinition({
			'description': 'Date related onsets (dateTime and Period)',
			'type': 'date',
			'fields': ['onsetDateTime', 'onsetPeriod'],
		}),
		'onset-info': new SearchParameterDefinition({
			'description': 'Onsets as a string',
			'type': 'string',
			'field': 'onsetString',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'recorded-date': new SearchParameterDefinition({
			'description': 'Date record was first recorded',
			'type': 'date',
			'field': 'recordedDate',
		}),
		'severity': new SearchParameterDefinition({
			'description': 'The severity of the condition',
			'type': 'token',
			'field': 'severity',
		}),
		'stage': new SearchParameterDefinition({
			'description': 'Simple summary (disease specific)',
			'type': 'token',
			'field': 'stage.summary',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'Who has the condition?',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Patient'],
		}),
		'verification-status': new SearchParameterDefinition({
			'description': 'unconfirmed | provisional | differential | confirmed | refuted | entered-in-error',
			'type': 'token',
			'field': 'verificationStatus',
		}),
	},
	'Consent': {
		'action': new SearchParameterDefinition({
			'description': 'Actions controlled by this rule',
			'type': 'token',
			'field': 'provision.action',
		}),
		'actor': new SearchParameterDefinition({
			'description': 'Resource for the actor (or group, by role)',
			'type': 'reference',
			'field': 'provision.actor.reference',
			'target': ['Practitioner', 'Group', 'Organization', 'CareTeam', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'category': new SearchParameterDefinition({
			'description': 'Classification of the consent statement - for indexing/retrieval',
			'type': 'token',
			'field': 'category',
		}),
		'consentor': new SearchParameterDefinition({
			'description': 'Who is agreeing to the policy and rules',
			'type': 'reference',
			'field': 'performer',
			'target': ['Practitioner', 'Organization', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'data': new SearchParameterDefinition({
			'description': 'The actual data reference',
			'type': 'reference',
			'field': 'provision.data.reference',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of cares period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made',
			'type': 'date',
			'field': 'dateTime',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'organization': new SearchParameterDefinition({
			'description': 'Custodian of the consent',
			'type': 'reference',
			'field': 'organization',
			'target': ['Organization'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'patient',
			'target': ['Patient', 'Group'],
		}),
		'period': new SearchParameterDefinition({
			'description': 'Timeframe for this rule',
			'type': 'date',
			'field': 'provision.period',
		}),
		'purpose': new SearchParameterDefinition({
			'description': 'Context of activities covered by this rule',
			'type': 'token',
			'field': 'provision.purpose',
		}),
		'scope': new SearchParameterDefinition({
			'description': 'Which of the four areas this resource covers (extensible)',
			'type': 'token',
			'field': 'scope',
		}),
		'security-label': new SearchParameterDefinition({
			'description': 'Security Labels that define affected resources',
			'type': 'token',
			'field': 'provision.securityLabel',
		}),
		'source-reference': new SearchParameterDefinition({
			'description': 'Search by reference to a Consent, DocumentReference, Contract  or QuestionnaireResponse',
			'type': 'reference',
			'fields': ['sourceAttachment', 'sourceReference'],
			'target': ['Consent', 'Contract', 'QuestionnaireResponse', 'DocumentReference'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'draft | proposed | active | rejected | inactive | entered-in-error',
			'type': 'token',
			'field': 'status',
		}),
	},
	'Contract': {
		'authority': new SearchParameterDefinition({
			'description': 'The authority of the contract',
			'type': 'reference',
			'field': 'authority',
			'target': ['Organization'],
		}),
		'domain': new SearchParameterDefinition({
			'description': 'The domain of the contract',
			'type': 'reference',
			'field': 'domain',
			'target': ['Location'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'The identity of the contract',
			'type': 'token',
			'field': 'identifier',
		}),
		'instantiates': new SearchParameterDefinition({
			'description': 'A source definition of the contract',
			'type': 'uri',
			'field': 'instantiatesUri',
		}),
		'issued': new SearchParameterDefinition({
			'description': 'The date/time the contract was issued',
			'type': 'date',
			'field': 'issued',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'The identity of the subject of the contract (if a patient)',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient'],
		}),
		'signer': new SearchParameterDefinition({
			'description': 'Contract Signatory Party',
			'type': 'reference',
			'field': 'signer.party',
			'target': ['Practitioner', 'Organization', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'The status of the contract',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'The identity of the subject of the contract',
			'type': 'reference',
			'field': 'subject',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'url': new SearchParameterDefinition({
			'description': 'The basal contract definition',
			'type': 'uri',
			'field': 'url',
		}),
	},
	'Coverage': {
		'beneficiary': new SearchParameterDefinition({
			'description': 'Covered party',
			'type': 'reference',
			'field': 'beneficiary',
			'target': ['Patient'],
		}),
		'class-type': new SearchParameterDefinition({
			'description': 'Coverage class (eg. plan, group)',
			'type': 'token',
			'field': 'class.type',
		}),
		'class-value': new SearchParameterDefinition({
			'description': 'Value of the class (eg. Plan number, group number)',
			'type': 'string',
			'field': 'class.value',
		}),
		'dependent': new SearchParameterDefinition({
			'description': 'Dependent number',
			'type': 'string',
			'field': 'dependent',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'The primary identifier of the insured and the coverage',
			'type': 'token',
			'field': 'identifier',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Retrieve coverages for a patient',
			'type': 'reference',
			'field': 'beneficiary',
			'target': ['Patient'],
		}),
		'payor': new SearchParameterDefinition({
			'description': 'The identity of the insurer or party paying for services',
			'type': 'reference',
			'field': 'payor',
			'target': ['Organization', 'Patient', 'RelatedPerson'],
		}),
		'policy-holder': new SearchParameterDefinition({
			'description': 'Reference to the policyholder',
			'type': 'reference',
			'field': 'policyHolder',
			'target': ['Organization', 'Patient', 'RelatedPerson'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'The status of the Coverage',
			'type': 'token',
			'field': 'status',
		}),
		'subscriber': new SearchParameterDefinition({
			'description': 'Reference to the subscriber',
			'type': 'reference',
			'field': 'subscriber',
			'target': ['Patient', 'RelatedPerson'],
		}),
		'type': new SearchParameterDefinition({
			'description': 'The kind of coverage (health plan, auto, Workers Compensation)',
			'type': 'token',
			'field': 'type',
		}),
	},
	'CoverageEligibilityRequest': {
		'created': new SearchParameterDefinition({
			'description': 'The creation date for the EOB',
			'type': 'date',
			'field': 'created',
		}),
		'enterer': new SearchParameterDefinition({
			'description': 'The party who is responsible for the request',
			'type': 'reference',
			'field': 'enterer',
			'target': ['Practitioner', 'PractitionerRole'],
		}),
		'facility': new SearchParameterDefinition({
			'description': 'Facility responsible for the goods and services',
			'type': 'reference',
			'field': 'facility',
			'target': ['Location'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'The business identifier of the Eligibility',
			'type': 'token',
			'field': 'identifier',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'The reference to the patient',
			'type': 'reference',
			'field': 'patient',
			'target': ['Patient'],
		}),
		'provider': new SearchParameterDefinition({
			'description': 'The reference to the provider',
			'type': 'reference',
			'field': 'provider',
			'target': ['Practitioner', 'Organization', 'PractitionerRole'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'The status of the EligibilityRequest',
			'type': 'token',
			'field': 'status',
		}),
	},
	'CoverageEligibilityResponse': {
		'created': new SearchParameterDefinition({
			'description': 'The creation date',
			'type': 'date',
			'field': 'created',
		}),
		'disposition': new SearchParameterDefinition({
			'description': 'The contents of the disposition message',
			'type': 'string',
			'field': 'disposition',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'The business identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'insurer': new SearchParameterDefinition({
			'description': 'The organization which generated this resource',
			'type': 'reference',
			'field': 'insurer',
			'target': ['Organization'],
		}),
		'outcome': new SearchParameterDefinition({
			'description': 'The processing outcome',
			'type': 'token',
			'field': 'outcome',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'The reference to the patient',
			'type': 'reference',
			'field': 'patient',
			'target': ['Patient'],
		}),
		'request': new SearchParameterDefinition({
			'description': 'The EligibilityRequest reference',
			'type': 'reference',
			'field': 'request',
			'target': ['CoverageEligibilityRequest'],
		}),
		'requestor': new SearchParameterDefinition({
			'description': 'The EligibilityRequest provider',
			'type': 'reference',
			'field': 'requestor',
			'target': ['Practitioner', 'Organization', 'PractitionerRole'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'The EligibilityRequest status',
			'type': 'token',
			'field': 'status',
		}),
	},
	'DetectedIssue': {
		'author': new SearchParameterDefinition({
			'description': 'The provider or device that identified the issue',
			'type': 'reference',
			'field': 'author',
			'target': ['Practitioner', 'Device', 'PractitionerRole'],
		}),
		'code': new SearchParameterDefinition({
			'description': 'Issue Category, e.g. drug-drug, duplicate therapy, etc.',
			'type': 'token',
			'field': 'code',
		}),
		'identified': new SearchParameterDefinition({
			'description': 'When identified',
			'type': 'date',
			'fields': ['identifiedDateTime', 'identifiedPeriod'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'implicated': new SearchParameterDefinition({
			'description': 'Problem resource',
			'type': 'reference',
			'field': 'implicated',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'patient',
			'target': ['Patient', 'Group'],
		}),
	},
	'Device': {
		'device-name': new SearchParameterDefinition({
			'description': 'A server defined search that may match any of the string fields in Device.deviceName or Device.type.',
			'type': 'string',
			'field': 'deviceName',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Instance id from manufacturer, owner, and others',
			'type': 'token',
			'field': 'identifier',
		}),
		'location': new SearchParameterDefinition({
			'description': 'A location, where the resource is found',
			'type': 'reference',
			'field': 'location',
			'target': ['Location'],
		}),
		'manufacturer': new SearchParameterDefinition({
			'description': 'The manufacturer of the device',
			'type': 'string',
			'field': 'manufacturer',
		}),
		'model': new SearchParameterDefinition({
			'description': 'The model of the device',
			'type': 'string',
			'field': 'modelNumber',
		}),
		'organization': new SearchParameterDefinition({
			'description': 'The organization responsible for the device',
			'type': 'reference',
			'field': 'owner',
			'target': ['Organization'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Patient information, if the resource is affixed to a person',
			'type': 'reference',
			'field': 'patient',
			'target': ['Patient'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'active | inactive | entered-in-error | unknown',
			'type': 'token',
			'field': 'status',
		}),
		'type': new SearchParameterDefinition({
			'description': 'The type of the device',
			'type': 'token',
			'field': 'type',
		}),
		'udi-carrier': new SearchParameterDefinition({
			'description': 'UDI Barcode (RFID or other technology) string in *HRF* format.',
			'type': 'string',
			'field': 'udiCarrier',
		}),
		'udi-di': new SearchParameterDefinition({
			'description': 'The udi Device Identifier (DI)',
			'type': 'string',
			'field': 'udiCarrier',
		}),
		'url': new SearchParameterDefinition({
			'description': 'Network address to contact device',
			'type': 'uri',
			'field': 'url',
		}),
	},
	'DeviceDefinition': {
		'identifier': new SearchParameterDefinition({
			'description': 'The identifier of the component',
			'type': 'token',
			'field': 'identifier',
		}),
		'parent': new SearchParameterDefinition({
			'description': 'The parent DeviceDefinition resource',
			'type': 'reference',
			'field': 'parentDevice',
			'target': ['DeviceDefinition'],
		}),
		'type': new SearchParameterDefinition({
			'description': 'The device component type',
			'type': 'token',
			'field': 'type',
		}),
	},
	'DeviceMetric': {
		'category': new SearchParameterDefinition({
			'description': 'The category of the metric',
			'type': 'token',
			'field': 'category',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'The identifier of the metric',
			'type': 'token',
			'field': 'identifier',
		}),
		'parent': new SearchParameterDefinition({
			'description': 'The parent DeviceMetric resource',
			'type': 'reference',
			'field': 'parent',
			'target': ['Device'],
		}),
		'source': new SearchParameterDefinition({
			'description': 'The device resource',
			'type': 'reference',
			'field': 'source',
			'target': ['Device'],
		}),
		'type': new SearchParameterDefinition({
			'description': 'The component type',
			'type': 'token',
			'field': 'type',
		}),
	},
	'DeviceRequest': {
		'authored-on': new SearchParameterDefinition({
			'description': 'When the request transitioned to being actionable',
			'type': 'date',
			'field': 'authoredOn',
		}),
		'based-on': new SearchParameterDefinition({
			'description': 'Plan/proposal/order fulfilled by this request',
			'type': 'reference',
			'field': 'basedOn',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'code': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered',
			'type': 'token',
			'field': 'codeCodeableConcept',
		}),
		'device': new SearchParameterDefinition({
			'description': 'Reference to resource that is being requested/ordered',
			'type': 'reference',
			'field': 'codeReference',
			'target': ['Device'],
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter', 'EpisodeOfCare'],
		}),
		'event-date': new SearchParameterDefinition({
			'description': 'When service should occur',
			'type': 'date',
			'fields': ['occurrenceDateTime', 'occurrencePeriod'],
		}),
		'group-identifier': new SearchParameterDefinition({
			'description': 'Composite request this is part of',
			'type': 'token',
			'field': 'groupIdentifier',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'instantiates-canonical': new SearchParameterDefinition({
			'description': 'Instantiates FHIR protocol or definition',
			'type': 'reference',
			'field': 'instantiatesCanonical',
			'target': ['PlanDefinition', 'ActivityDefinition'],
		}),
		'instantiates-uri': new SearchParameterDefinition({
			'description': 'Instantiates external protocol or definition',
			'type': 'uri',
			'field': 'instantiatesUri',
		}),
		'insurance': new SearchParameterDefinition({
			'description': 'Associated insurance coverage',
			'type': 'reference',
			'field': 'insurance',
			'target': ['ClaimResponse', 'Coverage'],
		}),
		'intent': new SearchParameterDefinition({
			'description': 'proposal | plan | original-order |reflex-order',
			'type': 'token',
			'field': 'intent',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'performer': new SearchParameterDefinition({
			'description': 'Desired performer for service',
			'type': 'reference',
			'field': 'performer',
			'target': ['Practitioner', 'Organization', 'CareTeam', 'Device', 'Patient', 'HealthcareService', 'PractitionerRole', 'RelatedPerson'],
		}),
		'prior-request': new SearchParameterDefinition({
			'description': 'Request takes the place of referenced completed or terminated requests',
			'type': 'reference',
			'field': 'priorRequest',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'requester': new SearchParameterDefinition({
			'description': 'Who/what is requesting service',
			'type': 'reference',
			'field': 'requester',
			'target': ['Practitioner', 'Organization', 'Device', 'PractitionerRole'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'entered-in-error | draft | active |suspended | completed',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'Individual the service is ordered for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Device', 'Patient', 'Location'],
		}),
	},
	'DeviceUseStatement': {
		'device': new SearchParameterDefinition({
			'description': 'Search by device',
			'type': 'reference',
			'field': 'device',
			'target': ['Device'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Search by identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'subject': new SearchParameterDefinition({
			'description': 'Search by subject',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Patient'],
		}),
	},
	'DiagnosticReport': {
		'based-on': new SearchParameterDefinition({
			'description': 'Reference to the service request.',
			'type': 'reference',
			'field': 'basedOn',
			'target': ['CarePlan', 'MedicationRequest', 'NutritionOrder', 'ServiceRequest', 'ImmunizationRecommendation'],
		}),
		'category': new SearchParameterDefinition({
			'description': 'Which diagnostic discipline/department created the report',
			'type': 'token',
			'field': 'category',
		}),
		'code': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered',
			'type': 'token',
			'field': 'code',
		}),
		'conclusion': new SearchParameterDefinition({
			'description': 'A coded conclusion (interpretation/impression) on the report',
			'type': 'token',
			'field': 'conclusionCode',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of cares period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made',
			'type': 'date',
			'fields': ['effectiveDateTime', 'effectivePeriod'],
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter', 'EpisodeOfCare'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'issued': new SearchParameterDefinition({
			'description': 'When the report was issued',
			'type': 'date',
			'field': 'issued',
		}),
		'media': new SearchParameterDefinition({
			'description': 'A reference to the image source.',
			'type': 'reference',
			'field': 'media.link',
			'target': ['Media'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'performer': new SearchParameterDefinition({
			'description': 'Who is responsible for the report',
			'type': 'reference',
			'field': 'performer',
			'target': ['Practitioner', 'Organization', 'CareTeam', 'PractitionerRole'],
		}),
		'result': new SearchParameterDefinition({
			'description': 'Link to an atomic result (observation resource)',
			'type': 'reference',
			'field': 'result',
			'target': ['Observation'],
		}),
		'results-interpreter': new SearchParameterDefinition({
			'description': 'Who was the source of the report',
			'type': 'reference',
			'field': 'resultsInterpreter',
			'target': ['Practitioner', 'Organization', 'CareTeam', 'PractitionerRole'],
		}),
		'specimen': new SearchParameterDefinition({
			'description': 'The specimen details',
			'type': 'reference',
			'field': 'specimen',
			'target': ['Specimen'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'The status of the report',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'The subject of the report',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Device', 'Patient', 'Location'],
		}),
	},
	'DocumentManifest': {
		'author': new SearchParameterDefinition({
			'description': 'Who and/or what authored the DocumentManifest',
			'type': 'reference',
			'field': 'author',
			'target': ['Practitioner', 'Organization', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'created': new SearchParameterDefinition({
			'description': 'When this document manifest created',
			'type': 'date',
			'field': 'created',
		}),
		'description': new SearchParameterDefinition({
			'description': 'Human-readable description (title)',
			'type': 'string',
			'field': 'description',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'fields': ['masterIdentifier', 'identifier'],
		}),
		'item': new SearchParameterDefinition({
			'description': 'Items in manifest',
			'type': 'reference',
			'field': 'content',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'recipient': new SearchParameterDefinition({
			'description': 'Intended to get notified about this set of documents',
			'type': 'reference',
			'field': 'recipient',
			'target': ['Practitioner', 'Organization', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'related-id': new SearchParameterDefinition({
			'description': 'Identifiers of things that are related',
			'type': 'token',
			'field': 'related.identifier',
		}),
		'related-ref': new SearchParameterDefinition({
			'description': 'Related Resource',
			'type': 'reference',
			'field': 'related.ref',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'source': new SearchParameterDefinition({
			'description': 'The source system/application/software',
			'type': 'uri',
			'field': 'source',
		}),
		'status': new SearchParameterDefinition({
			'description': 'current | superseded | entered-in-error',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'The subject of the set of documents',
			'type': 'reference',
			'field': 'subject',
			'target': ['Practitioner', 'Group', 'Device', 'Patient'],
		}),
		'type': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)* [Composition](composition.html): Kind of composition (LOINC if possible)* [DocumentManifest](documentmanifest.html): Kind of document set* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)* [Encounter](encounter.html): Specific type of encounter* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management',
			'type': 'token',
			'field': 'type',
		}),
	},
	'DocumentReference': {
		'authenticator': new SearchParameterDefinition({
			'description': 'Who/what authenticated the document',
			'type': 'reference',
			'field': 'authenticator',
			'target': ['Practitioner', 'Organization', 'PractitionerRole'],
		}),
		'author': new SearchParameterDefinition({
			'description': 'Who and/or what authored the document',
			'type': 'reference',
			'field': 'author',
			'target': ['Practitioner', 'Organization', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'category': new SearchParameterDefinition({
			'description': 'Categorization of document',
			'type': 'token',
			'field': 'category',
		}),
		'contenttype': new SearchParameterDefinition({
			'description': 'Mime type of the content, with charset etc.',
			'type': 'token',
			'field': 'content.attachment.contentType',
		}),
		'custodian': new SearchParameterDefinition({
			'description': 'Organization which maintains the document',
			'type': 'reference',
			'field': 'custodian',
			'target': ['Organization'],
		}),
		'date': new SearchParameterDefinition({
			'description': 'When this document reference was created',
			'type': 'date',
			'field': 'date',
		}),
		'description': new SearchParameterDefinition({
			'description': 'Human-readable description',
			'type': 'string',
			'field': 'description',
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier',
			'type': 'reference',
			'field': 'context.encounter',
			'target': ['Encounter', 'EpisodeOfCare'],
		}),
		'event': new SearchParameterDefinition({
			'description': 'Main clinical acts documented',
			'type': 'token',
			'field': 'context.event',
		}),
		'facility': new SearchParameterDefinition({
			'description': 'Kind of facility where patient was seen',
			'type': 'token',
			'field': 'context.facilityType',
		}),
		'format': new SearchParameterDefinition({
			'description': 'Format/content rules for the document',
			'type': 'token',
			'field': 'content.format',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'fields': ['masterIdentifier', 'identifier'],
		}),
		'language': new SearchParameterDefinition({
			'description': 'Human language of the content (BCP-47)',
			'type': 'token',
			'field': 'content.attachment.language',
		}),
		'location': new SearchParameterDefinition({
			'description': 'Uri where the data can be found',
			'type': 'uri',
			'field': 'content.attachment.url',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'period': new SearchParameterDefinition({
			'description': 'Time of service that is being documented',
			'type': 'date',
			'field': 'context.period',
		}),
		'related': new SearchParameterDefinition({
			'description': 'Related identifiers or resources',
			'type': 'reference',
			'field': 'context.related',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'relatesto': new SearchParameterDefinition({
			'description': 'Target of the relationship',
			'type': 'reference',
			'field': 'relatesTo.target',
			'target': ['DocumentReference'],
		}),
		'relation': new SearchParameterDefinition({
			'description': 'replaces | transforms | signs | appends',
			'type': 'token',
			'field': 'relatesTo.code',
		}),
		'security-label': new SearchParameterDefinition({
			'description': 'Document security-tags',
			'type': 'token',
			'field': 'securityLabel',
		}),
		'setting': new SearchParameterDefinition({
			'description': 'Additional details about where the content was created (e.g. clinical specialty)',
			'type': 'token',
			'field': 'context.practiceSetting',
		}),
		'status': new SearchParameterDefinition({
			'description': 'current | superseded | entered-in-error',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'Who/what is the subject of the document',
			'type': 'reference',
			'field': 'subject',
			'target': ['Practitioner', 'Group', 'Device', 'Patient'],
		}),
		'type': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)* [Composition](composition.html): Kind of composition (LOINC if possible)* [DocumentManifest](documentmanifest.html): Kind of document set* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)* [Encounter](encounter.html): Specific type of encounter* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management',
			'type': 'token',
			'field': 'type',
		}),
	},
	'EffectEvidenceSynthesis': {
		'context': new SearchParameterDefinition({
			'description': 'A use context assigned to the effect evidence synthesis',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'A quantity- or range-valued use context assigned to the effect evidence synthesis',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'A type of use context assigned to the effect evidence synthesis',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'The effect evidence synthesis publication date',
			'type': 'date',
			'field': 'date',
		}),
		'description': new SearchParameterDefinition({
			'description': 'The description of the effect evidence synthesis',
			'type': 'string',
			'field': 'description',
		}),
		'effective': new SearchParameterDefinition({
			'description': 'The time during which the effect evidence synthesis is intended to be in use',
			'type': 'date',
			'field': 'effectivePeriod',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'External identifier for the effect evidence synthesis',
			'type': 'token',
			'field': 'identifier',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Intended jurisdiction for the effect evidence synthesis',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Computationally friendly name of the effect evidence synthesis',
			'type': 'string',
			'field': 'name',
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Name of the publisher of the effect evidence synthesis',
			'type': 'string',
			'field': 'publisher',
		}),
		'status': new SearchParameterDefinition({
			'description': 'The current status of the effect evidence synthesis',
			'type': 'token',
			'field': 'status',
		}),
		'title': new SearchParameterDefinition({
			'description': 'The human-friendly name of the effect evidence synthesis',
			'type': 'string',
			'field': 'title',
		}),
		'url': new SearchParameterDefinition({
			'description': 'The uri that identifies the effect evidence synthesis',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'The business version of the effect evidence synthesis',
			'type': 'token',
			'field': 'version',
		}),
	},
	'Encounter': {
		'account': new SearchParameterDefinition({
			'description': 'The set of accounts that may be used for billing for this Encounter',
			'type': 'reference',
			'field': 'account',
			'target': ['Account'],
		}),
		'appointment': new SearchParameterDefinition({
			'description': 'The appointment that scheduled this encounter',
			'type': 'reference',
			'field': 'appointment',
			'target': ['Appointment'],
		}),
		'based-on': new SearchParameterDefinition({
			'description': 'The ServiceRequest that initiated this encounter',
			'type': 'reference',
			'field': 'basedOn',
			'target': ['ServiceRequest'],
		}),
		'class': new SearchParameterDefinition({
			'description': 'Classification of patient encounter',
			'type': 'token',
			'field': 'class',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of cares period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made',
			'type': 'date',
			'field': 'period',
		}),
		'diagnosis': new SearchParameterDefinition({
			'description': 'The diagnosis or procedure relevant to the encounter',
			'type': 'reference',
			'field': 'diagnosis.condition',
			'target': ['Condition', 'Procedure'],
		}),
		'episode-of-care': new SearchParameterDefinition({
			'description': 'Episode(s) of care that this encounter should be recorded against',
			'type': 'reference',
			'field': 'episodeOfCare',
			'target': ['EpisodeOfCare'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'length': new SearchParameterDefinition({
			'description': 'Length of encounter in days',
			'type': 'quantity',
			'field': 'length',
		}),
		'location': new SearchParameterDefinition({
			'description': 'Location the encounter takes place',
			'type': 'reference',
			'field': 'location.location',
			'target': ['Location'],
		}),
		'location-period': new SearchParameterDefinition({
			'description': 'Time period during which the patient was present at the location',
			'type': 'date',
			'field': 'location.period',
		}),
		'part-of': new SearchParameterDefinition({
			'description': 'Another Encounter this encounter is part of',
			'type': 'reference',
			'field': 'partOf',
			'target': ['Encounter'],
		}),
		'participant': new SearchParameterDefinition({
			'description': 'Persons involved in the encounter other than the patient',
			'type': 'reference',
			'field': 'participant.individual',
			'target': ['Practitioner', 'PractitionerRole', 'RelatedPerson'],
		}),
		'participant-type': new SearchParameterDefinition({
			'description': 'Role of participant in encounter',
			'type': 'token',
			'field': 'participant.type',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'practitioner': new SearchParameterDefinition({
			'description': 'Persons involved in the encounter other than the patient',
			'type': 'reference',
			'field': 'participant.individual',
			'target': ['Practitioner'],
		}),
		'reason-code': new SearchParameterDefinition({
			'description': 'Coded reason the encounter takes place',
			'type': 'token',
			'field': 'reasonCode',
		}),
		'reason-reference': new SearchParameterDefinition({
			'description': 'Reason the encounter takes place (reference)',
			'type': 'reference',
			'field': 'reasonReference',
			'target': ['Condition', 'Observation', 'Procedure', 'ImmunizationRecommendation'],
		}),
		'service-provider': new SearchParameterDefinition({
			'description': 'The organization (facility) responsible for this encounter',
			'type': 'reference',
			'field': 'serviceProvider',
			'target': ['Organization'],
		}),
		'special-arrangement': new SearchParameterDefinition({
			'description': 'Wheelchair, translator, stretcher, etc.',
			'type': 'token',
			'field': 'hospitalization.specialArrangement',
		}),
		'status': new SearchParameterDefinition({
			'description': 'planned | arrived | triaged | in-progress | onleave | finished | cancelled +',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'The patient or group present at the encounter',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Patient'],
		}),
		'type': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)* [Composition](composition.html): Kind of composition (LOINC if possible)* [DocumentManifest](documentmanifest.html): Kind of document set* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)* [Encounter](encounter.html): Specific type of encounter* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management',
			'type': 'token',
			'field': 'type',
		}),
	},
	'Endpoint': {
		'connection-type': new SearchParameterDefinition({
			'description': 'Protocol/Profile/Standard to be used with this endpoint connection',
			'type': 'token',
			'field': 'connectionType',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Identifies this endpoint across multiple systems',
			'type': 'token',
			'field': 'identifier',
		}),
		'name': new SearchParameterDefinition({
			'description': 'A name that this endpoint can be identified by',
			'type': 'string',
			'field': 'name',
		}),
		'organization': new SearchParameterDefinition({
			'description': 'The organization that is managing the endpoint',
			'type': 'reference',
			'field': 'managingOrganization',
			'target': ['Organization'],
		}),
		'payload-type': new SearchParameterDefinition({
			'description': 'The type of content that may be used at this endpoint (e.g. XDS Discharge summaries)',
			'type': 'token',
			'field': 'payloadType',
		}),
		'status': new SearchParameterDefinition({
			'description': 'The current status of the Endpoint (usually expected to be active)',
			'type': 'token',
			'field': 'status',
		}),
	},
	'EnrollmentRequest': {
		'identifier': new SearchParameterDefinition({
			'description': 'The business identifier of the Enrollment',
			'type': 'token',
			'field': 'identifier',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'The party to be enrolled',
			'type': 'reference',
			'field': 'candidate',
			'target': ['Patient'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'The status of the enrollment',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'The party to be enrolled',
			'type': 'reference',
			'field': 'candidate',
			'target': ['Patient'],
		}),
	},
	'EnrollmentResponse': {
		'identifier': new SearchParameterDefinition({
			'description': 'The business identifier of the EnrollmentResponse',
			'type': 'token',
			'field': 'identifier',
		}),
		'request': new SearchParameterDefinition({
			'description': 'The reference to the claim',
			'type': 'reference',
			'field': 'request',
			'target': ['EnrollmentRequest'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'The status of the enrollment response',
			'type': 'token',
			'field': 'status',
		}),
	},
	'EpisodeOfCare': {
		'care-manager': new SearchParameterDefinition({
			'description': 'Care manager/care coordinator for the patient',
			'type': 'reference',
			'field': 'careManager',
			'target': ['Practitioner'],
		}),
		'condition': new SearchParameterDefinition({
			'description': 'Conditions/problems/diagnoses this episode of care is for',
			'type': 'reference',
			'field': 'diagnosis.condition',
			'target': ['Condition'],
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of cares period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made',
			'type': 'date',
			'field': 'period',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'incoming-referral': new SearchParameterDefinition({
			'description': 'Incoming Referral Request',
			'type': 'reference',
			'field': 'referralRequest',
			'target': ['ServiceRequest'],
		}),
		'organization': new SearchParameterDefinition({
			'description': 'The organization that has assumed the specific responsibilities of this EpisodeOfCare',
			'type': 'reference',
			'field': 'managingOrganization',
			'target': ['Organization'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'patient',
			'target': ['Patient', 'Group'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'The current status of the Episode of Care as provided (does not check the status history collection)',
			'type': 'token',
			'field': 'status',
		}),
		'type': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)* [Composition](composition.html): Kind of composition (LOINC if possible)* [DocumentManifest](documentmanifest.html): Kind of document set* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)* [Encounter](encounter.html): Specific type of encounter* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management',
			'type': 'token',
			'field': 'type',
		}),
	},
	'EventDefinition': {
		'composed-of': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'composed-of\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'context': new SearchParameterDefinition({
			'description': 'A use context assigned to the event definition',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'A quantity- or range-valued use context assigned to the event definition',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'A type of use context assigned to the event definition',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'The event definition publication date',
			'type': 'date',
			'field': 'date',
		}),
		'depends-on': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'depends-on\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'derived-from': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'derived-from\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'description': new SearchParameterDefinition({
			'description': 'The description of the event definition',
			'type': 'string',
			'field': 'description',
		}),
		'effective': new SearchParameterDefinition({
			'description': 'The time during which the event definition is intended to be in use',
			'type': 'date',
			'field': 'effectivePeriod',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'External identifier for the event definition',
			'type': 'token',
			'field': 'identifier',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Intended jurisdiction for the event definition',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Computationally friendly name of the event definition',
			'type': 'string',
			'field': 'name',
		}),
		'predecessor': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'predecessor\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Name of the publisher of the event definition',
			'type': 'string',
			'field': 'publisher',
		}),
		'status': new SearchParameterDefinition({
			'description': 'The current status of the event definition',
			'type': 'token',
			'field': 'status',
		}),
		'successor': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'successor\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'title': new SearchParameterDefinition({
			'description': 'The human-friendly name of the event definition',
			'type': 'string',
			'field': 'title',
		}),
		'topic': new SearchParameterDefinition({
			'description': 'Topics associated with the module',
			'type': 'token',
			'field': 'topic',
		}),
		'url': new SearchParameterDefinition({
			'description': 'The uri that identifies the event definition',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'The business version of the event definition',
			'type': 'token',
			'field': 'version',
		}),
	},
	'Evidence': {
		'composed-of': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'composed-of\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'context': new SearchParameterDefinition({
			'description': 'A use context assigned to the evidence',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'A quantity- or range-valued use context assigned to the evidence',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'A type of use context assigned to the evidence',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'The evidence publication date',
			'type': 'date',
			'field': 'date',
		}),
		'depends-on': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'depends-on\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'derived-from': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'derived-from\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'description': new SearchParameterDefinition({
			'description': 'The description of the evidence',
			'type': 'string',
			'field': 'description',
		}),
		'effective': new SearchParameterDefinition({
			'description': 'The time during which the evidence is intended to be in use',
			'type': 'date',
			'field': 'effectivePeriod',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'External identifier for the evidence',
			'type': 'token',
			'field': 'identifier',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Intended jurisdiction for the evidence',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Computationally friendly name of the evidence',
			'type': 'string',
			'field': 'name',
		}),
		'predecessor': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'predecessor\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Name of the publisher of the evidence',
			'type': 'string',
			'field': 'publisher',
		}),
		'status': new SearchParameterDefinition({
			'description': 'The current status of the evidence',
			'type': 'token',
			'field': 'status',
		}),
		'successor': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'successor\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'title': new SearchParameterDefinition({
			'description': 'The human-friendly name of the evidence',
			'type': 'string',
			'field': 'title',
		}),
		'topic': new SearchParameterDefinition({
			'description': 'Topics associated with the Evidence',
			'type': 'token',
			'field': 'topic',
		}),
		'url': new SearchParameterDefinition({
			'description': 'The uri that identifies the evidence',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'The business version of the evidence',
			'type': 'token',
			'field': 'version',
		}),
	},
	'EvidenceVariable': {
		'composed-of': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'composed-of\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'context': new SearchParameterDefinition({
			'description': 'A use context assigned to the evidence variable',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'A quantity- or range-valued use context assigned to the evidence variable',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'A type of use context assigned to the evidence variable',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'The evidence variable publication date',
			'type': 'date',
			'field': 'date',
		}),
		'depends-on': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'depends-on\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'derived-from': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'derived-from\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'description': new SearchParameterDefinition({
			'description': 'The description of the evidence variable',
			'type': 'string',
			'field': 'description',
		}),
		'effective': new SearchParameterDefinition({
			'description': 'The time during which the evidence variable is intended to be in use',
			'type': 'date',
			'field': 'effectivePeriod',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'External identifier for the evidence variable',
			'type': 'token',
			'field': 'identifier',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Intended jurisdiction for the evidence variable',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Computationally friendly name of the evidence variable',
			'type': 'string',
			'field': 'name',
		}),
		'predecessor': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'predecessor\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Name of the publisher of the evidence variable',
			'type': 'string',
			'field': 'publisher',
		}),
		'status': new SearchParameterDefinition({
			'description': 'The current status of the evidence variable',
			'type': 'token',
			'field': 'status',
		}),
		'successor': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'successor\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'title': new SearchParameterDefinition({
			'description': 'The human-friendly name of the evidence variable',
			'type': 'string',
			'field': 'title',
		}),
		'topic': new SearchParameterDefinition({
			'description': 'Topics associated with the EvidenceVariable',
			'type': 'token',
			'field': 'topic',
		}),
		'url': new SearchParameterDefinition({
			'description': 'The uri that identifies the evidence variable',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'The business version of the evidence variable',
			'type': 'token',
			'field': 'version',
		}),
	},
	'ExampleScenario': {
		'context': new SearchParameterDefinition({
			'description': 'A use context assigned to the example scenario',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'A quantity- or range-valued use context assigned to the example scenario',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'A type of use context assigned to the example scenario',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'The example scenario publication date',
			'type': 'date',
			'field': 'date',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'External identifier for the example scenario',
			'type': 'token',
			'field': 'identifier',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Intended jurisdiction for the example scenario',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Computationally friendly name of the example scenario',
			'type': 'string',
			'field': 'name',
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Name of the publisher of the example scenario',
			'type': 'string',
			'field': 'publisher',
		}),
		'status': new SearchParameterDefinition({
			'description': 'The current status of the example scenario',
			'type': 'token',
			'field': 'status',
		}),
		'url': new SearchParameterDefinition({
			'description': 'The uri that identifies the example scenario',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'The business version of the example scenario',
			'type': 'token',
			'field': 'version',
		}),
	},
	'ExplanationOfBenefit': {
		'care-team': new SearchParameterDefinition({
			'description': 'Member of the CareTeam',
			'type': 'reference',
			'field': 'careTeam.provider',
			'target': ['Practitioner', 'Organization', 'PractitionerRole'],
		}),
		'claim': new SearchParameterDefinition({
			'description': 'The reference to the claim',
			'type': 'reference',
			'field': 'claim',
			'target': ['Claim'],
		}),
		'coverage': new SearchParameterDefinition({
			'description': 'The plan under which the claim was adjudicated',
			'type': 'reference',
			'field': 'insurance.coverage',
			'target': ['Coverage'],
		}),
		'created': new SearchParameterDefinition({
			'description': 'The creation date for the EOB',
			'type': 'date',
			'field': 'created',
		}),
		'detail-udi': new SearchParameterDefinition({
			'description': 'UDI associated with a line item detail product or service',
			'type': 'reference',
			'field': 'item.detail.udi',
			'target': ['Device'],
		}),
		'disposition': new SearchParameterDefinition({
			'description': 'The contents of the disposition message',
			'type': 'string',
			'field': 'disposition',
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Encounters associated with a billed line item',
			'type': 'reference',
			'field': 'item.encounter',
			'target': ['Encounter'],
		}),
		'enterer': new SearchParameterDefinition({
			'description': 'The party responsible for the entry of the Claim',
			'type': 'reference',
			'field': 'enterer',
			'target': ['Practitioner', 'PractitionerRole'],
		}),
		'facility': new SearchParameterDefinition({
			'description': 'Facility responsible for the goods and services',
			'type': 'reference',
			'field': 'facility',
			'target': ['Location'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'The business identifier of the Explanation of Benefit',
			'type': 'token',
			'field': 'identifier',
		}),
		'item-udi': new SearchParameterDefinition({
			'description': 'UDI associated with a line item product or service',
			'type': 'reference',
			'field': 'item.udi',
			'target': ['Device'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'The reference to the patient',
			'type': 'reference',
			'field': 'patient',
			'target': ['Patient'],
		}),
		'payee': new SearchParameterDefinition({
			'description': 'The party receiving any payment for the Claim',
			'type': 'reference',
			'field': 'payee.party',
			'target': ['Practitioner', 'Organization', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'procedure-udi': new SearchParameterDefinition({
			'description': 'UDI associated with a procedure',
			'type': 'reference',
			'field': 'procedure.udi',
			'target': ['Device'],
		}),
		'provider': new SearchParameterDefinition({
			'description': 'The reference to the provider',
			'type': 'reference',
			'field': 'provider',
			'target': ['Practitioner', 'Organization', 'PractitionerRole'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'Status of the instance',
			'type': 'token',
			'field': 'status',
		}),
		'subdetail-udi': new SearchParameterDefinition({
			'description': 'UDI associated with a line item detail subdetail product or service',
			'type': 'reference',
			'field': 'item.detail.subDetail.udi',
			'target': ['Device'],
		}),
	},
	'FamilyMemberHistory': {
		'code': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered',
			'type': 'token',
			'field': 'condition.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of cares period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made',
			'type': 'date',
			'field': 'date',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'instantiates-canonical': new SearchParameterDefinition({
			'description': 'Instantiates FHIR protocol or definition',
			'type': 'reference',
			'field': 'instantiatesCanonical',
			'target': ['Questionnaire', 'Measure', 'PlanDefinition', 'OperationDefinition', 'ActivityDefinition'],
		}),
		'instantiates-uri': new SearchParameterDefinition({
			'description': 'Instantiates external protocol or definition',
			'type': 'uri',
			'field': 'instantiatesUri',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'patient',
			'target': ['Patient', 'Group'],
		}),
		'relationship': new SearchParameterDefinition({
			'description': 'A search by a relationship type',
			'type': 'token',
			'field': 'relationship',
		}),
		'sex': new SearchParameterDefinition({
			'description': 'A search by a sex code of a family member',
			'type': 'token',
			'field': 'sex',
		}),
		'status': new SearchParameterDefinition({
			'description': 'partial | completed | entered-in-error | health-unknown',
			'type': 'token',
			'field': 'status',
		}),
	},
	'Flag': {
		'author': new SearchParameterDefinition({
			'description': 'Flag creator',
			'type': 'reference',
			'field': 'author',
			'target': ['Practitioner', 'Organization', 'Device', 'Patient', 'PractitionerRole'],
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of cares period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made',
			'type': 'date',
			'field': 'period',
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter', 'EpisodeOfCare'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Business identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'subject': new SearchParameterDefinition({
			'description': 'The identity of a subject to list flags for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Practitioner', 'Group', 'Organization', 'Medication', 'Patient', 'PlanDefinition', 'Procedure', 'Location'],
		}),
	},
	'Goal': {
		'achievement-status': new SearchParameterDefinition({
			'description': 'in-progress | improving | worsening | no-change | achieved | sustaining | not-achieved | no-progress | not-attainable',
			'type': 'token',
			'field': 'achievementStatus',
		}),
		'category': new SearchParameterDefinition({
			'description': 'E.g. Treatment, dietary, behavioral, etc.',
			'type': 'token',
			'field': 'category',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'lifecycle-status': new SearchParameterDefinition({
			'description': 'proposed | planned | accepted | active | on-hold | completed | cancelled | entered-in-error | rejected',
			'type': 'token',
			'field': 'lifecycleStatus',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'start-date': new SearchParameterDefinition({
			'description': 'When goal pursuit begins',
			'type': 'date',
			'field': 'startDate',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'Who this goal is intended for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Organization', 'Patient'],
		}),
		'target-date': new SearchParameterDefinition({
			'description': 'Reach goal on or before',
			'type': 'date',
			'field': 'target.dueDate',
		}),
	},
	'GraphDefinition': {
		'context': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date',
			'type': 'date',
			'field': 'date',
		}),
		'description': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set',
			'type': 'string',
			'field': 'description',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set',
			'type': 'string',
			'field': 'name',
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set',
			'type': 'string',
			'field': 'publisher',
		}),
		'start': new SearchParameterDefinition({
			'description': 'Type of resource at which the graph starts',
			'type': 'token',
			'field': 'start',
		}),
		'status': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set',
			'type': 'token',
			'field': 'status',
		}),
		'url': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set',
			'type': 'token',
			'field': 'version',
		}),
	},
	'Group': {
		'actual': new SearchParameterDefinition({
			'description': 'Descriptive or actual',
			'type': 'token',
			'field': 'actual',
		}),
		'characteristic': new SearchParameterDefinition({
			'description': 'Kind of characteristic',
			'type': 'token',
			'field': 'characteristic.code',
		}),
		'code': new SearchParameterDefinition({
			'description': 'The kind of resources contained',
			'type': 'token',
			'field': 'code',
		}),
		'exclude': new SearchParameterDefinition({
			'description': 'Group includes or excludes',
			'type': 'token',
			'field': 'characteristic.exclude',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Unique id',
			'type': 'token',
			'field': 'identifier',
		}),
		'managing-entity': new SearchParameterDefinition({
			'description': 'Entity that is the custodian of the Groups definition',
			'type': 'reference',
			'field': 'managingEntity',
			'target': ['Practitioner', 'Organization', 'PractitionerRole', 'RelatedPerson'],
		}),
		'member': new SearchParameterDefinition({
			'description': 'Reference to the group member',
			'type': 'reference',
			'field': 'member.entity',
			'target': ['Practitioner', 'Group', 'Device', 'Medication', 'Patient', 'Substance', 'PractitionerRole'],
		}),
		'type': new SearchParameterDefinition({
			'description': 'The type of resources the group contains',
			'type': 'token',
			'field': 'type',
		}),
		'value': new SearchParameterDefinition({
			'description': 'Value held by characteristic',
			'type': 'token',
			'fields': ['characteristic.valueCodeableConcept', 'characteristic.valueBoolean', 'characteristic.valueQuantity', 'characteristic.valueRange', 'characteristic.valueReference'],
		}),
	},
	'GuidanceResponse': {
		'identifier': new SearchParameterDefinition({
			'description': 'The identifier of the guidance response',
			'type': 'token',
			'field': 'identifier',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'The identity of a patient to search for guidance response results',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient'],
		}),
		'request': new SearchParameterDefinition({
			'description': 'The identifier of the request associated with the response',
			'type': 'token',
			'field': 'requestIdentifier',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'The subject that the guidance response is about',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Patient'],
		}),
	},
	'HealthcareService': {
		'active': new SearchParameterDefinition({
			'description': 'The Healthcare Service is currently marked as active',
			'type': 'token',
			'field': 'active',
		}),
		'characteristic': new SearchParameterDefinition({
			'description': 'One of the HealthcareServices characteristics',
			'type': 'token',
			'field': 'characteristic',
		}),
		'coverage-area': new SearchParameterDefinition({
			'description': 'Location(s) service is intended for/available to',
			'type': 'reference',
			'field': 'coverageArea',
			'target': ['Location'],
		}),
		'endpoint': new SearchParameterDefinition({
			'description': 'Technical endpoints providing access to electronic services operated for the healthcare service',
			'type': 'reference',
			'field': 'endpoint',
			'target': ['Endpoint'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'External identifiers for this item',
			'type': 'token',
			'field': 'identifier',
		}),
		'location': new SearchParameterDefinition({
			'description': 'The location of the Healthcare Service',
			'type': 'reference',
			'field': 'location',
			'target': ['Location'],
		}),
		'name': new SearchParameterDefinition({
			'description': 'A portion of the Healthcare service name',
			'type': 'string',
			'field': 'name',
		}),
		'organization': new SearchParameterDefinition({
			'description': 'The organization that provides this Healthcare Service',
			'type': 'reference',
			'field': 'providedBy',
			'target': ['Organization'],
		}),
		'program': new SearchParameterDefinition({
			'description': 'One of the Programs supported by this HealthcareService',
			'type': 'token',
			'field': 'program',
		}),
		'service-category': new SearchParameterDefinition({
			'description': 'Service Category of the Healthcare Service',
			'type': 'token',
			'field': 'category',
		}),
		'service-type': new SearchParameterDefinition({
			'description': 'The type of service provided by this healthcare service',
			'type': 'token',
			'field': 'type',
		}),
		'specialty': new SearchParameterDefinition({
			'description': 'The specialty of the service provided by this healthcare service',
			'type': 'token',
			'field': 'specialty',
		}),
	},
	'ImagingStudy': {
		'basedon': new SearchParameterDefinition({
			'description': 'The order for the image',
			'type': 'reference',
			'field': 'basedOn',
			'target': ['Appointment', 'AppointmentResponse', 'CarePlan', 'Task', 'ServiceRequest'],
		}),
		'bodysite': new SearchParameterDefinition({
			'description': 'The body site studied',
			'type': 'token',
			'field': 'series.bodySite',
		}),
		'dicom-class': new SearchParameterDefinition({
			'description': 'The type of the instance',
			'type': 'token',
			'field': 'series.instance.sopClass',
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'The context of the study',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter'],
		}),
		'endpoint': new SearchParameterDefinition({
			'description': 'The endpoint for the study or series',
			'type': 'reference',
			'fields': ['endpoint', 'series.endpoint'],
			'target': ['Endpoint'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'instance': new SearchParameterDefinition({
			'description': 'SOP Instance UID for an instance',
			'type': 'token',
			'field': 'series.instance.uid',
		}),
		'interpreter': new SearchParameterDefinition({
			'description': 'Who interpreted the images',
			'type': 'reference',
			'field': 'interpreter',
			'target': ['Practitioner', 'PractitionerRole'],
		}),
		'modality': new SearchParameterDefinition({
			'description': 'The modality of the series',
			'type': 'token',
			'field': 'series.modality',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'performer': new SearchParameterDefinition({
			'description': 'The person who performed the study',
			'type': 'reference',
			'field': 'series.performer.actor',
			'target': ['Practitioner', 'Organization', 'CareTeam', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'reason': new SearchParameterDefinition({
			'description': 'The reason for the study',
			'type': 'token',
			'field': 'reasonCode',
		}),
		'referrer': new SearchParameterDefinition({
			'description': 'The referring physician',
			'type': 'reference',
			'field': 'referrer',
			'target': ['Practitioner', 'PractitionerRole'],
		}),
		'series': new SearchParameterDefinition({
			'description': 'DICOM Series Instance UID for a series',
			'type': 'token',
			'field': 'series.uid',
		}),
		'started': new SearchParameterDefinition({
			'description': 'When the study was started',
			'type': 'date',
			'field': 'started',
		}),
		'status': new SearchParameterDefinition({
			'description': 'The status of the study',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'Who the study is about',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Device', 'Patient'],
		}),
	},
	'Immunization': {
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of cares period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made',
			'type': 'date',
			'fields': ['occurrenceDateTime', 'occurrenceString'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'location': new SearchParameterDefinition({
			'description': 'The service delivery location or facility in which the vaccine was / was to be administered',
			'type': 'reference',
			'field': 'location',
			'target': ['Location'],
		}),
		'lot-number': new SearchParameterDefinition({
			'description': 'Vaccine Lot Number',
			'type': 'string',
			'field': 'lotNumber',
		}),
		'manufacturer': new SearchParameterDefinition({
			'description': 'Vaccine Manufacturer',
			'type': 'reference',
			'field': 'manufacturer',
			'target': ['Organization'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'patient',
			'target': ['Patient', 'Group'],
		}),
		'performer': new SearchParameterDefinition({
			'description': 'The practitioner or organization who played a role in the vaccination',
			'type': 'reference',
			'field': 'performer.actor',
			'target': ['Practitioner', 'Organization', 'PractitionerRole'],
		}),
		'reaction': new SearchParameterDefinition({
			'description': 'Additional information on reaction',
			'type': 'reference',
			'field': 'reaction.detail',
			'target': ['Observation'],
		}),
		'reaction-date': new SearchParameterDefinition({
			'description': 'When reaction started',
			'type': 'date',
			'field': 'reaction.date',
		}),
		'reason-code': new SearchParameterDefinition({
			'description': 'Reason why the vaccine was administered',
			'type': 'token',
			'field': 'reasonCode',
		}),
		'reason-reference': new SearchParameterDefinition({
			'description': 'Why immunization occurred',
			'type': 'reference',
			'field': 'reasonReference',
			'target': ['Condition', 'Observation', 'DiagnosticReport'],
		}),
		'series': new SearchParameterDefinition({
			'description': 'The series being followed by the provider',
			'type': 'string',
			'field': 'protocolApplied.series',
		}),
		'status': new SearchParameterDefinition({
			'description': 'Immunization event status',
			'type': 'token',
			'field': 'status',
		}),
		'status-reason': new SearchParameterDefinition({
			'description': 'Reason why the vaccine was not administered',
			'type': 'token',
			'field': 'statusReason',
		}),
		'target-disease': new SearchParameterDefinition({
			'description': 'The target disease the dose is being administered against',
			'type': 'token',
			'field': 'protocolApplied.targetDisease',
		}),
		'vaccine-code': new SearchParameterDefinition({
			'description': 'Vaccine Product Administered',
			'type': 'token',
			'field': 'vaccineCode',
		}),
	},
	'ImmunizationEvaluation': {
		'date': new SearchParameterDefinition({
			'description': 'Date the evaluation was generated',
			'type': 'date',
			'field': 'date',
		}),
		'dose-status': new SearchParameterDefinition({
			'description': 'The status of the dose relative to published recommendations',
			'type': 'token',
			'field': 'doseStatus',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'ID of the evaluation',
			'type': 'token',
			'field': 'identifier',
		}),
		'immunization-event': new SearchParameterDefinition({
			'description': 'The vaccine administration event being evaluated',
			'type': 'reference',
			'field': 'immunizationEvent',
			'target': ['Immunization'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'The patient being evaluated',
			'type': 'reference',
			'field': 'patient',
			'target': ['Patient'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'Immunization evaluation status',
			'type': 'token',
			'field': 'status',
		}),
		'target-disease': new SearchParameterDefinition({
			'description': 'The vaccine preventable disease being evaluated against',
			'type': 'token',
			'field': 'targetDisease',
		}),
	},
	'ImmunizationRecommendation': {
		'date': new SearchParameterDefinition({
			'description': 'Date recommendation(s) created',
			'type': 'date',
			'field': 'date',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Business identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'information': new SearchParameterDefinition({
			'description': 'Patient observations supporting recommendation',
			'type': 'reference',
			'field': 'recommendation.supportingPatientInformation',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Who this profile is for',
			'type': 'reference',
			'field': 'patient',
			'target': ['Patient'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'Vaccine recommendation status',
			'type': 'token',
			'field': 'recommendation.forecastStatus',
		}),
		'support': new SearchParameterDefinition({
			'description': 'Past immunizations supporting recommendation',
			'type': 'reference',
			'field': 'recommendation.supportingImmunization',
			'target': ['Immunization', 'ImmunizationEvaluation'],
		}),
		'target-disease': new SearchParameterDefinition({
			'description': 'Disease to be immunized against',
			'type': 'token',
			'field': 'recommendation.targetDisease',
		}),
		'vaccine-type': new SearchParameterDefinition({
			'description': 'Vaccine  or vaccine group recommendation applies to',
			'type': 'token',
			'field': 'recommendation.vaccineCode',
		}),
	},
	'ImplementationGuide': {
		'context': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date',
			'type': 'date',
			'field': 'date',
		}),
		'depends-on': new SearchParameterDefinition({
			'description': 'Identity of the IG that this depends on',
			'type': 'reference',
			'field': 'dependsOn.uri',
			'target': ['ImplementationGuide'],
		}),
		'description': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set',
			'type': 'string',
			'field': 'description',
		}),
		'experimental': new SearchParameterDefinition({
			'description': 'For testing purposes, not real usage',
			'type': 'token',
			'field': 'experimental',
		}),
		'global': new SearchParameterDefinition({
			'description': 'Profile that all resources must conform to',
			'type': 'reference',
			'field': 'global.profile',
			'target': ['StructureDefinition'],
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set',
			'type': 'string',
			'field': 'name',
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set',
			'type': 'string',
			'field': 'publisher',
		}),
		'resource': new SearchParameterDefinition({
			'description': 'Location of the resource',
			'type': 'reference',
			'field': 'definition.resource.reference',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set',
			'type': 'token',
			'field': 'status',
		}),
		'title': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement* [CodeSystem](codesystem.html): The human-friendly name of the code system* [ConceptMap](conceptmap.html): The human-friendly name of the concept map* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition* [StructureMap](structuremap.html): The human-friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities* [ValueSet](valueset.html): The human-friendly name of the value set',
			'type': 'string',
			'field': 'title',
		}),
		'url': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set',
			'type': 'token',
			'field': 'version',
		}),
	},
	'InsurancePlan': {
		'address': new SearchParameterDefinition({
			'description': 'A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text',
			'type': 'string',
			'field': 'contact.address',
		}),
		'address-city': new SearchParameterDefinition({
			'description': 'A city specified in an address',
			'type': 'string',
			'field': 'contact.address.city',
		}),
		'address-country': new SearchParameterDefinition({
			'description': 'A country specified in an address',
			'type': 'string',
			'field': 'contact.address.country',
		}),
		'address-postalcode': new SearchParameterDefinition({
			'description': 'A postal code specified in an address',
			'type': 'string',
			'field': 'contact.address.postalCode',
		}),
		'address-state': new SearchParameterDefinition({
			'description': 'A state specified in an address',
			'type': 'string',
			'field': 'contact.address.state',
		}),
		'address-use': new SearchParameterDefinition({
			'description': 'A use code specified in an address',
			'type': 'token',
			'field': 'contact.address.use',
		}),
		'administered-by': new SearchParameterDefinition({
			'description': 'Product administrator',
			'type': 'reference',
			'field': 'administeredBy',
			'target': ['Organization'],
		}),
		'endpoint': new SearchParameterDefinition({
			'description': 'Technical endpoint',
			'type': 'reference',
			'field': 'endpoint',
			'target': ['Endpoint'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Any identifier for the organization (not the accreditation issuers identifier)',
			'type': 'token',
			'field': 'identifier',
		}),
		'name': new SearchParameterDefinition({
			'description': 'A portion of the organizations name or alias',
			'type': 'string',
			'fields': ['name', 'alias'],
		}),
		'owned-by': new SearchParameterDefinition({
			'description': 'An organization of which this organization forms a part',
			'type': 'reference',
			'field': 'ownedBy',
			'target': ['Organization'],
		}),
		'phonetic': new SearchParameterDefinition({
			'description': 'A portion of the organizations name using some kind of phonetic matching algorithm',
			'type': 'string',
			'field': 'name',
		}),
		'status': new SearchParameterDefinition({
			'description': 'Is the Organization record active',
			'type': 'token',
			'field': 'status',
		}),
		'type': new SearchParameterDefinition({
			'description': 'A code for the type of organization',
			'type': 'token',
			'field': 'type',
		}),
	},
	'Invoice': {
		'account': new SearchParameterDefinition({
			'description': 'Account that is being balanced',
			'type': 'reference',
			'field': 'account',
			'target': ['Account'],
		}),
		'date': new SearchParameterDefinition({
			'description': 'Invoice date / posting date',
			'type': 'date',
			'field': 'date',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Business Identifier for item',
			'type': 'token',
			'field': 'identifier',
		}),
		'issuer': new SearchParameterDefinition({
			'description': 'Issuing Organization of Invoice',
			'type': 'reference',
			'field': 'issuer',
			'target': ['Organization'],
		}),
		'participant': new SearchParameterDefinition({
			'description': 'Individual who was involved',
			'type': 'reference',
			'field': 'participant.actor',
			'target': ['Practitioner', 'Organization', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'participant-role': new SearchParameterDefinition({
			'description': 'Type of involvement in creation of this Invoice',
			'type': 'token',
			'field': 'participant.role',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Recipient(s) of goods and services',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient'],
		}),
		'recipient': new SearchParameterDefinition({
			'description': 'Recipient of this invoice',
			'type': 'reference',
			'field': 'recipient',
			'target': ['Organization', 'Patient', 'RelatedPerson'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'draft | issued | balanced | cancelled | entered-in-error',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'Recipient(s) of goods and services',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Patient'],
		}),
		'totalgross': new SearchParameterDefinition({
			'description': 'Gross total of this Invoice',
			'type': 'quantity',
			'field': 'totalGross',
		}),
		'totalnet': new SearchParameterDefinition({
			'description': 'Net total of this Invoice',
			'type': 'quantity',
			'field': 'totalNet',
		}),
		'type': new SearchParameterDefinition({
			'description': 'Type of Invoice',
			'type': 'token',
			'field': 'type',
		}),
	},
	'Library': {
		'composed-of': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'composed-of\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'content-type': new SearchParameterDefinition({
			'description': 'The type of content in the library (e.g. text/cql)',
			'type': 'token',
			'field': 'content.contentType',
		}),
		'context': new SearchParameterDefinition({
			'description': 'A use context assigned to the library',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'A quantity- or range-valued use context assigned to the library',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'A type of use context assigned to the library',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'The library publication date',
			'type': 'date',
			'field': 'date',
		}),
		'depends-on': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'depends-on\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'derived-from': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'derived-from\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'description': new SearchParameterDefinition({
			'description': 'The description of the library',
			'type': 'string',
			'field': 'description',
		}),
		'effective': new SearchParameterDefinition({
			'description': 'The time during which the library is intended to be in use',
			'type': 'date',
			'field': 'effectivePeriod',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'External identifier for the library',
			'type': 'token',
			'field': 'identifier',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Intended jurisdiction for the library',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Computationally friendly name of the library',
			'type': 'string',
			'field': 'name',
		}),
		'predecessor': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'predecessor\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Name of the publisher of the library',
			'type': 'string',
			'field': 'publisher',
		}),
		'status': new SearchParameterDefinition({
			'description': 'The current status of the library',
			'type': 'token',
			'field': 'status',
		}),
		'successor': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'successor\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'title': new SearchParameterDefinition({
			'description': 'The human-friendly name of the library',
			'type': 'string',
			'field': 'title',
		}),
		'topic': new SearchParameterDefinition({
			'description': 'Topics associated with the module',
			'type': 'token',
			'field': 'topic',
		}),
		'type': new SearchParameterDefinition({
			'description': 'The type of the library (e.g. logic-library, model-definition, asset-collection, module-definition)',
			'type': 'token',
			'field': 'type',
		}),
		'url': new SearchParameterDefinition({
			'description': 'The uri that identifies the library',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'The business version of the library',
			'type': 'token',
			'field': 'version',
		}),
	},
	'Linkage': {
		'author': new SearchParameterDefinition({
			'description': 'Author of the Linkage',
			'type': 'reference',
			'field': 'author',
			'target': ['Practitioner', 'Organization', 'PractitionerRole'],
		}),
		'item': new SearchParameterDefinition({
			'description': 'Matches on any item in the Linkage',
			'type': 'reference',
			'field': 'item.resource',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'source': new SearchParameterDefinition({
			'description': 'Matches on any item in the Linkage with a type of source',
			'type': 'reference',
			'field': 'item.resource',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
	},
	'List': {
		'code': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered',
			'type': 'token',
			'field': 'code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of cares period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made',
			'type': 'date',
			'field': 'date',
		}),
		'empty-reason': new SearchParameterDefinition({
			'description': 'Why list is empty',
			'type': 'token',
			'field': 'emptyReason',
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter', 'EpisodeOfCare'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'item': new SearchParameterDefinition({
			'description': 'Actual entry',
			'type': 'reference',
			'field': 'entry.item',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'notes': new SearchParameterDefinition({
			'description': 'The annotation  - text content (as markdown)',
			'type': 'string',
			'field': 'note.text',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'source': new SearchParameterDefinition({
			'description': 'Who and/or what defined the list contents (aka Author)',
			'type': 'reference',
			'field': 'source',
			'target': ['Practitioner', 'Device', 'Patient', 'PractitionerRole'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'current | retired | entered-in-error',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'If all resources have the same subject',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Device', 'Patient', 'Location'],
		}),
		'title': new SearchParameterDefinition({
			'description': 'Descriptive name for the list',
			'type': 'string',
			'field': 'title',
		}),
	},
	'Location': {
		'address': new SearchParameterDefinition({
			'description': 'A (part of the) address of the location',
			'type': 'string',
			'field': 'address',
		}),
		'address-city': new SearchParameterDefinition({
			'description': 'A city specified in an address',
			'type': 'string',
			'field': 'address.city',
		}),
		'address-country': new SearchParameterDefinition({
			'description': 'A country specified in an address',
			'type': 'string',
			'field': 'address.country',
		}),
		'address-postalcode': new SearchParameterDefinition({
			'description': 'A postal code specified in an address',
			'type': 'string',
			'field': 'address.postalCode',
		}),
		'address-state': new SearchParameterDefinition({
			'description': 'A state specified in an address',
			'type': 'string',
			'field': 'address.state',
		}),
		'address-use': new SearchParameterDefinition({
			'description': 'A use code specified in an address',
			'type': 'token',
			'field': 'address.use',
		}),
		'endpoint': new SearchParameterDefinition({
			'description': 'Technical endpoints providing access to services operated for the location',
			'type': 'reference',
			'field': 'endpoint',
			'target': ['Endpoint'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'An identifier for the location',
			'type': 'token',
			'field': 'identifier',
		}),
		'name': new SearchParameterDefinition({
			'description': 'A portion of the locations name or alias',
			'type': 'string',
			'fields': ['name', 'alias'],
		}),
		'near': new SearchParameterDefinition({
			'description': 'Search for locations where the location.position is near to, or within a specified distance of, the provided coordinates expressed as [latitude]|[longitude]|[distance]|[units] (using the WGS84 datum, see notes).If the units are omitted, then kms should be assumed. If the distance is omitted, then the server can use its own discretion as to what distances should be considered near (and units are irrelevant)Servers may search using various techniques that might have differing accuracies, depending on implementation efficiency.Requires the near-distance parameter to be provided also',
			'type': 'special',
			'field': 'position',
		}),
		'operational-status': new SearchParameterDefinition({
			'description': 'Searches for locations (typically bed/room) that have an operational status (e.g. contaminated, housekeeping)',
			'type': 'token',
			'field': 'operationalStatus',
		}),
		'organization': new SearchParameterDefinition({
			'description': 'Searches for locations that are managed by the provided organization',
			'type': 'reference',
			'field': 'managingOrganization',
			'target': ['Organization'],
		}),
		'partof': new SearchParameterDefinition({
			'description': 'A location of which this location is a part',
			'type': 'reference',
			'field': 'partOf',
			'target': ['Location'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'Searches for locations with a specific kind of status',
			'type': 'token',
			'field': 'status',
		}),
		'type': new SearchParameterDefinition({
			'description': 'A code for the type of location',
			'type': 'token',
			'field': 'type',
		}),
	},
	'Measure': {
		'composed-of': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'composed-of\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'context': new SearchParameterDefinition({
			'description': 'A use context assigned to the measure',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'A quantity- or range-valued use context assigned to the measure',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'A type of use context assigned to the measure',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'The measure publication date',
			'type': 'date',
			'field': 'date',
		}),
		'depends-on': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'fields': ['relatedArtifact.resource', 'library'],
			'fieldFilters': ['[type/@value=\'depends-on\']'],
			'target': ['Library', 'Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'derived-from': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'derived-from\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'description': new SearchParameterDefinition({
			'description': 'The description of the measure',
			'type': 'string',
			'field': 'description',
		}),
		'effective': new SearchParameterDefinition({
			'description': 'The time during which the measure is intended to be in use',
			'type': 'date',
			'field': 'effectivePeriod',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'External identifier for the measure',
			'type': 'token',
			'field': 'identifier',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Intended jurisdiction for the measure',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Computationally friendly name of the measure',
			'type': 'string',
			'field': 'name',
		}),
		'predecessor': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'predecessor\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Name of the publisher of the measure',
			'type': 'string',
			'field': 'publisher',
		}),
		'status': new SearchParameterDefinition({
			'description': 'The current status of the measure',
			'type': 'token',
			'field': 'status',
		}),
		'successor': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'successor\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'title': new SearchParameterDefinition({
			'description': 'The human-friendly name of the measure',
			'type': 'string',
			'field': 'title',
		}),
		'topic': new SearchParameterDefinition({
			'description': 'Topics associated with the measure',
			'type': 'token',
			'field': 'topic',
		}),
		'url': new SearchParameterDefinition({
			'description': 'The uri that identifies the measure',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'The business version of the measure',
			'type': 'token',
			'field': 'version',
		}),
	},
	'MeasureReport': {
		'date': new SearchParameterDefinition({
			'description': 'The date of the measure report',
			'type': 'date',
			'field': 'date',
		}),
		'evaluated-resource': new SearchParameterDefinition({
			'description': 'An evaluated resource referenced by the measure report',
			'type': 'reference',
			'field': 'evaluatedResource',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'External identifier of the measure report to be returned',
			'type': 'token',
			'field': 'identifier',
		}),
		'measure': new SearchParameterDefinition({
			'description': 'The measure to return measure report results for',
			'type': 'reference',
			'field': 'measure',
			'target': ['Measure'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'The identity of a patient to search for individual measure report results for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient'],
		}),
		'period': new SearchParameterDefinition({
			'description': 'The period of the measure report',
			'type': 'date',
			'field': 'period',
		}),
		'reporter': new SearchParameterDefinition({
			'description': 'The reporter to return measure report results for',
			'type': 'reference',
			'field': 'reporter',
			'target': ['Practitioner', 'Organization', 'PractitionerRole', 'Location'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'The status of the measure report',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'The identity of a subject to search for individual measure report results for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Practitioner', 'Group', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson', 'Location'],
		}),
	},
	'Media': {
		'based-on': new SearchParameterDefinition({
			'description': 'Procedure that caused this media to be created',
			'type': 'reference',
			'field': 'basedOn',
			'target': ['CarePlan', 'ServiceRequest'],
		}),
		'created': new SearchParameterDefinition({
			'description': 'When Media was collected',
			'type': 'date',
			'fields': ['createdDateTime', 'createdPeriod'],
		}),
		'device': new SearchParameterDefinition({
			'description': 'Observing Device',
			'type': 'reference',
			'field': 'device',
			'target': ['Device', 'DeviceMetric'],
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Encounter associated with media',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Identifier(s) for the image',
			'type': 'token',
			'field': 'identifier',
		}),
		'modality': new SearchParameterDefinition({
			'description': 'The type of acquisition equipment/process',
			'type': 'token',
			'field': 'modality',
		}),
		'operator': new SearchParameterDefinition({
			'description': 'The person who generated the image',
			'type': 'reference',
			'field': 'operator',
			'target': ['Practitioner', 'Organization', 'CareTeam', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Who/What this Media is a record of',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient'],
		}),
		'site': new SearchParameterDefinition({
			'description': 'Observed body part',
			'type': 'token',
			'field': 'bodySite',
		}),
		'status': new SearchParameterDefinition({
			'description': 'preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'Who/What this Media is a record of',
			'type': 'reference',
			'field': 'subject',
			'target': ['Practitioner', 'Group', 'Specimen', 'Device', 'Patient', 'PractitionerRole', 'Location'],
		}),
		'type': new SearchParameterDefinition({
			'description': 'Classification of media as image, video, or audio',
			'type': 'token',
			'field': 'type',
		}),
		'view': new SearchParameterDefinition({
			'description': 'Imaging view, e.g. Lateral or Antero-posterior',
			'type': 'token',
			'field': 'view',
		}),
	},
	'Medication': {
		'code': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered',
			'type': 'token',
			'field': 'code',
		}),
		'expiration-date': new SearchParameterDefinition({
			'description': 'Returns medications in a batch with this expiration date',
			'type': 'date',
			'field': 'batch.expirationDate',
		}),
		'form': new SearchParameterDefinition({
			'description': 'Returns medications for a specific dose form',
			'type': 'token',
			'field': 'form',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Returns medications with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'ingredient': new SearchParameterDefinition({
			'description': 'Returns medications for this ingredient reference',
			'type': 'reference',
			'field': 'ingredient.itemReference',
			'target': ['Medication', 'Substance'],
		}),
		'ingredient-code': new SearchParameterDefinition({
			'description': 'Returns medications for this ingredient code',
			'type': 'token',
			'field': 'ingredient.itemCodeableConcept',
		}),
		'lot-number': new SearchParameterDefinition({
			'description': 'Returns medications in a batch with this lot number',
			'type': 'token',
			'field': 'batch.lotNumber',
		}),
		'manufacturer': new SearchParameterDefinition({
			'description': 'Returns medications made or sold for this manufacturer',
			'type': 'reference',
			'field': 'manufacturer',
			'target': ['Organization'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'Returns medications for this status',
			'type': 'token',
			'field': 'status',
		}),
	},
	'MedicationAdministration': {
		'code': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered',
			'type': 'token',
			'field': 'medicationCodeableConcept',
		}),
		'context': new SearchParameterDefinition({
			'description': 'Return administrations that share this encounter or episode of care',
			'type': 'reference',
			'field': 'context',
			'target': ['EpisodeOfCare', 'Encounter'],
		}),
		'device': new SearchParameterDefinition({
			'description': 'Return administrations with this administration device identity',
			'type': 'reference',
			'field': 'device',
			'target': ['Device'],
		}),
		'effective-time': new SearchParameterDefinition({
			'description': 'Date administration happened (or did not happen)',
			'type': 'date',
			'fields': ['effectiveDateTime', 'effectivePeriod'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'medication': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [MedicationAdministration](medicationadministration.html): Return administrations of this medication resource* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine resource* [MedicationRequest](medicationrequest.html): Return prescriptions for this medication reference* [MedicationStatement](medicationstatement.html): Return statements of this medication reference',
			'type': 'reference',
			'field': 'medicationReference',
			'target': ['Medication'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'performer': new SearchParameterDefinition({
			'description': 'The identity of the individual who administered the medication',
			'type': 'reference',
			'field': 'performer.actor',
			'target': ['Practitioner', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'reason-given': new SearchParameterDefinition({
			'description': 'Reasons for administering the medication',
			'type': 'token',
			'field': 'reasonCode',
		}),
		'reason-not-given': new SearchParameterDefinition({
			'description': 'Reasons for not administering the medication',
			'type': 'token',
			'field': 'statusReason',
		}),
		'request': new SearchParameterDefinition({
			'description': 'The identity of a request to list administrations from',
			'type': 'reference',
			'field': 'request',
			'target': ['MedicationRequest'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [MedicationAdministration](medicationadministration.html): MedicationAdministration event status (for example one of active/paused/completed/nullified)* [MedicationDispense](medicationdispense.html): Returns dispenses with a specified dispense status* [MedicationRequest](medicationrequest.html): Status of the prescription* [MedicationStatement](medicationstatement.html): Return statements that match the given status',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'The identity of the individual or group to list administrations for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Patient'],
		}),
	},
	'MedicationDispense': {
		'code': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered',
			'type': 'token',
			'field': 'medicationCodeableConcept',
		}),
		'context': new SearchParameterDefinition({
			'description': 'Returns dispenses with a specific context (episode or episode of care)',
			'type': 'reference',
			'field': 'context',
			'target': ['EpisodeOfCare', 'Encounter'],
		}),
		'destination': new SearchParameterDefinition({
			'description': 'Returns dispenses that should be sent to a specific destination',
			'type': 'reference',
			'field': 'destination',
			'target': ['Location'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'medication': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [MedicationAdministration](medicationadministration.html): Return administrations of this medication resource* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine resource* [MedicationRequest](medicationrequest.html): Return prescriptions for this medication reference* [MedicationStatement](medicationstatement.html): Return statements of this medication reference',
			'type': 'reference',
			'field': 'medicationReference',
			'target': ['Medication'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'performer': new SearchParameterDefinition({
			'description': 'Returns dispenses performed by a specific individual',
			'type': 'reference',
			'field': 'performer.actor',
			'target': ['Practitioner', 'Organization', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'prescription': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [MedicationDispense](medicationdispense.html): The identity of a prescription to list dispenses from',
			'type': 'reference',
			'field': 'authorizingPrescription',
			'target': ['MedicationRequest'],
		}),
		'receiver': new SearchParameterDefinition({
			'description': 'The identity of a receiver to list dispenses for',
			'type': 'reference',
			'field': 'receiver',
			'target': ['Practitioner', 'Patient'],
		}),
		'responsibleparty': new SearchParameterDefinition({
			'description': 'Returns dispenses with the specified responsible party',
			'type': 'reference',
			'field': 'substitution.responsibleParty',
			'target': ['Practitioner', 'PractitionerRole'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [MedicationAdministration](medicationadministration.html): MedicationAdministration event status (for example one of active/paused/completed/nullified)* [MedicationDispense](medicationdispense.html): Returns dispenses with a specified dispense status* [MedicationRequest](medicationrequest.html): Status of the prescription* [MedicationStatement](medicationstatement.html): Return statements that match the given status',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'The identity of a patient for whom to list dispenses',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Patient'],
		}),
		'type': new SearchParameterDefinition({
			'description': 'Returns dispenses of a specific type',
			'type': 'token',
			'field': 'type',
		}),
		'whenhandedover': new SearchParameterDefinition({
			'description': 'Returns dispenses handed over on this date',
			'type': 'date',
			'field': 'whenHandedOver',
		}),
		'whenprepared': new SearchParameterDefinition({
			'description': 'Returns dispenses prepared on this date',
			'type': 'date',
			'field': 'whenPrepared',
		}),
	},
	'MedicationKnowledge': {
		'classification': new SearchParameterDefinition({
			'description': 'Specific category assigned to the medication',
			'type': 'token',
			'field': 'medicineClassification.classification',
		}),
		'classification-type': new SearchParameterDefinition({
			'description': 'The type of category for the medication (for example, therapeutic classification, therapeutic sub-classification)',
			'type': 'token',
			'field': 'medicineClassification.type',
		}),
		'code': new SearchParameterDefinition({
			'description': 'Code that identifies this medication',
			'type': 'token',
			'field': 'code',
		}),
		'doseform': new SearchParameterDefinition({
			'description': 'powder | tablets | capsule +',
			'type': 'token',
			'field': 'doseForm',
		}),
		'ingredient': new SearchParameterDefinition({
			'description': 'Medication(s) or substance(s) contained in the medication',
			'type': 'reference',
			'field': 'ingredient.itemReference',
			'target': ['Substance'],
		}),
		'ingredient-code': new SearchParameterDefinition({
			'description': 'Medication(s) or substance(s) contained in the medication',
			'type': 'token',
			'field': 'ingredient.itemCodeableConcept',
		}),
		'manufacturer': new SearchParameterDefinition({
			'description': 'Manufacturer of the item',
			'type': 'reference',
			'field': 'manufacturer',
			'target': ['Organization'],
		}),
		'monitoring-program-name': new SearchParameterDefinition({
			'description': 'Name of the reviewing program',
			'type': 'token',
			'field': 'monitoringProgram.name',
		}),
		'monitoring-program-type': new SearchParameterDefinition({
			'description': 'Type of program under which the medication is monitored',
			'type': 'token',
			'field': 'monitoringProgram.type',
		}),
		'monograph': new SearchParameterDefinition({
			'description': 'Associated documentation about the medication',
			'type': 'reference',
			'field': 'monograph.source',
			'target': ['Media', 'DocumentReference'],
		}),
		'monograph-type': new SearchParameterDefinition({
			'description': 'The category of medication document',
			'type': 'token',
			'field': 'monograph.type',
		}),
		'source-cost': new SearchParameterDefinition({
			'description': 'The source or owner for the price information',
			'type': 'token',
			'field': 'cost.source',
		}),
		'status': new SearchParameterDefinition({
			'description': 'active | inactive | entered-in-error',
			'type': 'token',
			'field': 'status',
		}),
	},
	'MedicationRequest': {
		'authoredon': new SearchParameterDefinition({
			'description': 'Return prescriptions written on this date',
			'type': 'date',
			'field': 'authoredOn',
		}),
		'category': new SearchParameterDefinition({
			'description': 'Returns prescriptions with different categories',
			'type': 'token',
			'field': 'category',
		}),
		'code': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered',
			'type': 'token',
			'field': 'medicationCodeableConcept',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [MedicationRequest](medicationrequest.html): Returns medication request to be administered on a specific date',
			'type': 'date',
			'field': 'dosageInstruction.timing.event',
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [MedicationRequest](medicationrequest.html): Return prescriptions with this encounter identifier',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'intended-dispenser': new SearchParameterDefinition({
			'description': 'Returns prescriptions intended to be dispensed by this Organization',
			'type': 'reference',
			'field': 'dispenseRequest.performer',
			'target': ['Organization'],
		}),
		'intended-performer': new SearchParameterDefinition({
			'description': 'Returns the intended performer of the administration of the medication request',
			'type': 'reference',
			'field': 'performer',
			'target': ['Practitioner', 'Organization', 'CareTeam', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'intended-performertype': new SearchParameterDefinition({
			'description': 'Returns requests for a specific type of performer',
			'type': 'token',
			'field': 'performerType',
		}),
		'intent': new SearchParameterDefinition({
			'description': 'Returns prescriptions with different intents',
			'type': 'token',
			'field': 'intent',
		}),
		'medication': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [MedicationAdministration](medicationadministration.html): Return administrations of this medication resource* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine resource* [MedicationRequest](medicationrequest.html): Return prescriptions for this medication reference* [MedicationStatement](medicationstatement.html): Return statements of this medication reference',
			'type': 'reference',
			'field': 'medicationReference',
			'target': ['Medication'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'priority': new SearchParameterDefinition({
			'description': 'Returns prescriptions with different priorities',
			'type': 'token',
			'field': 'priority',
		}),
		'requester': new SearchParameterDefinition({
			'description': 'Returns prescriptions prescribed by this prescriber',
			'type': 'reference',
			'field': 'requester',
			'target': ['Practitioner', 'Organization', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [MedicationAdministration](medicationadministration.html): MedicationAdministration event status (for example one of active/paused/completed/nullified)* [MedicationDispense](medicationdispense.html): Returns dispenses with a specified dispense status* [MedicationRequest](medicationrequest.html): Status of the prescription* [MedicationStatement](medicationstatement.html): Return statements that match the given status',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'The identity of a patient to list orders  for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Patient'],
		}),
	},
	'MedicationStatement': {
		'category': new SearchParameterDefinition({
			'description': 'Returns statements of this category of medicationstatement',
			'type': 'token',
			'field': 'category',
		}),
		'code': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered',
			'type': 'token',
			'field': 'medicationCodeableConcept',
		}),
		'context': new SearchParameterDefinition({
			'description': 'Returns statements for a specific context (episode or episode of Care).',
			'type': 'reference',
			'field': 'context',
			'target': ['EpisodeOfCare', 'Encounter'],
		}),
		'effective': new SearchParameterDefinition({
			'description': 'Date when patient was taking (or not taking) the medication',
			'type': 'date',
			'fields': ['effectiveDateTime', 'effectivePeriod'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'medication': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [MedicationAdministration](medicationadministration.html): Return administrations of this medication resource* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine resource* [MedicationRequest](medicationrequest.html): Return prescriptions for this medication reference* [MedicationStatement](medicationstatement.html): Return statements of this medication reference',
			'type': 'reference',
			'field': 'medicationReference',
			'target': ['Medication'],
		}),
		'part-of': new SearchParameterDefinition({
			'description': 'Returns statements that are part of another event.',
			'type': 'reference',
			'field': 'partOf',
			'target': ['MedicationDispense', 'Observation', 'MedicationAdministration', 'Procedure', 'MedicationStatement'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'source': new SearchParameterDefinition({
			'description': 'Who or where the information in the statement came from',
			'type': 'reference',
			'field': 'informationSource',
			'target': ['Practitioner', 'Organization', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [MedicationAdministration](medicationadministration.html): MedicationAdministration event status (for example one of active/paused/completed/nullified)* [MedicationDispense](medicationdispense.html): Returns dispenses with a specified dispense status* [MedicationRequest](medicationrequest.html): Status of the prescription* [MedicationStatement](medicationstatement.html): Return statements that match the given status',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'The identity of a patient, animal or group to list statements for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Patient'],
		}),
	},
	'MedicinalProduct': {
		'identifier': new SearchParameterDefinition({
			'description': 'Business identifier for this product. Could be an MPID',
			'type': 'token',
			'field': 'identifier',
		}),
		'name': new SearchParameterDefinition({
			'description': 'The full product name',
			'type': 'string',
			'field': 'name.productName',
		}),
		'name-language': new SearchParameterDefinition({
			'description': 'Language code for this name',
			'type': 'token',
			'field': 'name.countryLanguage.language',
		}),
	},
	'MedicinalProductAuthorization': {
		'country': new SearchParameterDefinition({
			'description': 'The country in which the marketing authorization has been granted',
			'type': 'token',
			'field': 'country',
		}),
		'holder': new SearchParameterDefinition({
			'description': 'Marketing Authorization Holder',
			'type': 'reference',
			'field': 'holder',
			'target': ['Organization'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Business identifier for the marketing authorization, as assigned by a regulator',
			'type': 'token',
			'field': 'identifier',
		}),
		'status': new SearchParameterDefinition({
			'description': 'The status of the marketing authorization',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'The medicinal product that is being authorized',
			'type': 'reference',
			'field': 'subject',
			'target': ['MedicinalProductPackaged', 'MedicinalProduct'],
		}),
	},
	'MedicinalProductContraindication': {
		'subject': new SearchParameterDefinition({
			'description': 'The medication for which this is an contraindication',
			'type': 'reference',
			'field': 'subject',
			'target': ['Medication', 'MedicinalProduct'],
		}),
	},
	'MedicinalProductIndication': {
		'subject': new SearchParameterDefinition({
			'description': 'The medication for which this is an indication',
			'type': 'reference',
			'field': 'subject',
			'target': ['Medication', 'MedicinalProduct'],
		}),
	},
	'MedicinalProductInteraction': {
		'subject': new SearchParameterDefinition({
			'description': 'The medication for which this is an interaction',
			'type': 'reference',
			'field': 'subject',
			'target': ['Medication', 'Substance', 'MedicinalProduct'],
		}),
	},
	'MedicinalProductPackaged': {
		'identifier': new SearchParameterDefinition({
			'description': 'Unique identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'The product with this is a pack for',
			'type': 'reference',
			'field': 'subject',
			'target': ['MedicinalProduct'],
		}),
	},
	'MedicinalProductPharmaceutical': {
		'identifier': new SearchParameterDefinition({
			'description': 'An identifier for the pharmaceutical medicinal product',
			'type': 'token',
			'field': 'identifier',
		}),
		'route': new SearchParameterDefinition({
			'description': 'Coded expression for the route',
			'type': 'token',
			'field': 'routeOfAdministration.code',
		}),
		'target-species': new SearchParameterDefinition({
			'description': 'Coded expression for the species',
			'type': 'token',
			'field': 'routeOfAdministration.targetSpecies.code',
		}),
	},
	'MedicinalProductUndesirableEffect': {
		'subject': new SearchParameterDefinition({
			'description': 'The medication for which this is an undesirable effect',
			'type': 'reference',
			'field': 'subject',
			'target': ['Medication', 'MedicinalProduct'],
		}),
	},
	'MessageDefinition': {
		'category': new SearchParameterDefinition({
			'description': 'The behavior associated with the message',
			'type': 'token',
			'field': 'category',
		}),
		'context': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date',
			'type': 'date',
			'field': 'date',
		}),
		'description': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set',
			'type': 'string',
			'field': 'description',
		}),
		'event': new SearchParameterDefinition({
			'description': 'The event that triggers the message or link to the event definition.',
			'type': 'token',
			'fields': ['eventCoding', 'eventUri'],
		}),
		'focus': new SearchParameterDefinition({
			'description': 'A resource that is a permitted focus of the message',
			'type': 'token',
			'field': 'focus.code',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CodeSystem](codesystem.html): External identifier for the code system* [ConceptMap](conceptmap.html): External identifier for the concept map* [MessageDefinition](messagedefinition.html): External identifier for the message definition* [StructureDefinition](structuredefinition.html): External identifier for the structure definition* [StructureMap](structuremap.html): External identifier for the structure map* [ValueSet](valueset.html): External identifier for the value set',
			'type': 'token',
			'field': 'identifier',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set',
			'type': 'string',
			'field': 'name',
		}),
		'parent': new SearchParameterDefinition({
			'description': 'A resource that is the parent of the definition',
			'type': 'reference',
			'field': 'parent',
			'target': ['PlanDefinition', 'ActivityDefinition'],
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set',
			'type': 'string',
			'field': 'publisher',
		}),
		'status': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set',
			'type': 'token',
			'field': 'status',
		}),
		'title': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement* [CodeSystem](codesystem.html): The human-friendly name of the code system* [ConceptMap](conceptmap.html): The human-friendly name of the concept map* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition* [StructureMap](structuremap.html): The human-friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities* [ValueSet](valueset.html): The human-friendly name of the value set',
			'type': 'string',
			'field': 'title',
		}),
		'url': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set',
			'type': 'token',
			'field': 'version',
		}),
	},
	'MessageHeader': {
		'author': new SearchParameterDefinition({
			'description': 'The source of the decision',
			'type': 'reference',
			'field': 'author',
			'target': ['Practitioner', 'PractitionerRole'],
		}),
		'code': new SearchParameterDefinition({
			'description': 'ok | transient-error | fatal-error',
			'type': 'token',
			'field': 'response.code',
		}),
		'destination': new SearchParameterDefinition({
			'description': 'Name of system',
			'type': 'string',
			'field': 'destination.name',
		}),
		'destination-uri': new SearchParameterDefinition({
			'description': 'Actual destination address or id',
			'type': 'uri',
			'field': 'destination.endpoint',
		}),
		'enterer': new SearchParameterDefinition({
			'description': 'The source of the data entry',
			'type': 'reference',
			'field': 'enterer',
			'target': ['Practitioner', 'PractitionerRole'],
		}),
		'event': new SearchParameterDefinition({
			'description': 'Code for the event this message represents or link to event definition',
			'type': 'token',
			'fields': ['eventCoding', 'eventUri'],
		}),
		'focus': new SearchParameterDefinition({
			'description': 'The actual content of the message',
			'type': 'reference',
			'field': 'focus',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'receiver': new SearchParameterDefinition({
			'description': 'Intended "real-world" recipient for the data',
			'type': 'reference',
			'field': 'destination.receiver',
			'target': ['Practitioner', 'Organization', 'PractitionerRole'],
		}),
		'response-id': new SearchParameterDefinition({
			'description': 'Id of original message',
			'type': 'token',
			'field': 'response.identifier',
		}),
		'responsible': new SearchParameterDefinition({
			'description': 'Final responsibility for event',
			'type': 'reference',
			'field': 'responsible',
			'target': ['Practitioner', 'Organization', 'PractitionerRole'],
		}),
		'sender': new SearchParameterDefinition({
			'description': 'Real world sender of the message',
			'type': 'reference',
			'field': 'sender',
			'target': ['Practitioner', 'Organization', 'PractitionerRole'],
		}),
		'source': new SearchParameterDefinition({
			'description': 'Name of system',
			'type': 'string',
			'field': 'source.name',
		}),
		'source-uri': new SearchParameterDefinition({
			'description': 'Actual message source address or id',
			'type': 'uri',
			'field': 'source.endpoint',
		}),
		'target': new SearchParameterDefinition({
			'description': 'Particular delivery destination within the destination',
			'type': 'reference',
			'field': 'destination.target',
			'target': ['Device'],
		}),
	},
	'MolecularSequence': {
		'chromosome': new SearchParameterDefinition({
			'description': 'Chromosome number of the reference sequence',
			'type': 'token',
			'field': 'referenceSeq.chromosome',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'The unique identity for a particular sequence',
			'type': 'token',
			'field': 'identifier',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'The subject that the observation is about',
			'type': 'reference',
			'field': 'patient',
			'target': ['Patient'],
		}),
		'referenceseqid': new SearchParameterDefinition({
			'description': 'Reference Sequence of the sequence',
			'type': 'token',
			'field': 'referenceSeq.referenceSeqId',
		}),
		'type': new SearchParameterDefinition({
			'description': 'Amino Acid Sequence/ DNA Sequence / RNA Sequence',
			'type': 'token',
			'field': 'type',
		}),
		'variant-end': new SearchParameterDefinition({
			'description': 'End position (0-based exclusive, which menas the acid at this position will not be included, 1-based inclusive, which means the acid at this position will be included) of the variant.',
			'type': 'number',
			'field': 'variant.end',
		}),
		'variant-start': new SearchParameterDefinition({
			'description': 'Start position (0-based inclusive, 1-based inclusive, that means the nucleic acid or amino acid at this position will be included) of the variant.',
			'type': 'number',
			'field': 'variant.start',
		}),
		'window-end': new SearchParameterDefinition({
			'description': 'End position (0-based exclusive, which menas the acid at this position will not be included, 1-based inclusive, which means the acid at this position will be included) of the reference sequence.',
			'type': 'number',
			'field': 'referenceSeq.windowEnd',
		}),
		'window-start': new SearchParameterDefinition({
			'description': 'Start position (0-based inclusive, 1-based inclusive, that means the nucleic acid or amino acid at this position will be included) of the reference sequence.',
			'type': 'number',
			'field': 'referenceSeq.windowStart',
		}),
	},
	'NamingSystem': {
		'contact': new SearchParameterDefinition({
			'description': 'Name of an individual to contact',
			'type': 'string',
			'field': 'contact.name',
		}),
		'context': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date',
			'type': 'date',
			'field': 'date',
		}),
		'description': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set',
			'type': 'string',
			'field': 'description',
		}),
		'id-type': new SearchParameterDefinition({
			'description': 'oid | uuid | uri | other',
			'type': 'token',
			'field': 'uniqueId.type',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'kind': new SearchParameterDefinition({
			'description': 'codesystem | identifier | root',
			'type': 'token',
			'field': 'kind',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set',
			'type': 'string',
			'field': 'name',
		}),
		'period': new SearchParameterDefinition({
			'description': 'When is identifier valid?',
			'type': 'date',
			'field': 'uniqueId.period',
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set',
			'type': 'string',
			'field': 'publisher',
		}),
		'responsible': new SearchParameterDefinition({
			'description': 'Who maintains system namespace?',
			'type': 'string',
			'field': 'responsible',
		}),
		'status': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set',
			'type': 'token',
			'field': 'status',
		}),
		'telecom': new SearchParameterDefinition({
			'description': 'Contact details for individual or organization',
			'type': 'token',
			'field': 'contact.telecom',
		}),
		'type': new SearchParameterDefinition({
			'description': 'e.g. driver,  provider,  patient, bank etc.',
			'type': 'token',
			'field': 'type',
		}),
		'value': new SearchParameterDefinition({
			'description': 'The unique identifier',
			'type': 'string',
			'field': 'uniqueId.value',
		}),
	},
	'NutritionOrder': {
		'additive': new SearchParameterDefinition({
			'description': 'Type of module component to add to the feeding',
			'type': 'token',
			'field': 'enteralFormula.additiveType',
		}),
		'datetime': new SearchParameterDefinition({
			'description': 'Return nutrition orders requested on this date',
			'type': 'date',
			'field': 'dateTime',
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter', 'EpisodeOfCare'],
		}),
		'formula': new SearchParameterDefinition({
			'description': 'Type of enteral or infant formula',
			'type': 'token',
			'field': 'enteralFormula.baseFormulaType',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'instantiates-canonical': new SearchParameterDefinition({
			'description': 'Instantiates FHIR protocol or definition',
			'type': 'reference',
			'field': 'instantiatesCanonical',
			'target': ['PlanDefinition', 'ActivityDefinition'],
		}),
		'instantiates-uri': new SearchParameterDefinition({
			'description': 'Instantiates external protocol or definition',
			'type': 'uri',
			'field': 'instantiatesUri',
		}),
		'oraldiet': new SearchParameterDefinition({
			'description': 'Type of diet that can be consumed orally (i.e., take via the mouth).',
			'type': 'token',
			'field': 'oralDiet.type',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'patient',
			'target': ['Patient', 'Group'],
		}),
		'provider': new SearchParameterDefinition({
			'description': 'The identity of the provider who placed the nutrition order',
			'type': 'reference',
			'field': 'orderer',
			'target': ['Practitioner', 'PractitionerRole'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'Status of the nutrition order.',
			'type': 'token',
			'field': 'status',
		}),
		'supplement': new SearchParameterDefinition({
			'description': 'Type of supplement product requested',
			'type': 'token',
			'field': 'supplement.type',
		}),
	},
	'Observation': {
		'based-on': new SearchParameterDefinition({
			'description': 'Reference to the service request.',
			'type': 'reference',
			'field': 'basedOn',
			'target': ['CarePlan', 'MedicationRequest', 'NutritionOrder', 'DeviceRequest', 'ServiceRequest', 'ImmunizationRecommendation'],
		}),
		'category': new SearchParameterDefinition({
			'description': 'The classification of the type of observation',
			'type': 'token',
			'field': 'category',
		}),
		'code': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered',
			'type': 'token',
			'field': 'code',
		}),
		'combo-code': new SearchParameterDefinition({
			'description': 'The code of the observation type or component type',
			'type': 'token',
			'fields': ['code', 'component.code'],
		}),
		'combo-data-absent-reason': new SearchParameterDefinition({
			'description': 'The reason why the expected value in the element Observation.value[x] or Observation.component.value[x] is missing.',
			'type': 'token',
			'fields': ['dataAbsentReason', 'component.dataAbsentReason'],
		}),
		'combo-value-concept': new SearchParameterDefinition({
			'description': 'The value or component value of the observation, if the value is a CodeableConcept',
			'type': 'token',
			'fields': ['valueCodeableConcept', 'component.valueCodeableConcept'],
		}),
		'combo-value-quantity': new SearchParameterDefinition({
			'description': 'The value or component value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)',
			'type': 'quantity',
			'fields': ['valueQuantity', 'valueCodeableConcept', 'valueString', 'valueBoolean', 'valueInteger', 'valueRange', 'valueRatio', 'valueSampledData', 'valueTime', 'valueDateTime', 'valuePeriod'],
		}),
		'component-code': new SearchParameterDefinition({
			'description': 'The component code of the observation type',
			'type': 'token',
			'field': 'component.code',
		}),
		'component-data-absent-reason': new SearchParameterDefinition({
			'description': 'The reason why the expected value in the element Observation.component.value[x] is missing.',
			'type': 'token',
			'field': 'component.dataAbsentReason',
		}),
		'component-value-concept': new SearchParameterDefinition({
			'description': 'The value of the component observation, if the value is a CodeableConcept',
			'type': 'token',
			'field': 'component.valueCodeableConcept',
		}),
		'component-value-quantity': new SearchParameterDefinition({
			'description': 'The value of the component observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)',
			'type': 'quantity',
			'fields': ['component.valueQuantity', 'component.valueCodeableConcept', 'component.valueString', 'component.valueBoolean', 'component.valueInteger', 'component.valueRange', 'component.valueRatio', 'component.valueSampledData', 'component.valueTime', 'component.valueDateTime', 'component.valuePeriod'],
		}),
		'data-absent-reason': new SearchParameterDefinition({
			'description': 'The reason why the expected value in the element Observation.value[x] is missing.',
			'type': 'token',
			'field': 'dataAbsentReason',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of cares period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made',
			'type': 'date',
			'fields': ['effectiveDateTime', 'effectivePeriod', 'effectiveTiming', 'effectiveInstant'],
		}),
		'derived-from': new SearchParameterDefinition({
			'description': 'Related measurements the observation is made from',
			'type': 'reference',
			'field': 'derivedFrom',
			'target': ['Media', 'Observation', 'ImagingStudy', 'MolecularSequence', 'QuestionnaireResponse', 'DocumentReference'],
		}),
		'device': new SearchParameterDefinition({
			'description': 'The Device that generated the observation data.',
			'type': 'reference',
			'field': 'device',
			'target': ['Device', 'DeviceMetric'],
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter', 'EpisodeOfCare'],
		}),
		'focus': new SearchParameterDefinition({
			'description': 'The focus of an observation when the focus is not the patient of record.',
			'type': 'reference',
			'field': 'focus',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'has-member': new SearchParameterDefinition({
			'description': 'Related resource that belongs to the Observation group',
			'type': 'reference',
			'field': 'hasMember',
			'target': ['Observation', 'MolecularSequence', 'QuestionnaireResponse'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'method': new SearchParameterDefinition({
			'description': 'The method used for the observation',
			'type': 'token',
			'field': 'method',
		}),
		'part-of': new SearchParameterDefinition({
			'description': 'Part of referenced event',
			'type': 'reference',
			'field': 'partOf',
			'target': ['Immunization', 'MedicationDispense', 'MedicationAdministration', 'Procedure', 'ImagingStudy', 'MedicationStatement'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'performer': new SearchParameterDefinition({
			'description': 'Who performed the observation',
			'type': 'reference',
			'field': 'performer',
			'target': ['Practitioner', 'Organization', 'CareTeam', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'specimen': new SearchParameterDefinition({
			'description': 'Specimen used for this observation',
			'type': 'reference',
			'field': 'specimen',
			'target': ['Specimen'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'The status of the observation',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'The subject that the observation is about',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Device', 'Patient', 'Location'],
		}),
		'value-concept': new SearchParameterDefinition({
			'description': 'The value of the observation, if the value is a CodeableConcept',
			'type': 'token',
			'field': 'valueCodeableConcept',
		}),
		'value-date': new SearchParameterDefinition({
			'description': 'The value of the observation, if the value is a date or period of time',
			'type': 'date',
			'fields': ['valueDateTime', 'valuePeriod'],
		}),
		'value-quantity': new SearchParameterDefinition({
			'description': 'The value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)',
			'type': 'quantity',
			'fields': ['valueQuantity', 'valueCodeableConcept', 'valueString', 'valueBoolean', 'valueInteger', 'valueRange', 'valueRatio', 'valueSampledData', 'valueTime', 'valueDateTime', 'valuePeriod'],
		}),
		'value-string': new SearchParameterDefinition({
			'description': 'The value of the observation, if the value is a string, and also searches in CodeableConcept.text',
			'type': 'string',
			'fields': ['valueQuantity', 'valueCodeableConcept', 'valueString', 'valueBoolean', 'valueInteger', 'valueRange', 'valueRatio', 'valueSampledData', 'valueTime', 'valueDateTime', 'valuePeriod'],
		}),
	},
	'OperationDefinition': {
		'base': new SearchParameterDefinition({
			'description': 'Marks this as a profile of the base',
			'type': 'reference',
			'field': 'base',
			'target': ['OperationDefinition'],
		}),
		'code': new SearchParameterDefinition({
			'description': 'Name used to invoke the operation',
			'type': 'token',
			'field': 'code',
		}),
		'context': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date',
			'type': 'date',
			'field': 'date',
		}),
		'description': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set',
			'type': 'string',
			'field': 'description',
		}),
		'input-profile': new SearchParameterDefinition({
			'description': 'Validation information for in parameters',
			'type': 'reference',
			'field': 'inputProfile',
			'target': ['StructureDefinition'],
		}),
		'instance': new SearchParameterDefinition({
			'description': 'Invoke on an instance?',
			'type': 'token',
			'field': 'instance',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'kind': new SearchParameterDefinition({
			'description': 'operation | query',
			'type': 'token',
			'field': 'kind',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set',
			'type': 'string',
			'field': 'name',
		}),
		'output-profile': new SearchParameterDefinition({
			'description': 'Validation information for out parameters',
			'type': 'reference',
			'field': 'outputProfile',
			'target': ['StructureDefinition'],
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set',
			'type': 'string',
			'field': 'publisher',
		}),
		'status': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set',
			'type': 'token',
			'field': 'status',
		}),
		'system': new SearchParameterDefinition({
			'description': 'Invoke at the system level?',
			'type': 'token',
			'field': 'system',
		}),
		'title': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement* [CodeSystem](codesystem.html): The human-friendly name of the code system* [ConceptMap](conceptmap.html): The human-friendly name of the concept map* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition* [StructureMap](structuremap.html): The human-friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities* [ValueSet](valueset.html): The human-friendly name of the value set',
			'type': 'string',
			'field': 'title',
		}),
		'type': new SearchParameterDefinition({
			'description': 'Invoke at the type level?',
			'type': 'token',
			'field': 'type',
		}),
		'url': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set',
			'type': 'token',
			'field': 'version',
		}),
	},
	'Organization': {
		'active': new SearchParameterDefinition({
			'description': 'Is the Organization record active',
			'type': 'token',
			'field': 'active',
		}),
		'address': new SearchParameterDefinition({
			'description': 'A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text',
			'type': 'string',
			'field': 'address',
		}),
		'address-city': new SearchParameterDefinition({
			'description': 'A city specified in an address',
			'type': 'string',
			'field': 'address.city',
		}),
		'address-country': new SearchParameterDefinition({
			'description': 'A country specified in an address',
			'type': 'string',
			'field': 'address.country',
		}),
		'address-postalcode': new SearchParameterDefinition({
			'description': 'A postal code specified in an address',
			'type': 'string',
			'field': 'address.postalCode',
		}),
		'address-state': new SearchParameterDefinition({
			'description': 'A state specified in an address',
			'type': 'string',
			'field': 'address.state',
		}),
		'address-use': new SearchParameterDefinition({
			'description': 'A use code specified in an address',
			'type': 'token',
			'field': 'address.use',
		}),
		'endpoint': new SearchParameterDefinition({
			'description': 'Technical endpoints providing access to services operated for the organization',
			'type': 'reference',
			'field': 'endpoint',
			'target': ['Endpoint'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Any identifier for the organization (not the accreditation issuers identifier)',
			'type': 'token',
			'field': 'identifier',
		}),
		'name': new SearchParameterDefinition({
			'description': 'A portion of the organizations name or alias',
			'type': 'string',
			'fields': ['name', 'alias'],
		}),
		'partof': new SearchParameterDefinition({
			'description': 'An organization of which this organization forms a part',
			'type': 'reference',
			'field': 'partOf',
			'target': ['Organization'],
		}),
		'phonetic': new SearchParameterDefinition({
			'description': 'A portion of the organizations name using some kind of phonetic matching algorithm',
			'type': 'string',
			'field': 'name',
		}),
		'type': new SearchParameterDefinition({
			'description': 'A code for the type of organization',
			'type': 'token',
			'field': 'type',
		}),
	},
	'OrganizationAffiliation': {
		'active': new SearchParameterDefinition({
			'description': 'Whether this organization affiliation record is in active use',
			'type': 'token',
			'field': 'active',
		}),
		'date': new SearchParameterDefinition({
			'description': 'The period during which the participatingOrganization is affiliated with the primary organization',
			'type': 'date',
			'field': 'period',
		}),
		'email': new SearchParameterDefinition({
			'description': 'A value in an email contact',
			'type': 'token',
			'field': 'telecom',
			'fieldFilter': '[system/@value=\'email\']',
		}),
		'endpoint': new SearchParameterDefinition({
			'description': 'Technical endpoints providing access to services operated for this role',
			'type': 'reference',
			'field': 'endpoint',
			'target': ['Endpoint'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'An organization affiliations Identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'location': new SearchParameterDefinition({
			'description': 'The location(s) at which the role occurs',
			'type': 'reference',
			'field': 'location',
			'target': ['Location'],
		}),
		'network': new SearchParameterDefinition({
			'description': 'Health insurance provider network in which the participatingOrganization provides the roles services (if defined) at the indicated locations (if defined)',
			'type': 'reference',
			'field': 'network',
			'target': ['Organization'],
		}),
		'participating-organization': new SearchParameterDefinition({
			'description': 'The organization that provides services to the primary organization',
			'type': 'reference',
			'field': 'participatingOrganization',
			'target': ['Organization'],
		}),
		'phone': new SearchParameterDefinition({
			'description': 'A value in a phone contact',
			'type': 'token',
			'field': 'telecom',
			'fieldFilter': '[system/@value=\'phone\']',
		}),
		'primary-organization': new SearchParameterDefinition({
			'description': 'The organization that receives the services from the participating organization',
			'type': 'reference',
			'field': 'organization',
			'target': ['Organization'],
		}),
		'role': new SearchParameterDefinition({
			'description': 'Definition of the role the participatingOrganization plays',
			'type': 'token',
			'field': 'code',
		}),
		'service': new SearchParameterDefinition({
			'description': 'Healthcare services provided through the role',
			'type': 'reference',
			'field': 'healthcareService',
			'target': ['HealthcareService'],
		}),
		'specialty': new SearchParameterDefinition({
			'description': 'Specific specialty of the participatingOrganization in the context of the role',
			'type': 'token',
			'field': 'specialty',
		}),
		'telecom': new SearchParameterDefinition({
			'description': 'The value in any kind of contact',
			'type': 'token',
			'field': 'telecom',
		}),
	},
	'Patient': {
		'active': new SearchParameterDefinition({
			'description': 'Whether the patient record is active',
			'type': 'token',
			'field': 'active',
		}),
		'address': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text',
			'type': 'string',
			'field': 'address',
		}),
		'address-city': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A city specified in an address* [Person](person.html): A city specified in an address* [Practitioner](practitioner.html): A city specified in an address* [RelatedPerson](relatedperson.html): A city specified in an address',
			'type': 'string',
			'field': 'address.city',
		}),
		'address-country': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A country specified in an address* [Person](person.html): A country specified in an address* [Practitioner](practitioner.html): A country specified in an address* [RelatedPerson](relatedperson.html): A country specified in an address',
			'type': 'string',
			'field': 'address.country',
		}),
		'address-postalcode': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A postalCode specified in an address* [Person](person.html): A postal code specified in an address* [Practitioner](practitioner.html): A postalCode specified in an address* [RelatedPerson](relatedperson.html): A postal code specified in an address',
			'type': 'string',
			'field': 'address.postalCode',
		}),
		'address-state': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A state specified in an address* [Person](person.html): A state specified in an address* [Practitioner](practitioner.html): A state specified in an address* [RelatedPerson](relatedperson.html): A state specified in an address',
			'type': 'string',
			'field': 'address.state',
		}),
		'address-use': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A use code specified in an address* [Person](person.html): A use code specified in an address* [Practitioner](practitioner.html): A use code specified in an address* [RelatedPerson](relatedperson.html): A use code specified in an address',
			'type': 'token',
			'field': 'address.use',
		}),
		'birthdate': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): The patients date of birth* [Person](person.html): The persons date of birth* [RelatedPerson](relatedperson.html): The Related Persons date of birth',
			'type': 'date',
			'field': 'birthDate',
		}),
		'death-date': new SearchParameterDefinition({
			'description': 'The date of death has been provided and satisfies this search value',
			'type': 'date',
			'field': 'deceasedDateTime',
		}),
		'deceased': new SearchParameterDefinition({
			'description': 'This patient has been marked as deceased, or as a death date entered',
			'type': 'token',
			'fields': ['deceasedBoolean', 'deceasedDateTime'],
		}),
		'email': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A value in an email contact* [Person](person.html): A value in an email contact* [Practitioner](practitioner.html): A value in an email contact* [PractitionerRole](practitionerrole.html): A value in an email contact* [RelatedPerson](relatedperson.html): A value in an email contact',
			'type': 'token',
			'field': 'telecom',
			'fieldFilter': '[system/@value=\'email\']',
		}),
		'family': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A portion of the family name of the patient* [Practitioner](practitioner.html): A portion of the family name* [Person](person.html): A portion of the family name of the person',
			'type': 'string',
			'field': 'name.family',
		}),
		'gender': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): Gender of the patient* [Person](person.html): The gender of the person* [Practitioner](practitioner.html): Gender of the practitioner* [RelatedPerson](relatedperson.html): Gender of the related person',
			'type': 'token',
			'field': 'gender',
		}),
		'general-practitioner': new SearchParameterDefinition({
			'description': 'Patients nominated general practitioner, not the organization that manages the record',
			'type': 'reference',
			'field': 'generalPractitioner',
			'target': ['Practitioner', 'Organization', 'PractitionerRole'],
		}),
		'given': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A portion of the given name of the patient* [Practitioner](practitioner.html): A portion of the given name* [Person](person.html): A portion of the given name of the person',
			'type': 'string',
			'field': 'name.given',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'A patient identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'language': new SearchParameterDefinition({
			'description': 'Language code (irrespective of use value)',
			'type': 'token',
			'field': 'communication.language',
		}),
		'link': new SearchParameterDefinition({
			'description': 'All patients linked to the given patient',
			'type': 'reference',
			'field': 'link.other',
			'target': ['Patient', 'RelatedPerson'],
		}),
		'name': new SearchParameterDefinition({
			'description': 'A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text',
			'type': 'string',
			'field': 'name',
		}),
		'organization': new SearchParameterDefinition({
			'description': 'The organization that is the custodian of the patient record',
			'type': 'reference',
			'field': 'managingOrganization',
			'target': ['Organization'],
		}),
		'phone': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A value in a phone contact* [Person](person.html): A value in a phone contact* [Practitioner](practitioner.html): A value in a phone contact* [PractitionerRole](practitionerrole.html): A value in a phone contact* [RelatedPerson](relatedperson.html): A value in a phone contact',
			'type': 'token',
			'field': 'telecom',
			'fieldFilter': '[system/@value=\'phone\']',
		}),
		'phonetic': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm* [Person](person.html): A portion of name using some kind of phonetic matching algorithm* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm',
			'type': 'string',
			'field': 'name',
		}),
		'telecom': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): The value in any kind of telecom details of the patient* [Person](person.html): The value in any kind of contact* [Practitioner](practitioner.html): The value in any kind of contact* [PractitionerRole](practitionerrole.html): The value in any kind of contact* [RelatedPerson](relatedperson.html): The value in any kind of contact',
			'type': 'token',
			'field': 'telecom',
		}),
	},
	'PaymentNotice': {
		'created': new SearchParameterDefinition({
			'description': 'Creation date fro the notice',
			'type': 'date',
			'field': 'created',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'The business identifier of the notice',
			'type': 'token',
			'field': 'identifier',
		}),
		'payment-status': new SearchParameterDefinition({
			'description': 'The type of payment notice',
			'type': 'token',
			'field': 'paymentStatus',
		}),
		'provider': new SearchParameterDefinition({
			'description': 'The reference to the provider',
			'type': 'reference',
			'field': 'provider',
			'target': ['Practitioner', 'Organization', 'PractitionerRole'],
		}),
		'request': new SearchParameterDefinition({
			'description': 'The Claim',
			'type': 'reference',
			'field': 'request',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'response': new SearchParameterDefinition({
			'description': 'The ClaimResponse',
			'type': 'reference',
			'field': 'response',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'The status of the payment notice',
			'type': 'token',
			'field': 'status',
		}),
	},
	'PaymentReconciliation': {
		'created': new SearchParameterDefinition({
			'description': 'The creation date',
			'type': 'date',
			'field': 'created',
		}),
		'disposition': new SearchParameterDefinition({
			'description': 'The contents of the disposition message',
			'type': 'string',
			'field': 'disposition',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'The business identifier of the ExplanationOfBenefit',
			'type': 'token',
			'field': 'identifier',
		}),
		'outcome': new SearchParameterDefinition({
			'description': 'The processing outcome',
			'type': 'token',
			'field': 'outcome',
		}),
		'payment-issuer': new SearchParameterDefinition({
			'description': 'The organization which generated this resource',
			'type': 'reference',
			'field': 'paymentIssuer',
			'target': ['Organization'],
		}),
		'request': new SearchParameterDefinition({
			'description': 'The reference to the claim',
			'type': 'reference',
			'field': 'request',
			'target': ['Task'],
		}),
		'requestor': new SearchParameterDefinition({
			'description': 'The reference to the provider who submitted the claim',
			'type': 'reference',
			'field': 'requestor',
			'target': ['Practitioner', 'Organization', 'PractitionerRole'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'The status of the payment reconciliation',
			'type': 'token',
			'field': 'status',
		}),
	},
	'Person': {
		'address': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text',
			'type': 'string',
			'field': 'address',
		}),
		'address-city': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A city specified in an address* [Person](person.html): A city specified in an address* [Practitioner](practitioner.html): A city specified in an address* [RelatedPerson](relatedperson.html): A city specified in an address',
			'type': 'string',
			'field': 'address.city',
		}),
		'address-country': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A country specified in an address* [Person](person.html): A country specified in an address* [Practitioner](practitioner.html): A country specified in an address* [RelatedPerson](relatedperson.html): A country specified in an address',
			'type': 'string',
			'field': 'address.country',
		}),
		'address-postalcode': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A postalCode specified in an address* [Person](person.html): A postal code specified in an address* [Practitioner](practitioner.html): A postalCode specified in an address* [RelatedPerson](relatedperson.html): A postal code specified in an address',
			'type': 'string',
			'field': 'address.postalCode',
		}),
		'address-state': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A state specified in an address* [Person](person.html): A state specified in an address* [Practitioner](practitioner.html): A state specified in an address* [RelatedPerson](relatedperson.html): A state specified in an address',
			'type': 'string',
			'field': 'address.state',
		}),
		'address-use': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A use code specified in an address* [Person](person.html): A use code specified in an address* [Practitioner](practitioner.html): A use code specified in an address* [RelatedPerson](relatedperson.html): A use code specified in an address',
			'type': 'token',
			'field': 'address.use',
		}),
		'birthdate': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): The patients date of birth* [Person](person.html): The persons date of birth* [RelatedPerson](relatedperson.html): The Related Persons date of birth',
			'type': 'date',
			'field': 'birthDate',
		}),
		'email': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A value in an email contact* [Person](person.html): A value in an email contact* [Practitioner](practitioner.html): A value in an email contact* [PractitionerRole](practitionerrole.html): A value in an email contact* [RelatedPerson](relatedperson.html): A value in an email contact',
			'type': 'token',
			'field': 'telecom',
			'fieldFilter': '[system/@value=\'email\']',
		}),
		'family': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A portion of the family name of the patient* [Practitioner](practitioner.html): A portion of the family name* [Person](person.html): A portion of the family name of the person',
			'type': 'string',
			'field': 'name.family',
		}),
		'gender': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): Gender of the patient* [Person](person.html): The gender of the person* [Practitioner](practitioner.html): Gender of the practitioner* [RelatedPerson](relatedperson.html): Gender of the related person',
			'type': 'token',
			'field': 'gender',
		}),
		'given': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A portion of the given name of the patient* [Practitioner](practitioner.html): A portion of the given name* [Person](person.html): A portion of the given name of the person',
			'type': 'string',
			'field': 'name.given',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'A person Identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'link': new SearchParameterDefinition({
			'description': 'Any link has this Patient, Person, RelatedPerson or Practitioner reference',
			'type': 'reference',
			'field': 'link.target',
			'target': ['Practitioner', 'Patient', 'Person', 'RelatedPerson'],
		}),
		'name': new SearchParameterDefinition({
			'description': 'A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text',
			'type': 'string',
			'field': 'name',
		}),
		'organization': new SearchParameterDefinition({
			'description': 'The organization at which this person record is being managed',
			'type': 'reference',
			'field': 'managingOrganization',
			'target': ['Organization'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'The Person links to this Patient',
			'type': 'reference',
			'field': 'link.target',
			'target': ['Patient'],
		}),
		'phone': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A value in a phone contact* [Person](person.html): A value in a phone contact* [Practitioner](practitioner.html): A value in a phone contact* [PractitionerRole](practitionerrole.html): A value in a phone contact* [RelatedPerson](relatedperson.html): A value in a phone contact',
			'type': 'token',
			'field': 'telecom',
			'fieldFilter': '[system/@value=\'phone\']',
		}),
		'phonetic': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm* [Person](person.html): A portion of name using some kind of phonetic matching algorithm* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm',
			'type': 'string',
			'field': 'name',
		}),
		'practitioner': new SearchParameterDefinition({
			'description': 'The Person links to this Practitioner',
			'type': 'reference',
			'field': 'link.target',
			'target': ['Practitioner'],
		}),
		'relatedperson': new SearchParameterDefinition({
			'description': 'The Person links to this RelatedPerson',
			'type': 'reference',
			'field': 'link.target',
			'target': ['RelatedPerson'],
		}),
		'telecom': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): The value in any kind of telecom details of the patient* [Person](person.html): The value in any kind of contact* [Practitioner](practitioner.html): The value in any kind of contact* [PractitionerRole](practitionerrole.html): The value in any kind of contact* [RelatedPerson](relatedperson.html): The value in any kind of contact',
			'type': 'token',
			'field': 'telecom',
		}),
	},
	'PlanDefinition': {
		'composed-of': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'composed-of\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'context': new SearchParameterDefinition({
			'description': 'A use context assigned to the plan definition',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'A quantity- or range-valued use context assigned to the plan definition',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'A type of use context assigned to the plan definition',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'The plan definition publication date',
			'type': 'date',
			'field': 'date',
		}),
		'definition': new SearchParameterDefinition({
			'description': 'Activity or plan definitions used by plan definition',
			'type': 'reference',
			'fields': ['action.definitionCanonical', 'action.definitionUri'],
			'target': ['Questionnaire', 'PlanDefinition', 'ActivityDefinition'],
		}),
		'depends-on': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'fields': ['relatedArtifact.resource', 'library'],
			'fieldFilters': ['[type/@value=\'depends-on\']'],
			'target': ['Library', 'Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'derived-from': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'derived-from\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'description': new SearchParameterDefinition({
			'description': 'The description of the plan definition',
			'type': 'string',
			'field': 'description',
		}),
		'effective': new SearchParameterDefinition({
			'description': 'The time during which the plan definition is intended to be in use',
			'type': 'date',
			'field': 'effectivePeriod',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'External identifier for the plan definition',
			'type': 'token',
			'field': 'identifier',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Intended jurisdiction for the plan definition',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Computationally friendly name of the plan definition',
			'type': 'string',
			'field': 'name',
		}),
		'predecessor': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'predecessor\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Name of the publisher of the plan definition',
			'type': 'string',
			'field': 'publisher',
		}),
		'status': new SearchParameterDefinition({
			'description': 'The current status of the plan definition',
			'type': 'token',
			'field': 'status',
		}),
		'successor': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'successor\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'title': new SearchParameterDefinition({
			'description': 'The human-friendly name of the plan definition',
			'type': 'string',
			'field': 'title',
		}),
		'topic': new SearchParameterDefinition({
			'description': 'Topics associated with the module',
			'type': 'token',
			'field': 'topic',
		}),
		'type': new SearchParameterDefinition({
			'description': 'The type of artifact the plan (e.g. order-set, eca-rule, protocol)',
			'type': 'token',
			'field': 'type',
		}),
		'url': new SearchParameterDefinition({
			'description': 'The uri that identifies the plan definition',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'The business version of the plan definition',
			'type': 'token',
			'field': 'version',
		}),
	},
	'Practitioner': {
		'active': new SearchParameterDefinition({
			'description': 'Whether the practitioner record is active',
			'type': 'token',
			'field': 'active',
		}),
		'address': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text',
			'type': 'string',
			'field': 'address',
		}),
		'address-city': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A city specified in an address* [Person](person.html): A city specified in an address* [Practitioner](practitioner.html): A city specified in an address* [RelatedPerson](relatedperson.html): A city specified in an address',
			'type': 'string',
			'field': 'address.city',
		}),
		'address-country': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A country specified in an address* [Person](person.html): A country specified in an address* [Practitioner](practitioner.html): A country specified in an address* [RelatedPerson](relatedperson.html): A country specified in an address',
			'type': 'string',
			'field': 'address.country',
		}),
		'address-postalcode': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A postalCode specified in an address* [Person](person.html): A postal code specified in an address* [Practitioner](practitioner.html): A postalCode specified in an address* [RelatedPerson](relatedperson.html): A postal code specified in an address',
			'type': 'string',
			'field': 'address.postalCode',
		}),
		'address-state': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A state specified in an address* [Person](person.html): A state specified in an address* [Practitioner](practitioner.html): A state specified in an address* [RelatedPerson](relatedperson.html): A state specified in an address',
			'type': 'string',
			'field': 'address.state',
		}),
		'address-use': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A use code specified in an address* [Person](person.html): A use code specified in an address* [Practitioner](practitioner.html): A use code specified in an address* [RelatedPerson](relatedperson.html): A use code specified in an address',
			'type': 'token',
			'field': 'address.use',
		}),
		'communication': new SearchParameterDefinition({
			'description': 'One of the languages that the practitioner can communicate with',
			'type': 'token',
			'field': 'communication',
		}),
		'email': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A value in an email contact* [Person](person.html): A value in an email contact* [Practitioner](practitioner.html): A value in an email contact* [PractitionerRole](practitionerrole.html): A value in an email contact* [RelatedPerson](relatedperson.html): A value in an email contact',
			'type': 'token',
			'field': 'telecom',
			'fieldFilter': '[system/@value=\'email\']',
		}),
		'family': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A portion of the family name of the patient* [Practitioner](practitioner.html): A portion of the family name* [Person](person.html): A portion of the family name of the person',
			'type': 'string',
			'field': 'name.family',
		}),
		'gender': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): Gender of the patient* [Person](person.html): The gender of the person* [Practitioner](practitioner.html): Gender of the practitioner* [RelatedPerson](relatedperson.html): Gender of the related person',
			'type': 'token',
			'field': 'gender',
		}),
		'given': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A portion of the given name of the patient* [Practitioner](practitioner.html): A portion of the given name* [Person](person.html): A portion of the given name of the person',
			'type': 'string',
			'field': 'name.given',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'A practitioners Identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'name': new SearchParameterDefinition({
			'description': 'A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text',
			'type': 'string',
			'field': 'name',
		}),
		'phone': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A value in a phone contact* [Person](person.html): A value in a phone contact* [Practitioner](practitioner.html): A value in a phone contact* [PractitionerRole](practitionerrole.html): A value in a phone contact* [RelatedPerson](relatedperson.html): A value in a phone contact',
			'type': 'token',
			'field': 'telecom',
			'fieldFilter': '[system/@value=\'phone\']',
		}),
		'phonetic': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm* [Person](person.html): A portion of name using some kind of phonetic matching algorithm* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm',
			'type': 'string',
			'field': 'name',
		}),
		'telecom': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): The value in any kind of telecom details of the patient* [Person](person.html): The value in any kind of contact* [Practitioner](practitioner.html): The value in any kind of contact* [PractitionerRole](practitionerrole.html): The value in any kind of contact* [RelatedPerson](relatedperson.html): The value in any kind of contact',
			'type': 'token',
			'field': 'telecom',
		}),
	},
	'PractitionerRole': {
		'active': new SearchParameterDefinition({
			'description': 'Whether this practitioner role record is in active use',
			'type': 'token',
			'field': 'active',
		}),
		'date': new SearchParameterDefinition({
			'description': 'The period during which the practitioner is authorized to perform in these role(s)',
			'type': 'date',
			'field': 'period',
		}),
		'email': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A value in an email contact* [Person](person.html): A value in an email contact* [Practitioner](practitioner.html): A value in an email contact* [PractitionerRole](practitionerrole.html): A value in an email contact* [RelatedPerson](relatedperson.html): A value in an email contact',
			'type': 'token',
			'field': 'telecom',
			'fieldFilter': '[system/@value=\'email\']',
		}),
		'endpoint': new SearchParameterDefinition({
			'description': 'Technical endpoints providing access to services operated for the practitioner with this role',
			'type': 'reference',
			'field': 'endpoint',
			'target': ['Endpoint'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'A practitioners Identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'location': new SearchParameterDefinition({
			'description': 'One of the locations at which this practitioner provides care',
			'type': 'reference',
			'field': 'location',
			'target': ['Location'],
		}),
		'organization': new SearchParameterDefinition({
			'description': 'The identity of the organization the practitioner represents / acts on behalf of',
			'type': 'reference',
			'field': 'organization',
			'target': ['Organization'],
		}),
		'phone': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A value in a phone contact* [Person](person.html): A value in a phone contact* [Practitioner](practitioner.html): A value in a phone contact* [PractitionerRole](practitionerrole.html): A value in a phone contact* [RelatedPerson](relatedperson.html): A value in a phone contact',
			'type': 'token',
			'field': 'telecom',
			'fieldFilter': '[system/@value=\'phone\']',
		}),
		'practitioner': new SearchParameterDefinition({
			'description': 'Practitioner that is able to provide the defined services for the organization',
			'type': 'reference',
			'field': 'practitioner',
			'target': ['Practitioner'],
		}),
		'role': new SearchParameterDefinition({
			'description': 'The practitioner can perform this role at for the organization',
			'type': 'token',
			'field': 'code',
		}),
		'service': new SearchParameterDefinition({
			'description': 'The list of healthcare services that this worker provides for this roles Organization/Location(s)',
			'type': 'reference',
			'field': 'healthcareService',
			'target': ['HealthcareService'],
		}),
		'specialty': new SearchParameterDefinition({
			'description': 'The practitioner has this specialty at an organization',
			'type': 'token',
			'field': 'specialty',
		}),
		'telecom': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): The value in any kind of telecom details of the patient* [Person](person.html): The value in any kind of contact* [Practitioner](practitioner.html): The value in any kind of contact* [PractitionerRole](practitionerrole.html): The value in any kind of contact* [RelatedPerson](relatedperson.html): The value in any kind of contact',
			'type': 'token',
			'field': 'telecom',
		}),
	},
	'Procedure': {
		'based-on': new SearchParameterDefinition({
			'description': 'A request for this procedure',
			'type': 'reference',
			'field': 'basedOn',
			'target': ['CarePlan', 'ServiceRequest'],
		}),
		'category': new SearchParameterDefinition({
			'description': 'Classification of the procedure',
			'type': 'token',
			'field': 'category',
		}),
		'code': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered',
			'type': 'token',
			'field': 'code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of cares period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made',
			'type': 'date',
			'fields': ['performedDateTime', 'performedPeriod', 'performedString', 'performedAge', 'performedRange'],
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter', 'EpisodeOfCare'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'instantiates-canonical': new SearchParameterDefinition({
			'description': 'Instantiates FHIR protocol or definition',
			'type': 'reference',
			'field': 'instantiatesCanonical',
			'target': ['Questionnaire', 'Measure', 'PlanDefinition', 'OperationDefinition', 'ActivityDefinition'],
		}),
		'instantiates-uri': new SearchParameterDefinition({
			'description': 'Instantiates external protocol or definition',
			'type': 'uri',
			'field': 'instantiatesUri',
		}),
		'location': new SearchParameterDefinition({
			'description': 'Where the procedure happened',
			'type': 'reference',
			'field': 'location',
			'target': ['Location'],
		}),
		'part-of': new SearchParameterDefinition({
			'description': 'Part of referenced event',
			'type': 'reference',
			'field': 'partOf',
			'target': ['Observation', 'Procedure', 'MedicationAdministration'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'performer': new SearchParameterDefinition({
			'description': 'The reference to the practitioner',
			'type': 'reference',
			'field': 'performer.actor',
			'target': ['Practitioner', 'Organization', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'reason-code': new SearchParameterDefinition({
			'description': 'Coded reason procedure performed',
			'type': 'token',
			'field': 'reasonCode',
		}),
		'reason-reference': new SearchParameterDefinition({
			'description': 'The justification that the procedure was performed',
			'type': 'reference',
			'field': 'reasonReference',
			'target': ['Condition', 'Observation', 'Procedure', 'DiagnosticReport', 'DocumentReference'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'Search by subject',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Patient'],
		}),
	},
	'Provenance': {
		'agent': new SearchParameterDefinition({
			'description': 'Who participated',
			'type': 'reference',
			'field': 'agent.who',
			'target': ['Practitioner', 'Organization', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'agent-role': new SearchParameterDefinition({
			'description': 'What the agents role was',
			'type': 'token',
			'field': 'agent.role',
		}),
		'agent-type': new SearchParameterDefinition({
			'description': 'How the agent participated',
			'type': 'token',
			'field': 'agent.type',
		}),
		'entity': new SearchParameterDefinition({
			'description': 'Identity of entity',
			'type': 'reference',
			'field': 'entity.what',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'location': new SearchParameterDefinition({
			'description': 'Where the activity occurred, if relevant',
			'type': 'reference',
			'field': 'location',
			'target': ['Location'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Target Reference(s) (usually version specific)',
			'type': 'reference',
			'field': 'target',
			'target': ['Patient'],
		}),
		'recorded': new SearchParameterDefinition({
			'description': 'When the activity was recorded / updated',
			'type': 'date',
			'field': 'recorded',
		}),
		'signature-type': new SearchParameterDefinition({
			'description': 'Indication of the reason the entity signed the object(s)',
			'type': 'token',
			'field': 'signature.type',
		}),
		'target': new SearchParameterDefinition({
			'description': 'Target Reference(s) (usually version specific)',
			'type': 'reference',
			'field': 'target',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'when': new SearchParameterDefinition({
			'description': 'When the activity occurred',
			'type': 'date',
			'field': 'occurredDateTime',
		}),
	},
	'Questionnaire': {
		'code': new SearchParameterDefinition({
			'description': 'A code that corresponds to one of its items in the questionnaire',
			'type': 'token',
			'field': 'item.code',
		}),
		'context': new SearchParameterDefinition({
			'description': 'A use context assigned to the questionnaire',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'A quantity- or range-valued use context assigned to the questionnaire',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'A type of use context assigned to the questionnaire',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'The questionnaire publication date',
			'type': 'date',
			'field': 'date',
		}),
		'definition': new SearchParameterDefinition({
			'description': 'ElementDefinition - details for the item',
			'type': 'uri',
			'field': 'item.definition',
		}),
		'description': new SearchParameterDefinition({
			'description': 'The description of the questionnaire',
			'type': 'string',
			'field': 'description',
		}),
		'effective': new SearchParameterDefinition({
			'description': 'The time during which the questionnaire is intended to be in use',
			'type': 'date',
			'field': 'effectivePeriod',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'External identifier for the questionnaire',
			'type': 'token',
			'field': 'identifier',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Intended jurisdiction for the questionnaire',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Computationally friendly name of the questionnaire',
			'type': 'string',
			'field': 'name',
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Name of the publisher of the questionnaire',
			'type': 'string',
			'field': 'publisher',
		}),
		'status': new SearchParameterDefinition({
			'description': 'The current status of the questionnaire',
			'type': 'token',
			'field': 'status',
		}),
		'subject-type': new SearchParameterDefinition({
			'description': 'Resource that can be subject of QuestionnaireResponse',
			'type': 'token',
			'field': 'subjectType',
		}),
		'title': new SearchParameterDefinition({
			'description': 'The human-friendly name of the questionnaire',
			'type': 'string',
			'field': 'title',
		}),
		'url': new SearchParameterDefinition({
			'description': 'The uri that identifies the questionnaire',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'The business version of the questionnaire',
			'type': 'token',
			'field': 'version',
		}),
	},
	'QuestionnaireResponse': {
		'author': new SearchParameterDefinition({
			'description': 'The author of the questionnaire response',
			'type': 'reference',
			'field': 'author',
			'target': ['Practitioner', 'Organization', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'authored': new SearchParameterDefinition({
			'description': 'When the questionnaire response was last changed',
			'type': 'date',
			'field': 'authored',
		}),
		'based-on': new SearchParameterDefinition({
			'description': 'Plan/proposal/order fulfilled by this questionnaire response',
			'type': 'reference',
			'field': 'basedOn',
			'target': ['CarePlan', 'ServiceRequest'],
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Encounter associated with the questionnaire response',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'The unique identifier for the questionnaire response',
			'type': 'token',
			'field': 'identifier',
		}),
		'part-of': new SearchParameterDefinition({
			'description': 'Procedure or observation this questionnaire response was performed as a part of',
			'type': 'reference',
			'field': 'partOf',
			'target': ['Observation', 'Procedure'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'The patient that is the subject of the questionnaire response',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient'],
		}),
		'questionnaire': new SearchParameterDefinition({
			'description': 'The questionnaire the answers are provided for',
			'type': 'reference',
			'field': 'questionnaire',
			'target': ['Questionnaire'],
		}),
		'source': new SearchParameterDefinition({
			'description': 'The individual providing the information reflected in the questionnaire respose',
			'type': 'reference',
			'field': 'source',
			'target': ['Practitioner', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'The status of the questionnaire response',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'The subject of the questionnaire response',
			'type': 'reference',
			'field': 'subject',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
	},
	'RelatedPerson': {
		'active': new SearchParameterDefinition({
			'description': 'Indicates if the related person record is active',
			'type': 'token',
			'field': 'active',
		}),
		'address': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text',
			'type': 'string',
			'field': 'address',
		}),
		'address-city': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A city specified in an address* [Person](person.html): A city specified in an address* [Practitioner](practitioner.html): A city specified in an address* [RelatedPerson](relatedperson.html): A city specified in an address',
			'type': 'string',
			'field': 'address.city',
		}),
		'address-country': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A country specified in an address* [Person](person.html): A country specified in an address* [Practitioner](practitioner.html): A country specified in an address* [RelatedPerson](relatedperson.html): A country specified in an address',
			'type': 'string',
			'field': 'address.country',
		}),
		'address-postalcode': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A postalCode specified in an address* [Person](person.html): A postal code specified in an address* [Practitioner](practitioner.html): A postalCode specified in an address* [RelatedPerson](relatedperson.html): A postal code specified in an address',
			'type': 'string',
			'field': 'address.postalCode',
		}),
		'address-state': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A state specified in an address* [Person](person.html): A state specified in an address* [Practitioner](practitioner.html): A state specified in an address* [RelatedPerson](relatedperson.html): A state specified in an address',
			'type': 'string',
			'field': 'address.state',
		}),
		'address-use': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A use code specified in an address* [Person](person.html): A use code specified in an address* [Practitioner](practitioner.html): A use code specified in an address* [RelatedPerson](relatedperson.html): A use code specified in an address',
			'type': 'token',
			'field': 'address.use',
		}),
		'birthdate': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): The patients date of birth* [Person](person.html): The persons date of birth* [RelatedPerson](relatedperson.html): The Related Persons date of birth',
			'type': 'date',
			'field': 'birthDate',
		}),
		'email': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A value in an email contact* [Person](person.html): A value in an email contact* [Practitioner](practitioner.html): A value in an email contact* [PractitionerRole](practitionerrole.html): A value in an email contact* [RelatedPerson](relatedperson.html): A value in an email contact',
			'type': 'token',
			'field': 'telecom',
			'fieldFilter': '[system/@value=\'email\']',
		}),
		'gender': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): Gender of the patient* [Person](person.html): The gender of the person* [Practitioner](practitioner.html): Gender of the practitioner* [RelatedPerson](relatedperson.html): Gender of the related person',
			'type': 'token',
			'field': 'gender',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'An Identifier of the RelatedPerson',
			'type': 'token',
			'field': 'identifier',
		}),
		'name': new SearchParameterDefinition({
			'description': 'A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text',
			'type': 'string',
			'field': 'name',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'The patient this related person is related to',
			'type': 'reference',
			'field': 'patient',
			'target': ['Patient'],
		}),
		'phone': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A value in a phone contact* [Person](person.html): A value in a phone contact* [Practitioner](practitioner.html): A value in a phone contact* [PractitionerRole](practitionerrole.html): A value in a phone contact* [RelatedPerson](relatedperson.html): A value in a phone contact',
			'type': 'token',
			'field': 'telecom',
			'fieldFilter': '[system/@value=\'phone\']',
		}),
		'phonetic': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm* [Person](person.html): A portion of name using some kind of phonetic matching algorithm* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm',
			'type': 'string',
			'field': 'name',
		}),
		'relationship': new SearchParameterDefinition({
			'description': 'The relationship between the patient and the relatedperson',
			'type': 'token',
			'field': 'relationship',
		}),
		'telecom': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Patient](patient.html): The value in any kind of telecom details of the patient* [Person](person.html): The value in any kind of contact* [Practitioner](practitioner.html): The value in any kind of contact* [PractitionerRole](practitionerrole.html): The value in any kind of contact* [RelatedPerson](relatedperson.html): The value in any kind of contact',
			'type': 'token',
			'field': 'telecom',
		}),
	},
	'RequestGroup': {
		'author': new SearchParameterDefinition({
			'description': 'The author of the request group',
			'type': 'reference',
			'field': 'author',
			'target': ['Practitioner', 'Device', 'PractitionerRole'],
		}),
		'authored': new SearchParameterDefinition({
			'description': 'The date the request group was authored',
			'type': 'date',
			'field': 'authoredOn',
		}),
		'code': new SearchParameterDefinition({
			'description': 'The code of the request group',
			'type': 'token',
			'field': 'code',
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'The encounter the request group applies to',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter'],
		}),
		'group-identifier': new SearchParameterDefinition({
			'description': 'The group identifier for the request group',
			'type': 'token',
			'field': 'groupIdentifier',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'External identifiers for the request group',
			'type': 'token',
			'field': 'identifier',
		}),
		'instantiates-canonical': new SearchParameterDefinition({
			'description': 'The FHIR-based definition from which the request group is realized',
			'type': 'reference',
			'field': 'instantiatesCanonical',
		}),
		'instantiates-uri': new SearchParameterDefinition({
			'description': 'The external definition from which the request group is realized',
			'type': 'uri',
			'field': 'instantiatesUri',
		}),
		'intent': new SearchParameterDefinition({
			'description': 'The intent of the request group',
			'type': 'token',
			'field': 'intent',
		}),
		'participant': new SearchParameterDefinition({
			'description': 'The participant in the requests in the group',
			'type': 'reference',
			'field': 'action.participant',
			'target': ['Practitioner', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'The identity of a patient to search for request groups',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient'],
		}),
		'priority': new SearchParameterDefinition({
			'description': 'The priority of the request group',
			'type': 'token',
			'field': 'priority',
		}),
		'status': new SearchParameterDefinition({
			'description': 'The status of the request group',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'The subject that the request group is about',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Patient'],
		}),
	},
	'ResearchDefinition': {
		'composed-of': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'composed-of\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'context': new SearchParameterDefinition({
			'description': 'A use context assigned to the research definition',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'A quantity- or range-valued use context assigned to the research definition',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'A type of use context assigned to the research definition',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'The research definition publication date',
			'type': 'date',
			'field': 'date',
		}),
		'depends-on': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'fields': ['relatedArtifact.resource', 'library'],
			'fieldFilters': ['[type/@value=\'depends-on\']'],
			'target': ['Library', 'Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'derived-from': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'derived-from\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'description': new SearchParameterDefinition({
			'description': 'The description of the research definition',
			'type': 'string',
			'field': 'description',
		}),
		'effective': new SearchParameterDefinition({
			'description': 'The time during which the research definition is intended to be in use',
			'type': 'date',
			'field': 'effectivePeriod',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'External identifier for the research definition',
			'type': 'token',
			'field': 'identifier',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Intended jurisdiction for the research definition',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Computationally friendly name of the research definition',
			'type': 'string',
			'field': 'name',
		}),
		'predecessor': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'predecessor\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Name of the publisher of the research definition',
			'type': 'string',
			'field': 'publisher',
		}),
		'status': new SearchParameterDefinition({
			'description': 'The current status of the research definition',
			'type': 'token',
			'field': 'status',
		}),
		'successor': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'successor\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'title': new SearchParameterDefinition({
			'description': 'The human-friendly name of the research definition',
			'type': 'string',
			'field': 'title',
		}),
		'topic': new SearchParameterDefinition({
			'description': 'Topics associated with the ResearchDefinition',
			'type': 'token',
			'field': 'topic',
		}),
		'url': new SearchParameterDefinition({
			'description': 'The uri that identifies the research definition',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'The business version of the research definition',
			'type': 'token',
			'field': 'version',
		}),
	},
	'ResearchElementDefinition': {
		'composed-of': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'composed-of\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'context': new SearchParameterDefinition({
			'description': 'A use context assigned to the research element definition',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'A quantity- or range-valued use context assigned to the research element definition',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'A type of use context assigned to the research element definition',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'The research element definition publication date',
			'type': 'date',
			'field': 'date',
		}),
		'depends-on': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'fields': ['relatedArtifact.resource', 'library'],
			'fieldFilters': ['[type/@value=\'depends-on\']'],
			'target': ['Library', 'Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'derived-from': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'derived-from\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'description': new SearchParameterDefinition({
			'description': 'The description of the research element definition',
			'type': 'string',
			'field': 'description',
		}),
		'effective': new SearchParameterDefinition({
			'description': 'The time during which the research element definition is intended to be in use',
			'type': 'date',
			'field': 'effectivePeriod',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'External identifier for the research element definition',
			'type': 'token',
			'field': 'identifier',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Intended jurisdiction for the research element definition',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Computationally friendly name of the research element definition',
			'type': 'string',
			'field': 'name',
		}),
		'predecessor': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'predecessor\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Name of the publisher of the research element definition',
			'type': 'string',
			'field': 'publisher',
		}),
		'status': new SearchParameterDefinition({
			'description': 'The current status of the research element definition',
			'type': 'token',
			'field': 'status',
		}),
		'successor': new SearchParameterDefinition({
			'description': 'What resource is being referenced',
			'type': 'reference',
			'field': 'relatedArtifact.resource',
			'fieldFilter': '[type/@value=\'successor\']',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'title': new SearchParameterDefinition({
			'description': 'The human-friendly name of the research element definition',
			'type': 'string',
			'field': 'title',
		}),
		'topic': new SearchParameterDefinition({
			'description': 'Topics associated with the ResearchElementDefinition',
			'type': 'token',
			'field': 'topic',
		}),
		'url': new SearchParameterDefinition({
			'description': 'The uri that identifies the research element definition',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'The business version of the research element definition',
			'type': 'token',
			'field': 'version',
		}),
	},
	'ResearchStudy': {
		'category': new SearchParameterDefinition({
			'description': 'Classifications for the study',
			'type': 'token',
			'field': 'category',
		}),
		'date': new SearchParameterDefinition({
			'description': 'When the study began and ended',
			'type': 'date',
			'field': 'period',
		}),
		'focus': new SearchParameterDefinition({
			'description': 'Drugs, devices, etc. under study',
			'type': 'token',
			'field': 'focus',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Business Identifier for study',
			'type': 'token',
			'field': 'identifier',
		}),
		'keyword': new SearchParameterDefinition({
			'description': 'Used to search for the study',
			'type': 'token',
			'field': 'keyword',
		}),
		'location': new SearchParameterDefinition({
			'description': 'Geographic region(s) for study',
			'type': 'token',
			'field': 'location',
		}),
		'partof': new SearchParameterDefinition({
			'description': 'Part of larger study',
			'type': 'reference',
			'field': 'partOf',
			'target': ['ResearchStudy'],
		}),
		'principalinvestigator': new SearchParameterDefinition({
			'description': 'Researcher who oversees multiple aspects of the study',
			'type': 'reference',
			'field': 'principalInvestigator',
			'target': ['Practitioner', 'PractitionerRole'],
		}),
		'protocol': new SearchParameterDefinition({
			'description': 'Steps followed in executing study',
			'type': 'reference',
			'field': 'protocol',
			'target': ['PlanDefinition'],
		}),
		'site': new SearchParameterDefinition({
			'description': 'Facility where study activities are conducted',
			'type': 'reference',
			'field': 'site',
			'target': ['Location'],
		}),
		'sponsor': new SearchParameterDefinition({
			'description': 'Organization that initiates and is legally responsible for the study',
			'type': 'reference',
			'field': 'sponsor',
			'target': ['Organization'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'active | administratively-completed | approved | closed-to-accrual | closed-to-accrual-and-intervention | completed | disapproved | in-review | temporarily-closed-to-accrual | temporarily-closed-to-accrual-and-intervention | withdrawn',
			'type': 'token',
			'field': 'status',
		}),
		'title': new SearchParameterDefinition({
			'description': 'Name for this study',
			'type': 'string',
			'field': 'title',
		}),
	},
	'ResearchSubject': {
		'date': new SearchParameterDefinition({
			'description': 'Start and end of participation',
			'type': 'date',
			'field': 'period',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Business Identifier for research subject in a study',
			'type': 'token',
			'field': 'identifier',
		}),
		'individual': new SearchParameterDefinition({
			'description': 'Who is part of study',
			'type': 'reference',
			'field': 'individual',
			'target': ['Patient'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Who is part of study',
			'type': 'reference',
			'field': 'individual',
			'target': ['Patient'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'candidate | eligible | follow-up | ineligible | not-registered | off-study | on-study | on-study-intervention | on-study-observation | pending-on-study | potential-candidate | screening | withdrawn',
			'type': 'token',
			'field': 'status',
		}),
		'study': new SearchParameterDefinition({
			'description': 'Study subject is part of',
			'type': 'reference',
			'field': 'study',
			'target': ['ResearchStudy'],
		}),
	},
	'Resource': {
		'_id': new SearchParameterDefinition({
			'description': 'Logical id of this artifact',
			'type': 'token',
			'field': 'id',
		}),
		'_lastUpdated': new SearchParameterDefinition({
			'description': 'When the resource version last changed',
			'type': 'date',
			'field': 'meta.lastUpdated',
		}),
		'_profile': new SearchParameterDefinition({
			'description': 'Profiles this resource claims to conform to',
			'type': 'uri',
			'field': 'meta.profile',
		}),
		'_security': new SearchParameterDefinition({
			'description': 'Security Labels applied to this resource',
			'type': 'token',
			'field': 'meta.security',
		}),
		'_source': new SearchParameterDefinition({
			'description': 'Identifies where the resource comes from',
			'type': 'uri',
			'field': 'meta.source',
		}),
		'_tag': new SearchParameterDefinition({
			'description': 'Tags applied to this resource',
			'type': 'token',
			'field': 'meta.tag',
		}),
	},
	'RiskAssessment': {
		'condition': new SearchParameterDefinition({
			'description': 'Condition assessed',
			'type': 'reference',
			'field': 'condition',
			'target': ['Condition'],
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of cares period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made',
			'type': 'date',
			'field': 'occurrenceDateTime',
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter', 'EpisodeOfCare'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'method': new SearchParameterDefinition({
			'description': 'Evaluation mechanism',
			'type': 'token',
			'field': 'method',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'performer': new SearchParameterDefinition({
			'description': 'Who did assessment?',
			'type': 'reference',
			'field': 'performer',
			'target': ['Practitioner', 'Device', 'PractitionerRole'],
		}),
		'probability': new SearchParameterDefinition({
			'description': 'Likelihood of specified outcome',
			'type': 'number',
			'fields': ['prediction.probabilityDecimal', 'prediction.probabilityRange'],
		}),
		'risk': new SearchParameterDefinition({
			'description': 'Likelihood of specified outcome as a qualitative value',
			'type': 'token',
			'field': 'prediction.qualitativeRisk',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'Who/what does assessment apply to?',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Patient'],
		}),
	},
	'RiskEvidenceSynthesis': {
		'context': new SearchParameterDefinition({
			'description': 'A use context assigned to the risk evidence synthesis',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'A quantity- or range-valued use context assigned to the risk evidence synthesis',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'A type of use context assigned to the risk evidence synthesis',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'The risk evidence synthesis publication date',
			'type': 'date',
			'field': 'date',
		}),
		'description': new SearchParameterDefinition({
			'description': 'The description of the risk evidence synthesis',
			'type': 'string',
			'field': 'description',
		}),
		'effective': new SearchParameterDefinition({
			'description': 'The time during which the risk evidence synthesis is intended to be in use',
			'type': 'date',
			'field': 'effectivePeriod',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'External identifier for the risk evidence synthesis',
			'type': 'token',
			'field': 'identifier',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Intended jurisdiction for the risk evidence synthesis',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Computationally friendly name of the risk evidence synthesis',
			'type': 'string',
			'field': 'name',
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Name of the publisher of the risk evidence synthesis',
			'type': 'string',
			'field': 'publisher',
		}),
		'status': new SearchParameterDefinition({
			'description': 'The current status of the risk evidence synthesis',
			'type': 'token',
			'field': 'status',
		}),
		'title': new SearchParameterDefinition({
			'description': 'The human-friendly name of the risk evidence synthesis',
			'type': 'string',
			'field': 'title',
		}),
		'url': new SearchParameterDefinition({
			'description': 'The uri that identifies the risk evidence synthesis',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'The business version of the risk evidence synthesis',
			'type': 'token',
			'field': 'version',
		}),
	},
	'Schedule': {
		'active': new SearchParameterDefinition({
			'description': 'Is the schedule in active use',
			'type': 'token',
			'field': 'active',
		}),
		'actor': new SearchParameterDefinition({
			'description': 'The individual(HealthcareService, Practitioner, Location, ...) to find a Schedule for',
			'type': 'reference',
			'field': 'actor',
			'target': ['Practitioner', 'Device', 'Patient', 'HealthcareService', 'PractitionerRole', 'RelatedPerson', 'Location'],
		}),
		'date': new SearchParameterDefinition({
			'description': 'Search for Schedule resources that have a period that contains this date specified',
			'type': 'date',
			'field': 'planningHorizon',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'A Schedule Identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'service-category': new SearchParameterDefinition({
			'description': 'High-level category',
			'type': 'token',
			'field': 'serviceCategory',
		}),
		'service-type': new SearchParameterDefinition({
			'description': 'The type of appointments that can be booked into associated slot(s)',
			'type': 'token',
			'field': 'serviceType',
		}),
		'specialty': new SearchParameterDefinition({
			'description': 'Type of specialty needed',
			'type': 'token',
			'field': 'specialty',
		}),
	},
	'SearchParameter': {
		'base': new SearchParameterDefinition({
			'description': 'The resource type(s) this search parameter applies to',
			'type': 'token',
			'field': 'base',
		}),
		'code': new SearchParameterDefinition({
			'description': 'Code used in URL',
			'type': 'token',
			'field': 'code',
		}),
		'component': new SearchParameterDefinition({
			'description': 'Defines how the part works',
			'type': 'reference',
			'field': 'component.definition',
			'target': ['SearchParameter'],
		}),
		'context': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date',
			'type': 'date',
			'field': 'date',
		}),
		'derived-from': new SearchParameterDefinition({
			'description': 'Original definition for the search parameter',
			'type': 'reference',
			'field': 'derivedFrom',
			'target': ['SearchParameter'],
		}),
		'description': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set',
			'type': 'string',
			'field': 'description',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set',
			'type': 'string',
			'field': 'name',
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set',
			'type': 'string',
			'field': 'publisher',
		}),
		'status': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set',
			'type': 'token',
			'field': 'status',
		}),
		'target': new SearchParameterDefinition({
			'description': 'Types of resource (if a resource reference)',
			'type': 'token',
			'field': 'target',
		}),
		'type': new SearchParameterDefinition({
			'description': 'number | date | string | token | reference | composite | quantity | uri | special',
			'type': 'token',
			'field': 'type',
		}),
		'url': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set',
			'type': 'token',
			'field': 'version',
		}),
	},
	'ServiceRequest': {
		'authored': new SearchParameterDefinition({
			'description': 'Date request signed',
			'type': 'date',
			'field': 'authoredOn',
		}),
		'based-on': new SearchParameterDefinition({
			'description': 'What request fulfills',
			'type': 'reference',
			'field': 'basedOn',
			'target': ['CarePlan', 'MedicationRequest', 'ServiceRequest'],
		}),
		'body-site': new SearchParameterDefinition({
			'description': 'Where procedure is going to be done',
			'type': 'token',
			'field': 'bodySite',
		}),
		'category': new SearchParameterDefinition({
			'description': 'Classification of service',
			'type': 'token',
			'field': 'category',
		}),
		'code': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered',
			'type': 'token',
			'field': 'code',
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter', 'EpisodeOfCare'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'instantiates-canonical': new SearchParameterDefinition({
			'description': 'Instantiates FHIR protocol or definition',
			'type': 'reference',
			'field': 'instantiatesCanonical',
			'target': ['PlanDefinition', 'ActivityDefinition'],
		}),
		'instantiates-uri': new SearchParameterDefinition({
			'description': 'Instantiates external protocol or definition',
			'type': 'uri',
			'field': 'instantiatesUri',
		}),
		'intent': new SearchParameterDefinition({
			'description': 'proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option',
			'type': 'token',
			'field': 'intent',
		}),
		'occurrence': new SearchParameterDefinition({
			'description': 'When service should occur',
			'type': 'date',
			'fields': ['occurrenceDateTime', 'occurrencePeriod', 'occurrenceTiming'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient', 'Group'],
		}),
		'performer': new SearchParameterDefinition({
			'description': 'Requested performer',
			'type': 'reference',
			'field': 'performer',
			'target': ['Practitioner', 'Organization', 'CareTeam', 'Device', 'Patient', 'HealthcareService', 'PractitionerRole', 'RelatedPerson'],
		}),
		'performer-type': new SearchParameterDefinition({
			'description': 'Performer role',
			'type': 'token',
			'field': 'performerType',
		}),
		'priority': new SearchParameterDefinition({
			'description': 'routine | urgent | asap | stat',
			'type': 'token',
			'field': 'priority',
		}),
		'replaces': new SearchParameterDefinition({
			'description': 'What request replaces',
			'type': 'reference',
			'field': 'replaces',
			'target': ['ServiceRequest'],
		}),
		'requester': new SearchParameterDefinition({
			'description': 'Who/what is requesting service',
			'type': 'reference',
			'field': 'requester',
			'target': ['Practitioner', 'Organization', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'requisition': new SearchParameterDefinition({
			'description': 'Composite Request ID',
			'type': 'token',
			'field': 'requisition',
		}),
		'specimen': new SearchParameterDefinition({
			'description': 'Specimen to be tested',
			'type': 'reference',
			'field': 'specimen',
			'target': ['Specimen'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'draft | active | on-hold | revoked | completed | entered-in-error | unknown',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'Search by subject',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Device', 'Patient', 'Location'],
		}),
	},
	'Slot': {
		'appointment-type': new SearchParameterDefinition({
			'description': 'The style of appointment or patient that may be booked in the slot (not service type)',
			'type': 'token',
			'field': 'appointmentType',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'A Slot Identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'schedule': new SearchParameterDefinition({
			'description': 'The Schedule Resource that we are seeking a slot within',
			'type': 'reference',
			'field': 'schedule',
			'target': ['Schedule'],
		}),
		'service-category': new SearchParameterDefinition({
			'description': 'A broad categorization of the service that is to be performed during this appointment',
			'type': 'token',
			'field': 'serviceCategory',
		}),
		'service-type': new SearchParameterDefinition({
			'description': 'The type of appointments that can be booked into the slot',
			'type': 'token',
			'field': 'serviceType',
		}),
		'specialty': new SearchParameterDefinition({
			'description': 'The specialty of a practitioner that would be required to perform the service requested in this appointment',
			'type': 'token',
			'field': 'specialty',
		}),
		'start': new SearchParameterDefinition({
			'description': 'Appointment date/time.',
			'type': 'date',
			'field': 'start',
		}),
		'status': new SearchParameterDefinition({
			'description': 'The free/busy status of the appointment',
			'type': 'token',
			'field': 'status',
		}),
	},
	'Specimen': {
		'accession': new SearchParameterDefinition({
			'description': 'The accession number associated with the specimen',
			'type': 'token',
			'field': 'accessionIdentifier',
		}),
		'bodysite': new SearchParameterDefinition({
			'description': 'The code for the body site from where the specimen originated',
			'type': 'token',
			'field': 'collection.bodySite',
		}),
		'collected': new SearchParameterDefinition({
			'description': 'The date the specimen was collected',
			'type': 'date',
			'fields': ['collection.collectedDateTime', 'collection.collectedPeriod'],
		}),
		'collector': new SearchParameterDefinition({
			'description': 'Who collected the specimen',
			'type': 'reference',
			'field': 'collection.collector',
			'target': ['Practitioner', 'PractitionerRole'],
		}),
		'container': new SearchParameterDefinition({
			'description': 'The kind of specimen container',
			'type': 'token',
			'field': 'container.type',
		}),
		'container-id': new SearchParameterDefinition({
			'description': 'The unique identifier associated with the specimen container',
			'type': 'token',
			'field': 'container.identifier',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'The unique identifier associated with the specimen',
			'type': 'token',
			'field': 'identifier',
		}),
		'parent': new SearchParameterDefinition({
			'description': 'The parent of the specimen',
			'type': 'reference',
			'field': 'parent',
			'target': ['Specimen'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'The patient the specimen comes from',
			'type': 'reference',
			'field': 'subject',
			'target': ['Patient'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'available | unavailable | unsatisfactory | entered-in-error',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'The subject of the specimen',
			'type': 'reference',
			'field': 'subject',
			'target': ['Group', 'Device', 'Patient', 'Substance', 'Location'],
		}),
		'type': new SearchParameterDefinition({
			'description': 'The specimen type',
			'type': 'token',
			'field': 'type',
		}),
	},
	'SpecimenDefinition': {
		'container': new SearchParameterDefinition({
			'description': 'The type of specimen conditioned in container expected by the lab',
			'type': 'token',
			'field': 'typeTested.container.type',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'The unique identifier associated with the specimen',
			'type': 'token',
			'field': 'identifier',
		}),
		'type': new SearchParameterDefinition({
			'description': 'The type of collected specimen',
			'type': 'token',
			'field': 'typeCollected',
		}),
	},
	'StructureDefinition': {
		'abstract': new SearchParameterDefinition({
			'description': 'Whether the structure is abstract',
			'type': 'token',
			'field': 'abstract',
		}),
		'base': new SearchParameterDefinition({
			'description': 'Definition that this type is constrained/specialized from',
			'type': 'reference',
			'field': 'baseDefinition',
			'target': ['StructureDefinition'],
		}),
		'base-path': new SearchParameterDefinition({
			'description': 'Path that identifies the base element',
			'type': 'token',
			'fields': ['snapshot.element.base.path', 'differential.element.base.path'],
		}),
		'context': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date',
			'type': 'date',
			'field': 'date',
		}),
		'derivation': new SearchParameterDefinition({
			'description': 'specialization | constraint - How relates to base definition',
			'type': 'token',
			'field': 'derivation',
		}),
		'description': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set',
			'type': 'string',
			'field': 'description',
		}),
		'experimental': new SearchParameterDefinition({
			'description': 'For testing purposes, not real usage',
			'type': 'token',
			'field': 'experimental',
		}),
		'ext-context': new SearchParameterDefinition({
			'description': 'The system is the URL for the context-type: e.g. http://hl7.org/fhir/extension-context-type#element|CodeableConcept.text',
			'type': 'token',
			'field': 'context.type',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CodeSystem](codesystem.html): External identifier for the code system* [ConceptMap](conceptmap.html): External identifier for the concept map* [MessageDefinition](messagedefinition.html): External identifier for the message definition* [StructureDefinition](structuredefinition.html): External identifier for the structure definition* [StructureMap](structuremap.html): External identifier for the structure map* [ValueSet](valueset.html): External identifier for the value set',
			'type': 'token',
			'field': 'identifier',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'keyword': new SearchParameterDefinition({
			'description': 'A code for the StructureDefinition',
			'type': 'token',
			'field': 'keyword',
		}),
		'kind': new SearchParameterDefinition({
			'description': 'primitive-type | complex-type | resource | logical',
			'type': 'token',
			'field': 'kind',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set',
			'type': 'string',
			'field': 'name',
		}),
		'path': new SearchParameterDefinition({
			'description': 'A path that is constrained in the StructureDefinition',
			'type': 'token',
			'fields': ['snapshot.element.path', 'differential.element.path'],
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set',
			'type': 'string',
			'field': 'publisher',
		}),
		'status': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set',
			'type': 'token',
			'field': 'status',
		}),
		'title': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement* [CodeSystem](codesystem.html): The human-friendly name of the code system* [ConceptMap](conceptmap.html): The human-friendly name of the concept map* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition* [StructureMap](structuremap.html): The human-friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities* [ValueSet](valueset.html): The human-friendly name of the value set',
			'type': 'string',
			'field': 'title',
		}),
		'type': new SearchParameterDefinition({
			'description': 'Type defined or constrained by this structure',
			'type': 'uri',
			'field': 'type',
		}),
		'url': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set',
			'type': 'uri',
			'field': 'url',
		}),
		'valueset': new SearchParameterDefinition({
			'description': 'A vocabulary binding reference',
			'type': 'reference',
			'field': 'snapshot.element.binding.valueSet',
			'target': ['ValueSet'],
		}),
		'version': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set',
			'type': 'token',
			'field': 'version',
		}),
	},
	'StructureMap': {
		'context': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date',
			'type': 'date',
			'field': 'date',
		}),
		'description': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set',
			'type': 'string',
			'field': 'description',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CodeSystem](codesystem.html): External identifier for the code system* [ConceptMap](conceptmap.html): External identifier for the concept map* [MessageDefinition](messagedefinition.html): External identifier for the message definition* [StructureDefinition](structuredefinition.html): External identifier for the structure definition* [StructureMap](structuremap.html): External identifier for the structure map* [ValueSet](valueset.html): External identifier for the value set',
			'type': 'token',
			'field': 'identifier',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set',
			'type': 'string',
			'field': 'name',
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set',
			'type': 'string',
			'field': 'publisher',
		}),
		'status': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set',
			'type': 'token',
			'field': 'status',
		}),
		'title': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement* [CodeSystem](codesystem.html): The human-friendly name of the code system* [ConceptMap](conceptmap.html): The human-friendly name of the concept map* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition* [StructureMap](structuremap.html): The human-friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities* [ValueSet](valueset.html): The human-friendly name of the value set',
			'type': 'string',
			'field': 'title',
		}),
		'url': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set',
			'type': 'token',
			'field': 'version',
		}),
	},
	'Subscription': {
		'contact': new SearchParameterDefinition({
			'description': 'Contact details for the subscription',
			'type': 'token',
			'field': 'contact',
		}),
		'criteria': new SearchParameterDefinition({
			'description': 'The search rules used to determine when to send a notification',
			'type': 'string',
			'field': 'criteria',
		}),
		'payload': new SearchParameterDefinition({
			'description': 'The mime-type of the notification payload',
			'type': 'token',
			'field': 'channel.payload',
		}),
		'status': new SearchParameterDefinition({
			'description': 'The current state of the subscription',
			'type': 'token',
			'field': 'status',
		}),
		'type': new SearchParameterDefinition({
			'description': 'The type of channel for the sent notifications',
			'type': 'token',
			'field': 'channel.type',
		}),
		'url': new SearchParameterDefinition({
			'description': 'The uri that will receive the notifications',
			'type': 'uri',
			'field': 'channel.endpoint',
		}),
	},
	'Substance': {
		'category': new SearchParameterDefinition({
			'description': 'The category of the substance',
			'type': 'token',
			'field': 'category',
		}),
		'code': new SearchParameterDefinition({
			'description': 'The code of the substance or ingredient',
			'type': 'token',
			'fields': ['code', 'ingredient.substanceCodeableConcept'],
		}),
		'container-identifier': new SearchParameterDefinition({
			'description': 'Identifier of the package/container',
			'type': 'token',
			'field': 'instance.identifier',
		}),
		'expiry': new SearchParameterDefinition({
			'description': 'Expiry date of package or container of substance',
			'type': 'date',
			'field': 'instance.expiry',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Unique identifier for the substance',
			'type': 'token',
			'field': 'identifier',
		}),
		'quantity': new SearchParameterDefinition({
			'description': 'Amount of substance in the package',
			'type': 'quantity',
			'field': 'instance.quantity',
		}),
		'status': new SearchParameterDefinition({
			'description': 'active | inactive | entered-in-error',
			'type': 'token',
			'field': 'status',
		}),
		'substance-reference': new SearchParameterDefinition({
			'description': 'A component of the substance',
			'type': 'reference',
			'field': 'ingredient.substanceReference',
			'target': ['Substance'],
		}),
	},
	'SubstanceSpecification': {
		'code': new SearchParameterDefinition({
			'description': 'The specific code',
			'type': 'token',
			'field': 'code.code',
		}),
	},
	'SupplyDelivery': {
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'patient',
			'target': ['Patient', 'Group'],
		}),
		'receiver': new SearchParameterDefinition({
			'description': 'Who collected the Supply',
			'type': 'reference',
			'field': 'receiver',
			'target': ['Practitioner', 'PractitionerRole'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'in-progress | completed | abandoned | entered-in-error',
			'type': 'token',
			'field': 'status',
		}),
		'supplier': new SearchParameterDefinition({
			'description': 'Dispenser',
			'type': 'reference',
			'field': 'supplier',
			'target': ['Practitioner', 'Organization', 'PractitionerRole'],
		}),
	},
	'SupplyRequest': {
		'category': new SearchParameterDefinition({
			'description': 'The kind of supply (central, non-stock, etc.)',
			'type': 'token',
			'field': 'category',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of cares period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made',
			'type': 'date',
			'field': 'authoredOn',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'requester': new SearchParameterDefinition({
			'description': 'Individual making the request',
			'type': 'reference',
			'field': 'requester',
			'target': ['Practitioner', 'Organization', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'draft | active | suspended +',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'The destination of the supply',
			'type': 'reference',
			'field': 'deliverTo',
			'target': ['Organization', 'Patient', 'Location'],
		}),
		'supplier': new SearchParameterDefinition({
			'description': 'Who is intended to fulfill the request',
			'type': 'reference',
			'field': 'supplier',
			'target': ['Organization', 'HealthcareService'],
		}),
	},
	'Task': {
		'authored-on': new SearchParameterDefinition({
			'description': 'Search by creation date',
			'type': 'date',
			'field': 'authoredOn',
		}),
		'based-on': new SearchParameterDefinition({
			'description': 'Search by requests this task is based on',
			'type': 'reference',
			'field': 'basedOn',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'business-status': new SearchParameterDefinition({
			'description': 'Search by business status',
			'type': 'token',
			'field': 'businessStatus',
		}),
		'code': new SearchParameterDefinition({
			'description': 'Search by task code',
			'type': 'token',
			'field': 'code',
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Search by encounter',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter'],
		}),
		'focus': new SearchParameterDefinition({
			'description': 'Search by task focus',
			'type': 'reference',
			'field': 'focus',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
		'group-identifier': new SearchParameterDefinition({
			'description': 'Search by group identifier',
			'type': 'token',
			'field': 'groupIdentifier',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Search for a task instance by its business identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'intent': new SearchParameterDefinition({
			'description': 'Search by task intent',
			'type': 'token',
			'field': 'intent',
		}),
		'modified': new SearchParameterDefinition({
			'description': 'Search by last modification date',
			'type': 'date',
			'field': 'lastModified',
		}),
		'owner': new SearchParameterDefinition({
			'description': 'Search by task owner',
			'type': 'reference',
			'field': 'owner',
			'target': ['Practitioner', 'Organization', 'CareTeam', 'Device', 'Patient', 'HealthcareService', 'PractitionerRole', 'RelatedPerson'],
		}),
		'part-of': new SearchParameterDefinition({
			'description': 'Search by task this task is part of',
			'type': 'reference',
			'field': 'partOf',
			'target': ['Task'],
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Search by patient',
			'type': 'reference',
			'field': 'for',
			'target': ['Patient'],
		}),
		'performer': new SearchParameterDefinition({
			'description': 'Search by recommended type of performer (e.g., Requester, Performer, Scheduler).',
			'type': 'token',
			'field': 'performerType',
		}),
		'period': new SearchParameterDefinition({
			'description': 'Search by period Task is/was underway',
			'type': 'date',
			'field': 'executionPeriod',
		}),
		'priority': new SearchParameterDefinition({
			'description': 'Search by task priority',
			'type': 'token',
			'field': 'priority',
		}),
		'requester': new SearchParameterDefinition({
			'description': 'Search by task requester',
			'type': 'reference',
			'field': 'requester',
			'target': ['Practitioner', 'Organization', 'Device', 'Patient', 'PractitionerRole', 'RelatedPerson'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'Search by task status',
			'type': 'token',
			'field': 'status',
		}),
		'subject': new SearchParameterDefinition({
			'description': 'Search by subject',
			'type': 'reference',
			'field': 'for',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
	},
	'TerminologyCapabilities': {
		'context': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date',
			'type': 'date',
			'field': 'date',
		}),
		'description': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set',
			'type': 'string',
			'field': 'description',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set',
			'type': 'string',
			'field': 'name',
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set',
			'type': 'string',
			'field': 'publisher',
		}),
		'status': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set',
			'type': 'token',
			'field': 'status',
		}),
		'title': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement* [CodeSystem](codesystem.html): The human-friendly name of the code system* [ConceptMap](conceptmap.html): The human-friendly name of the concept map* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition* [StructureMap](structuremap.html): The human-friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities* [ValueSet](valueset.html): The human-friendly name of the value set',
			'type': 'string',
			'field': 'title',
		}),
		'url': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set',
			'type': 'token',
			'field': 'version',
		}),
	},
	'TestReport': {
		'identifier': new SearchParameterDefinition({
			'description': 'An external identifier for the test report',
			'type': 'token',
			'field': 'identifier',
		}),
		'issued': new SearchParameterDefinition({
			'description': 'The test report generation date',
			'type': 'date',
			'field': 'issued',
		}),
		'participant': new SearchParameterDefinition({
			'description': 'The reference to a participant in the test execution',
			'type': 'uri',
			'field': 'participant.uri',
		}),
		'result': new SearchParameterDefinition({
			'description': 'The result disposition of the test execution',
			'type': 'token',
			'field': 'result',
		}),
		'tester': new SearchParameterDefinition({
			'description': 'The name of the testing organization',
			'type': 'string',
			'field': 'tester',
		}),
		'testscript': new SearchParameterDefinition({
			'description': 'The test script executed to produce this report',
			'type': 'reference',
			'field': 'testScript',
			'target': ['TestScript'],
		}),
	},
	'TestScript': {
		'context': new SearchParameterDefinition({
			'description': 'A use context assigned to the test script',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'A quantity- or range-valued use context assigned to the test script',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'A type of use context assigned to the test script',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'The test script publication date',
			'type': 'date',
			'field': 'date',
		}),
		'description': new SearchParameterDefinition({
			'description': 'The description of the test script',
			'type': 'string',
			'field': 'description',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'External identifier for the test script',
			'type': 'token',
			'field': 'identifier',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Intended jurisdiction for the test script',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Computationally friendly name of the test script',
			'type': 'string',
			'field': 'name',
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Name of the publisher of the test script',
			'type': 'string',
			'field': 'publisher',
		}),
		'status': new SearchParameterDefinition({
			'description': 'The current status of the test script',
			'type': 'token',
			'field': 'status',
		}),
		'testscript-capability': new SearchParameterDefinition({
			'description': 'TestScript required and validated capability',
			'type': 'string',
			'field': 'metadata.capability.description',
		}),
		'title': new SearchParameterDefinition({
			'description': 'The human-friendly name of the test script',
			'type': 'string',
			'field': 'title',
		}),
		'url': new SearchParameterDefinition({
			'description': 'The uri that identifies the test script',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'The business version of the test script',
			'type': 'token',
			'field': 'version',
		}),
	},
	'ValueSet': {
		'code': new SearchParameterDefinition({
			'description': 'This special parameter searches for codes in the value set. See additional notes on the ValueSet resource',
			'type': 'token',
			'fields': ['expansion.contains.code', 'compose.include.concept.code'],
		}),
		'context': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.valueCodeableConcept',
		}),
		'context-quantity': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set',
			'type': 'quantity',
			'fields': ['useContext.valueQuantity', 'useContext.valueRange'],
		}),
		'context-type': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set',
			'type': 'token',
			'field': 'useContext.code',
		}),
		'date': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date',
			'type': 'date',
			'field': 'date',
		}),
		'description': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set',
			'type': 'string',
			'field': 'description',
		}),
		'expansion': new SearchParameterDefinition({
			'description': 'Identifies the value set expansion (business identifier)',
			'type': 'uri',
			'field': 'expansion.identifier',
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CodeSystem](codesystem.html): External identifier for the code system* [ConceptMap](conceptmap.html): External identifier for the concept map* [MessageDefinition](messagedefinition.html): External identifier for the message definition* [StructureDefinition](structuredefinition.html): External identifier for the structure definition* [StructureMap](structuremap.html): External identifier for the structure map* [ValueSet](valueset.html): External identifier for the value set',
			'type': 'token',
			'field': 'identifier',
		}),
		'jurisdiction': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set',
			'type': 'token',
			'field': 'jurisdiction',
		}),
		'name': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set',
			'type': 'string',
			'field': 'name',
		}),
		'publisher': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set',
			'type': 'string',
			'field': 'publisher',
		}),
		'reference': new SearchParameterDefinition({
			'description': 'A code system included or excluded in the value set or an imported value set',
			'type': 'uri',
			'field': 'compose.include.system',
		}),
		'status': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set',
			'type': 'token',
			'field': 'status',
		}),
		'title': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement* [CodeSystem](codesystem.html): The human-friendly name of the code system* [ConceptMap](conceptmap.html): The human-friendly name of the concept map* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition* [StructureMap](structuremap.html): The human-friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities* [ValueSet](valueset.html): The human-friendly name of the value set',
			'type': 'string',
			'field': 'title',
		}),
		'url': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set',
			'type': 'uri',
			'field': 'url',
		}),
		'version': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set',
			'type': 'token',
			'field': 'version',
		}),
	},
	'VerificationResult': {
		'target': new SearchParameterDefinition({
			'description': 'A resource that was validated',
			'type': 'reference',
			'field': 'target',
			'target': ['Account', 'ActivityDefinition', 'AdverseEvent', 'AllergyIntolerance', 'Appointment', 'AppointmentResponse', 'AuditEvent', 'Basic', 'Binary', 'BiologicallyDerivedProduct', 'BodyStructure', 'Bundle', 'CapabilityStatement', 'CarePlan', 'CareTeam', 'CatalogEntry', 'ChargeItem', 'ChargeItemDefinition', 'Claim', 'ClaimResponse', 'ClinicalImpression', 'CodeSystem', 'Communication', 'CommunicationRequest', 'CompartmentDefinition', 'Composition', 'ConceptMap', 'Condition', 'Consent', 'Contract', 'Coverage', 'CoverageEligibilityRequest', 'CoverageEligibilityResponse', 'DetectedIssue', 'Device', 'DeviceDefinition', 'DeviceMetric', 'DeviceRequest', 'DeviceUseStatement', 'DiagnosticReport', 'DocumentManifest', 'DocumentReference', 'EffectEvidenceSynthesis', 'Encounter', 'Endpoint', 'EnrollmentRequest', 'EnrollmentResponse', 'EpisodeOfCare', 'EventDefinition', 'Evidence', 'EvidenceVariable', 'ExampleScenario', 'ExplanationOfBenefit', 'FamilyMemberHistory', 'Flag', 'Goal', 'GraphDefinition', 'Group', 'GuidanceResponse', 'HealthcareService', 'ImagingStudy', 'Immunization', 'ImmunizationEvaluation', 'ImmunizationRecommendation', 'ImplementationGuide', 'InsurancePlan', 'Invoice', 'Library', 'Linkage', 'List', 'Location', 'Measure', 'MeasureReport', 'Media', 'Medication', 'MedicationAdministration', 'MedicationDispense', 'MedicationKnowledge', 'MedicationRequest', 'MedicationStatement', 'MedicinalProduct', 'MedicinalProductAuthorization', 'MedicinalProductContraindication', 'MedicinalProductIndication', 'MedicinalProductIngredient', 'MedicinalProductInteraction', 'MedicinalProductManufactured', 'MedicinalProductPackaged', 'MedicinalProductPharmaceutical', 'MedicinalProductUndesirableEffect', 'MessageDefinition', 'MessageHeader', 'MolecularSequence', 'NamingSystem', 'NutritionOrder', 'Observation', 'ObservationDefinition', 'OperationDefinition', 'OperationOutcome', 'Organization', 'OrganizationAffiliation', 'Patient', 'PaymentNotice', 'PaymentReconciliation', 'Person', 'PlanDefinition', 'Practitioner', 'PractitionerRole', 'Procedure', 'Provenance', 'Questionnaire', 'QuestionnaireResponse', 'RelatedPerson', 'RequestGroup', 'ResearchDefinition', 'ResearchElementDefinition', 'ResearchStudy', 'ResearchSubject', 'RiskAssessment', 'RiskEvidenceSynthesis', 'Schedule', 'SearchParameter', 'ServiceRequest', 'Slot', 'Specimen', 'SpecimenDefinition', 'StructureDefinition', 'StructureMap', 'Subscription', 'Substance', 'SubstanceNucleicAcid', 'SubstancePolymer', 'SubstanceProtein', 'SubstanceReferenceInformation', 'SubstanceSourceMaterial', 'SubstanceSpecification', 'SupplyDelivery', 'SupplyRequest', 'Task', 'TerminologyCapabilities', 'TestReport', 'TestScript', 'ValueSet', 'VerificationResult', 'VisionPrescription'],
		}),
	},
	'VisionPrescription': {
		'datewritten': new SearchParameterDefinition({
			'description': 'Return prescriptions written on this date',
			'type': 'date',
			'field': 'dateWritten',
		}),
		'encounter': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier',
			'type': 'reference',
			'field': 'encounter',
			'target': ['Encounter', 'EpisodeOfCare'],
		}),
		'identifier': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier',
			'type': 'token',
			'field': 'identifier',
		}),
		'patient': new SearchParameterDefinition({
			'description': 'Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for',
			'type': 'reference',
			'field': 'patient',
			'target': ['Patient', 'Group'],
		}),
		'prescriber': new SearchParameterDefinition({
			'description': 'Who authorized the vision prescription',
			'type': 'reference',
			'field': 'prescriber',
			'target': ['Practitioner', 'PractitionerRole'],
		}),
		'status': new SearchParameterDefinition({
			'description': 'The status of the vision prescription',
			'type': 'token',
			'field': 'status',
		}),
	},
}
