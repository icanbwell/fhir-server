{% macro lower_case_first_letter(text) %}
    {{- text[0]|lower}}{{text[1:] -}}
{% endmacro %}
{% macro upper_case_first_letter(text) %}
    {{- text[0]|upper}}{{text[1:] -}}
{% endmacro %}
// ------ This code is generated by a code generator.  Do not edit. ------

// noinspection JSUnusedLocalSymbols
module.exports = {
    Query: {
        // noinspection JSUnusedLocalSymbols
        {{ lower_case_first_letter(fhir_entity.plural_name) -}}: async (parent, args, context, info) => {
            return await context.dataApi.getResourcesBundle(
                parent,
                args,
                context,
                info,
                '{{ fhir_entity.cleaned_name }}'
            );
        }
    },
    {{ fhir_entity.graphqlv2_type }}: {
        __resolveReference: async (reference, context, info) => {
            return await context.dataApi.resolveEntityByReference(
                reference,
                context,
                info,
                '{{ fhir_entity.cleaned_name }}'
            );
        }
    },
{% for property in fhir_entity.properties %}
{% if not property.is_v2_supported %}
{% if (property.reference_target_resources | length > 1) %}
    {{fhir_entity.cleaned_name}}{{ upper_case_first_letter(property.name) }}{{ upper_case_first_letter(property.name_suffix) if property.name_suffix is not none }}: {
        __resolveType (obj, context, info) {
            return context.dataApi.resolveType(obj, context, info);
        }
    },
{% endif -%}
{% endif %}
{% endfor %}
{% for property in fhir_entity.properties %}
    {% if not property.is_v2_supported %}
    {% if property.reference_target_resources %}
    {{fhir_entity.cleaned_name}}{{ upper_case_first_letter(property.name) }}{{ upper_case_first_letter(property.name_suffix) if property.name_suffix is not none }}Reference: {
        // noinspection JSUnusedLocalSymbols
        resource: async (parent, args, context, info) => {
            return await context.dataApi.findResourceByReference(
                parent,
                args,
                context,
                info,
                parent
            );
        }
    },
    {% endif %}
    {% endif %}
{% endfor %}
};

