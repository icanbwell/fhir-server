# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: lint
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.19.0
        uses: actions/setup-node@v3
        with:
          node-version: 16.19.0
      - run: | # retry since mongo memory server fails to download sometimes
          yarn install || yarn install
      - run: npm run build --if-present
      - name: lint
        run: |
          npm run lint
  build:
    runs-on: ubuntu-latest
    name: test (chunk ${{ matrix.chunk }})
    strategy:
      matrix:
        shard: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.19.0
        uses: actions/setup-node@v3
        with:
          node-version: 16.19.0
      - run: | # retry since mongo memory server fails to download sometimes
          yarn install || yarn install
      - run: npm run build --if-present
      - name: jest
        run: |
          export NODE_OPTIONS="--max-old-space-size=10240"
          NODE_OPTIONS=--max-old-space-size=10240 node --max-old-space-size=10240 --optimize_for_size --gc_interval=100 --always-compact ./node_modules/.bin/jest --no-watchman --silent --logHeapUsage --runInBand --forceExit --shard=${{ matrix.shard }}/${{ strategy.job-total }} --coverage
        env:
          NODE_OPTIONS: "--max-old-space-size=10240"
      - name: Rename coverage file name
        run: mv coverage/coverage-final.json coverage/${{matrix.shard}}.json
      - name: Upload coverage file
        uses: actions/upload-artifact@v3
        with:
          name: coverage-artifacts
          path: coverage/
  sonarqube:
    name: Sonar Qube
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Download coverage files
        uses: actions/download-artifact@v3
        with:
          name: coverage-artifacts
          path: coverage
      - name: Merge Code Coverage files
        run: |
          npx nyc merge coverage/ merged-output/merged-coverage.json
          npx nyc report -t merged-output --report-dir merged-cov-report --reporter=lcov
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
