services:
  fhir:
    depends_on:
      - mongo
      - keycloak
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: development
    environment:
      SHUTDOWN_DELAY_MS: 1000
      SERVER_PORT: 3000
      MONGO_DB_NAME: fhir
      MONGO_URL: 'mongodb://mongo:27017?appName=fhir-server'
      AUDIT_EVENT_MONGO_DB_NAME: fhir
      AUDIT_EVENT_MONGO_URL: mongodb://mongo:27017
      RESOURCE_SERVER: http://localhost:3000/
      AUTH_SERVER_URI: http://myauthzserver.com
      AUTH_CONFIGURATION_URI: http://keycloak:8080/realms/master/.well-known/openid-configuration
      AUTH_JWKS_URL: http://keycloak:8080/realms/master/protocol/openid-connect/certs
      AUTH_CODE_FLOW_URL: http://keycloak:8080/realms/master/protocol/openid-connect/auth
      MAX_INDEX_NAME_LENGTH: 65
      ENV: local
      ENVIRONMENT: local
      ENABLE_MONGO_PROJECTIONS_IN_GRAPHQL: 0
      ENABLE_MONGO_PROJECTIONS_IN_GRAPHQLV2: 0
      MONGO_TIMEOUT: 30000
      LOGLEVEL: 'INFO'
      ENABLE_GRAPHQL: 1
      NODE_ENV: 'development'
      EXTERNAL_AUTH_JWKS_URLS: ''
      EXTERNAL_AUTH_WELL_KNOWN_URLS: ''
      SET_INDEX_HINTS: 0
      CREATE_INDEX_ON_COLLECTION_CREATION: 1
      RETURN_BUNDLE: '1'
      USE_TWO_STEP_SEARCH_OPTIMIZATION: '0'
      LOG_EXCLUDE_RESOURCES: 'Person,Patient'
      STREAM_RESPONSE: '1'
      LOG_STREAM_STEPS: '0'
      ENABLE_EVENTS_KAFKA: '1'
      ENABLE_BULK_EXPORT_KAFKA_EVENTS: '1'
      ENABLE_FHIR_OPERATION_USAGE_KAFKA_EVENTS: 1
      ENABLE_KAFKA_HEALTHCHECK: '1'
      KAFKA_CLIENT_ID: 'fhir-server'
      KAFKA_URLS: 'kafka:9092'
      KAFKA_MAX_RETRY: 3
      AUTH_CUSTOM_USERNAME: "cognito:username,preferred_username"
      AUTH_CUSTOM_GROUP: "cognito:groups,groups"
      AUTH_CUSTOM_SCOPE: "custom:scope"
      AUTH_REMOVE_SCOPE_PREFIX: "fhir/dev/"
      VALIDATE_SCHEMA: "1"
      PERSON_MATCHING_SERVICE_URL: ""
      WHITELIST: "http://localhost:5051"
      GRIDFS_RESOURCES: "DocumentReference"
      ENABLE_ACCESS_TAG_UPDATE: '0'
      ENABLE_GRAPHQL_PLAYGROUND: '1'
      ENABLE_GRAPHQLV2_PLAYGROUND: '1'
      ENABLE_GRAPHQLV2: '1'
      ENABLE_CONSENTED_PROA_DATA_ACCESS: '1'
      ENABLE_HIE_TREATMENT_RELATED_DATA_ACCESS: '1'
      # FHIR_VALIDATION_URL: 'http://hapi-fhir-server:8080/fhir'
      ENABLE_STATS_ENDPOINT: '1'
      FHIR_SERVER_UI_URL: 'http://localhost:5051'
      REDIRECT_TO_NEW_UI: '1'
      KAFKAJS_NO_PARTITIONER_WARNING: '1'
      ENABLE_BULK_EXPORT: '1'
      ENABLE_MEMORY_CHECK: '1'
      CONTAINER_MEM_REQUEST: 1000000000
      NO_OF_REQUESTS_PER_POD: 10
      ENABLE_VULCAN_IG_QUERY: 'true'
      REQUIRED_AUDIT_EVENT_FILTERS: 'date'
      CLIENTS_WITH_DATA_CONNECTION_VIEW_CONTROL: 'client'
      PRE_SAVE_CODING_ID_UPDATE_RESOURCES: 'Binary,Observation'
      ENABLE_SWAGGER_DOC: 1
      HOST_SERVER: "http://localhost:3000"
    ports:
      - '3000:3000'
    volumes:
      - ./src:/srv/src/src
      - ./package.json:/srv/src/package.json
      - ./yarn.lock:/srv/src/yarn.lock
    command: yarn run dev
    healthcheck:
      test: [ 'CMD-SHELL', 'wget --spider --quiet localhost:3000/health || exit 1' ]

  mongo:
    image: mongo:8.0.12
    ports:
      - '27017:27017'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongo:27017/test --quiet

  keycloak:
    # https://github.com/keycloak/keycloak/releases
    image: quay.io/keycloak/keycloak:26.3.2
    environment:
      # Enable HTTP for development
      KC_HOSTNAME: localhost
      KC_HTTP_ENABLED: true
      KC_HTTPS_ENABLED: false
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_FEATURES: dynamic-scopes
      # Keycloak UI creds
      KC_BOOTSTRAP_ADMIN_USERNAME: admin-user
      KC_BOOTSTRAP_ADMIN_PASSWORD: password
      # This is the service account that will be created in the realm
      CLIENT_ID: bwell-client-id
      CLIENT_SECRET: bwell-secret
      SERVICE_ACCOUNT_NAME: service-account
      SERVICE_ACCOUNT_PASSWORD: password
      SERVICE_ACCOUNT_SCOPE: user/*.* access/*.*
      # This is the user and password that will be created in the realm for patient scope token
      MY_USER_NAME: patient
      MY_USER_PASSWORD: password
      MY_USER_SCOPE: user/*.* access/*.* patient/*.*
      MY_USER_TOKEN_USERNAME: patient
      MY_USER_CLIENT_PERSON_ID: 0b2ad38a-20bc-5cf5-9739-13f242b05892
      MY_USER_CLIENT_PATIENT_ID: 22aa18af-af51-5799-bc55-367c22c85407
      MY_USER_BWELL_PERSON_ID: 0eb80391-0f61-5ce6-b221-a5428f2f38a7
      MY_USER_BWELL_PATIENT_ID: 668d0748-1484-4bba-9cbe-0faf0de8965c
      # This is the user and password that will be created in the realm for admin scope token
      MY_ADMIN_USER_NAME: admin
      MY_ADMIN_USER_PASSWORD: password
      MY_ADMIN_USER_SCOPE: user/*.* access/*.* admin/*.*
      MY_ADMIN_USER_TOKEN_USERNAME: admin
    ports:
      - "8080:8080"
    command: ["start-dev", "--import-realm", "--verbose"]
    volumes:
      - ./keycloak-config/realm-import.json:/opt/keycloak/data/import/realm-import.json

  zookeeper:
    image: zookeeper:3.9.1
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: on-failure
    healthcheck:
      test: [ 'CMD-SHELL', 'echo ruok | nc -w 2 zookeeper 2181' ]

  kafka:
    image: apache/kafka:3.5.1
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKAJS_NO_PARTITIONER_WARNING=1
    depends_on:
      - zookeeper
    healthcheck:
      test:
        [
          'CMD',
          'bash',
          '-c',
          'unset',
          'JMX_PORT',
          ';',
          'kafka-topics.sh',
          '--zookeeper',
          'zookeeper:2181',
          '--list',
        ]

  # kafkaUI:
  #   image: provectuslabs/kafka-ui
  #   ports:
  #     - '9000:8080'
  #   environment:
  #     - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
  #     - 'JVM_OPTS=-Xms32M -Xmx64M'
  #     - SERVER_SERVLET_CONTEXT_PATH=/

  # hapi-fhir-server:
  #   image: hapiproject/hapi:v6.10.1
  #   container_name: hapi-fhir-server
  #   environment:
  #     - hapi.fhir.enable_repository_validating_interceptor=true
  #     - hapi.fhir.ig_runtime_upload_enabled=true
  #     - hapi.fhir.local_base_urls=https://hapi.fhir.org/baseR4,https://fhir.simplifier.net/bwellFHIRProfiles
  #   ports:
  #     - "3001:8080"

volumes:
  mongo_data:
